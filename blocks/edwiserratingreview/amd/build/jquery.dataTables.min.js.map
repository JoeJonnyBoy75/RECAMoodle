{"version":3,"file":"jquery.dataTables.min.js","sources":["../src/jquery.dataTables.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable no-undef */\n/* eslint-disable no-tabs*/\n/* eslint-disable no-console*/\n/* eslint-disable no-labels*/\n/* eslint-disable no-extend-native*/\n/* eslint-disable no-unexpected-multiline*/\n/* eslint-disable jsdoc/check-param-names*/\n/* eslint-disable max-len*/\n/* eslint-disable no-mixed-spaces-and-tabs*/\n/* eslint-disable jsdoc/require-param-type*/\n/* eslint-disable computed-property-spacing*/\n\n/* ! DataTables 1.12.1\n * Â©2008-2022 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     DataTables\n * @description Paginate, search and order HTML tables\n * @version     1.12.1\n * @author      SpryMedia Ltd\n * @contact     www.datatables.net\n * @copyright   SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/* jslint evil: true, undef: true, browser: true */\n/* globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/\n\ndefine(['jquery'], function($) {\n\t\"use strict\";\n\n\tvar DataTable = function(selector, options) {\n\t\t// When creating with `new`, create a new DataTable, returning the API instance\n\t\tif (this instanceof DataTable) {\n\t\t\treturn $(selector).DataTable(options);\n\t\t} else {\n\t\t\t// Argument switching\n\t\t\toptions = selector;\n\t\t}\n\n\t\t/**\n\t\t * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n\t\t * return the resulting jQuery object.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n\t\t *    criterion (\"applied\") or all TR elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {object} jQuery object, filtered by the given selector.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Highlight every second row\n\t\t *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to rows with 'Webkit' in them, add a background colour and then\n\t\t *      // remove the filter, thus highlighting the 'Webkit' rows only.\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\n\t\t *      oTable.fnFilter('');\n\t\t *    } );\n\t\t */\n\t\tthis.$ = function(sSelector, oOpts) {\n\t\t\treturn this.api(true).$(sSelector, oOpts);\n\t\t};\n\n\n\t\t/**\n\t\t * Almost identical to $ in operation, but in this case returns the data for the matched\n\t\t * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n\t\t * rather than any descendants, so the data can be obtained for the row/cell. If matching\n\t\t * rows are found, the data returned is the original data array/object that was used to\n\t\t * create the row (or a generated array if from a DOM source).\n\t\t *\n\t\t * This method is often useful in-combination with $ where both functions are given the\n\t\t * same parameters and the array indexes will match identically.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n\t\t *    criterion (\"applied\") or all elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {array} Data for the matched elements. If any elements, as a result of the\n\t\t *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\n\t\t *    entry in the array.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the data from the first row in the table\n\t\t *      var data = oTable._('tr:first');\n\t\t *\n\t\t *      // Do something useful with the data\n\t\t *      alert( \"First cell is: \"+data[0] );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to 'Webkit' and get all data for\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      var data = oTable._('tr', {\"search\": \"applied\"});\n\t\t *\n\t\t *      // Do something with the data\n\t\t *      alert( data.length+\" rows matched the search\" );\n\t\t *    } );\n\t\t */\n\t\tthis._ = function(sSelector, oOpts) {\n\t\t\treturn this.api(true).rows(sSelector, oOpts).data();\n\t\t};\n\n\n\t\t/**\n\t\t * Create a DataTables Api instance, with the currently selected tables for\n\t\t * the Api's context.\n\t\t * @param {boolean} [traditional=false] Set the API instance's context to be\n\t\t *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\n\t\t *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\n\t\t *   or if all tables captured in the jQuery object should be used.\n\t\t * @return {DataTables.Api}\n\t\t */\n\t\tthis.api = function(traditional) {\n\t\t\treturn traditional ?\n\t\t\t\tnew _Api(\n\t\t\t\t\t_fnSettingsFromNode(this[ _ext.iApiIndex ])\n\t\t\t\t) :\n\t\t\t\tnew _Api(this);\n\t\t};\n\n\n\t\t/**\n\t\t * Add a single new row or multiple rows of data to the table. Please note\n\t\t * that this is suitable for client-side processing only - if you are using\n\t\t * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n\t\t * must add it to the data source, i.e. the server-side, through an Ajax call.\n\t\t *  @param {array|object} data The data to be added to the table. This can be:\n\t\t *    <ul>\n\t\t *      <li>1D array of data - add a single row with the data provided</li>\n\t\t *      <li>2D array of arrays - add multiple rows in a single call</li>\n\t\t *      <li>object - data object when using <i>mData</i></li>\n\t\t *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n\t\t *    </ul>\n\t\t *  @param {bool} [redraw=true] redraw the table or not\n\t\t *  @returns {array} An array of integers, representing the list of indexes in\n\t\t *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\n\t\t *    the table.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    // Global var for counter\n\t\t *    var giCount = 2;\n\t\t *\n\t\t *    $(document).ready(function() {\n\t\t *      $('#example').dataTable();\n\t\t *    } );\n\t\t *\n\t\t *    function fnClickAddRow() {\n\t\t *      $('#example').dataTable().fnAddData( [\n\t\t *        giCount+\".1\",\n\t\t *        giCount+\".2\",\n\t\t *        giCount+\".3\",\n\t\t *        giCount+\".4\" ]\n\t\t *      );\n\t\t *\n\t\t *      giCount++;\n\t\t *    }\n\t\t */\n\t\tthis.fnAddData = function(data, redraw) {\n\t\t\tvar api = this.api(true);\n\n\t\t\t/* Check if we want to add multiple rows or not */\n\t\t\tvar rows = Array.isArray(data) && (Array.isArray(data[0]) || $.isPlainObject(data[0])) ?\n\t\t\t\tapi.rows.add(data) :\n\t\t\t\tapi.row.add(data);\n\n\t\t\tif (redraw === undefined || redraw) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\n\t\t\treturn rows.flatten().toArray();\n\t\t};\n\n\n\t\t/**\n\t\t * This function will make DataTables recalculate the column sizes, based on the data\n\t\t * contained in the table and the sizes applied to the columns (in the DOM, CSS or\n\t\t * through the sWidth parameter). This can be useful when the width of the table's\n\t\t * parent element changes (for example a window resize).\n\t\t *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable( {\n\t\t *        \"sScrollY\": \"200px\",\n\t\t *        \"bPaginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      $(window).on('resize', function () {\n\t\t *        oTable.fnAdjustColumnSizing();\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnAdjustColumnSizing = function(bRedraw) {\n\t\t\tvar api = this.api(true).columns.adjust();\n\t\t\tvar settings = api.settings()[0];\n\t\t\tvar scroll = settings.oScroll;\n\n\t\t\tif (bRedraw === undefined || bRedraw) {\n\t\t\t\tapi.draw(false);\n\t\t\t} else if (scroll.sX !== \"\" || scroll.sY !== \"\") {\n\t\t\t\t/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n\t\t\t\t_fnScrollDraw(settings);\n\t\t\t}\n\t\t};\n\n\n\t\t/**\n\t\t * Quickly and simply clear a table\n\t\t *  @param {bool} [bRedraw=true] redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n\t\t *      oTable.fnClearTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClearTable = function(bRedraw) {\n\t\t\tvar api = this.api(true).clear();\n\n\t\t\tif (bRedraw === undefined || bRedraw) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t};\n\n\n\t\t/**\n\t\t * The exact opposite of 'opening' a row, this function will close any rows which\n\t\t * are currently 'open'.\n\t\t *  @param {node} nTr the table row to 'close'\n\t\t *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClose = function(nTr) {\n\t\t\tthis.api(true).row(nTr).child.hide();\n\t\t};\n\n\n\t\t/**\n\t\t * Remove a row for the table\n\t\t *  @param {mixed} target The index of the row from aoData to be deleted, or\n\t\t *    the TR element you want to delete\n\t\t *  @param {function|null} [callBack] Callback function\n\t\t * @param callback\n\t\t *  @param {bool} [redraw=true] Redraw the table or not\n\t\t *  @returns {array} The row that was deleted\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately remove the first row\n\t\t *      oTable.fnDeleteRow( 0 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnDeleteRow = function(target, callback, redraw) {\n\t\t\tvar api = this.api(true);\n\t\t\tvar rows = api.rows(target);\n\t\t\tvar settings = rows.settings()[0];\n\t\t\tvar data = settings.aoData[ rows[0][0] ];\n\n\t\t\trows.remove();\n\n\t\t\tif (callback) {\n\t\t\t\tcallback.call(this, settings, data);\n\t\t\t}\n\n\t\t\tif (redraw === undefined || redraw) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\n\t\t/**\n\t\t * Restore the table to it's original state in the DOM by removing all of DataTables\n\t\t * enhancements, alterations to the DOM structure of the table and event listeners.\n\t\t *  @param {boolean} [remove=false] Completely remove the table from the DOM\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnDestroy();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDestroy = function(remove) {\n\t\t\tthis.api(true).destroy(remove);\n\t\t};\n\n\n\t\t/**\n\t\t * Redraw the table\n\t\t *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n\t\t *      oTable.fnDraw();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDraw = function(complete) {\n\t\t\t// Note that this isn't an exact match to the old call to _fnDraw - it takes\n\t\t\t// into account the new data, but can hold position.\n\t\t\tthis.api(true).draw(complete);\n\t\t};\n\n\n\t\t/**\n\t\t * Filter the input based on data\n\t\t *  @param {string} sInput String to filter the table on\n\t\t *  @param {int|null} [iColumn] Column to limit filtering to\n\t\t *  @param {bool} [bRegex=false] Treat as regular expression or not\n\t\t *  @param {bool} [bSmart=true] Perform smart filtering or not\n\t\t *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n\t\t *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sometime later - filter...\n\t\t *      oTable.fnFilter( 'test string' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnFilter = function(sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive) {\n\t\t\tvar api = this.api(true);\n\n\t\t\tif (iColumn === null || iColumn === undefined) {\n\t\t\t\tapi.search(sInput, bRegex, bSmart, bCaseInsensitive);\n\t\t\t} else {\n\t\t\t\tapi.column(iColumn).search(sInput, bRegex, bSmart, bCaseInsensitive);\n\t\t\t}\n\n\t\t\tapi.draw();\n\t\t};\n\n\n\t\t/**\n\t\t * Get the data for the whole table, an individual row or an individual cell based on the\n\t\t * provided parameters.\n\t\t *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\n\t\t *    a TR node then the data source for the whole row will be returned. If given as a\n\t\t *    TD/TH cell node then iCol will be automatically calculated and the data for the\n\t\t *    cell returned. If given as an integer, then this is treated as the aoData internal\n\t\t *    data index for the row (see fnGetPosition) and the data for that row used.\n\t\t *  @param {int} [col] Optional column index that you want the data of.\n\t\t *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n\t\t *    returned. If mRow is defined, just data for that row, and is iCol is\n\t\t *    defined, only data for the designated cell is returned.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    // Row data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('tr').click( function () {\n\t\t *        var data = oTable.fnGetData( this );\n\t\t *        // ... do something with the array / object of data for the row\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Individual cell data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('td').click( function () {\n\t\t *        var sData = oTable.fnGetData( this );\n\t\t *        alert( 'The cell clicked on had the value of '+sData );\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetData = function(src, col) {\n\t\t\tvar api = this.api(true);\n\n\t\t\tif (src !== undefined) {\n\t\t\t\tvar type = src.nodeName ? src.nodeName.toLowerCase() : '';\n\n\t\t\t\treturn col !== undefined || type == 'td' || type == 'th' ?\n\t\t\t\t\tapi.cell(src, col).data() :\n\t\t\t\t\tapi.row(src).data() || null;\n\t\t\t}\n\n\t\t\treturn api.data().toArray();\n\t\t};\n\n\n\t\t/**\n\t\t * Get an array of the TR nodes that are used in the table's body. Note that you will\n\t\t * typically want to use the '$' API method in preference to this as it is more\n\t\t * flexible.\n\t\t *  @param {int} [iRow] Optional row index for the TR element you want\n\t\t *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n\t\t *    in the table's body, or iRow is defined, just the TR element requested.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the nodes from the table\n\t\t *      var nNodes = oTable.fnGetNodes( );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetNodes = function(iRow) {\n\t\t\tvar api = this.api(true);\n\n\t\t\treturn iRow !== undefined ?\n\t\t\t\tapi.row(iRow).node() :\n\t\t\t\tapi.rows().nodes().flatten().toArray();\n\t\t};\n\n\n\t\t/**\n\t\t * Get the array indexes of a particular cell from it's DOM element\n\t\t * and column index including hidden columns\n\t\t *  @param {node} node this can either be a TR, TD or TH in the table's body\n\t\t *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n\t\t *    if given as a cell, an array of [row index, column index (visible),\n\t\t *    column index (all)] is given.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      $('#example tbody td').click( function () {\n\t\t *        // Get the position of the current data from the node\n\t\t *        var aPos = oTable.fnGetPosition( this );\n\t\t *\n\t\t *        // Get the data array for this row\n\t\t *        var aData = oTable.fnGetData( aPos[0] );\n\t\t *\n\t\t *        // Update the data array and return the value\n\t\t *        aData[ aPos[1] ] = 'clicked';\n\t\t *        this.innerHTML = 'clicked';\n\t\t *      } );\n\t\t *\n\t\t *      // Init DataTables\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetPosition = function(node) {\n\t\t\tvar api = this.api(true);\n\t\t\tvar nodeName = node.nodeName.toUpperCase();\n\n\t\t\tif (nodeName == 'TR') {\n\t\t\t\treturn api.row(node).index();\n\t\t\t} else if (nodeName == 'TD' || nodeName == 'TH') {\n\t\t\t\tvar cell = api.cell(node).index();\n\n\t\t\t\treturn [\n\t\t\t\t\tcell.row,\n\t\t\t\t\tcell.columnVisible,\n\t\t\t\t\tcell.column\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\n\t\t/**\n\t\t * Check to see if a row is 'open' or not.\n\t\t *  @param {node} nTr the table row to check\n\t\t *  @returns {boolean} true if the row is currently open, false otherwise\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnIsOpen = function(nTr) {\n\t\t\treturn this.api(true).row(nTr).child.isShown();\n\t\t};\n\n\n\t\t/**\n\t\t * This function will place a new row directly after a row which is currently\n\t\t * on display on the page, with the HTML contents that is passed into the\n\t\t * function. This can be used, for example, to ask for confirmation that a\n\t\t * particular record should be deleted.\n\t\t *  @param {node} nTr The table row to 'open'\n\t\t *  @param {string|node|jQuery} mHtml The HTML to put into the row\n\t\t *  @param {string} sClass Class to give the new TD cell\n\t\t *  @returns {node} The row opened. Note that if the table row passed in as the\n\t\t *    first parameter, is not found in the table, this method will silently\n\t\t *    return.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnOpen = function(nTr, mHtml, sClass) {\n\t\t\treturn this.api(true)\n\t\t\t\t.row(nTr)\n\t\t\t\t.child(mHtml, sClass)\n\t\t\t\t.show()\n\t\t\t\t.child()[0];\n\t\t};\n\n\n\t\t/**\n\t\t * Change the pagination - provides the internal logic for pagination in a simple API\n\t\t * function. With this function you can have a DataTables table go to the next,\n\t\t * previous, first or last pages.\n\t\t *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n\t\t *    or page number to jump to (integer), note that page 0 is the first page.\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnPageChange( 'next' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnPageChange = function(mAction, bRedraw) {\n\t\t\tvar api = this.api(true).page(mAction);\n\n\t\t\tif (bRedraw === undefined || bRedraw) {\n\t\t\t\tapi.draw(false);\n\t\t\t}\n\t\t};\n\n\n\t\t/**\n\t\t * Show a particular column\n\t\t *  @param {int} iCol The column whose display should be changed\n\t\t *  @param {bool} bShow Show (true) or hide (false) the column\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Hide the second column after initialisation\n\t\t *      oTable.fnSetColumnVis( 1, false );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSetColumnVis = function(iCol, bShow, bRedraw) {\n\t\t\tvar api = this.api(true).column(iCol).visible(bShow);\n\n\t\t\tif (bRedraw === undefined || bRedraw) {\n\t\t\t\tapi.columns.adjust().draw();\n\t\t\t}\n\t\t};\n\n\n\t\t/**\n\t\t * Get the settings for a particular table for external manipulation\n\t\t *  @returns {object} DataTables settings object. See\n\t\t *    {@link DataTable.models.oSettings}\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      var oSettings = oTable.fnSettings();\n\t\t *\n\t\t *      // Show an example parameter from the settings\n\t\t *      alert( oSettings._iDisplayStart );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSettings = function() {\n\t\t\treturn _fnSettingsFromNode(this[_ext.iApiIndex]);\n\t\t};\n\n\n\t\t/**\n\t\t * Sort the table by a particular column\n\t\t *  @param {int} iCol the data index to sort on. Note that this will not match the\n\t\t *    'display index' if you have hidden data entries\n\t\t * @param aaSort\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort immediately with columns 0 and 1\n\t\t *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSort = function(aaSort) {\n\t\t\tthis.api(true).order(aaSort).draw();\n\t\t};\n\n\n\t\t/**\n\t\t * Attach a sort listener to an element for a given column\n\t\t *  @param {node} nNode the element to attach the sort listener to\n\t\t *  @param {int} iColumn the column that a click on this node will sort on\n\t\t *  @param {function} [fnCallback] callback function when sort is run\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort on column 1, when 'sorter' is clicked on\n\t\t *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSortListener = function(nNode, iColumn, fnCallback) {\n\t\t\tthis.api(true).order.listener(nNode, iColumn, fnCallback);\n\t\t};\n\n\n\t\t/**\n\t\t * Update a table cell or row - this method will accept either a single value to\n\t\t * update the cell with, an array of values with one element for each column or\n\t\t * an object in the same format as the original data source. The function is\n\t\t * self-referencing in order to make the multi column updates easier.\n\t\t *  @param {object|array|string} mData Data to update the cell/row with\n\t\t *  @param {node|int} mRow TR element you want to update or the aoData index\n\t\t *  @param {int} [iColumn] The column to update, give as null or undefined to\n\t\t *    update a whole row.\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @param {bool} [bAction=true] Perform pre-draw actions or not\n\t\t *  @returns {int} 0 on success, 1 on error\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n\t\t *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\n\t\t *    } );\n\t\t */\n\t\tthis.fnUpdate = function(mData, mRow, iColumn, bRedraw, bAction) {\n\t\t\tvar api = this.api(true);\n\n\t\t\tif (iColumn === undefined || iColumn === null) {\n\t\t\t\tapi.row(mRow).data(mData);\n\t\t\t} else {\n\t\t\t\tapi.cell(mRow, iColumn).data(mData);\n\t\t\t}\n\n\t\t\tif (bAction === undefined || bAction) {\n\t\t\t\tapi.columns.adjust();\n\t\t\t}\n\n\t\t\tif (bRedraw === undefined || bRedraw) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\treturn 0;\n\t\t};\n\n\n\t\t/**\n\t\t * Provide a common method for plug-ins to check the version of DataTables being used, in order\n\t\t * to ensure compatibility.\n\t\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n\t\t *    formats \"X\" and \"X.Y\" are also acceptable.\n\t\t *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n\t\t *    version, or false if this version of DataTales is not suitable\n\t\t *  @method\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n\t\t *    } );\n\t\t */\n\t\tthis.fnVersionCheck = _ext.fnVersionCheck;\n\n\n\t\tvar _that = this;\n\t\tvar emptyInit = options === undefined;\n\t\tvar len = this.length;\n\n\t\tif (emptyInit) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tthis.oApi = this.internal = _ext.internal;\n\n\t\t// Extend with old style plug-in API methods\n\t\tfor (var fn in DataTable.ext.internal) {\n\t\t\tif (fn) {\n\t\t\t\tthis[fn] = _fnExternApiFunc(fn);\n\t\t\t}\n\t\t}\n\n\t\tthis.each(function() {\n\t\t\t// For each initialisation we want to give it a clean initialisation\n\t\t\t// object that can be bashed around\n\t\t\tvar o = {};\n\t\t\tvar oInit = len > 1 ? // Optimisation for single table case\n\t\t\t\t_fnExtend(o, options, true) :\n\t\t\t\toptions;\n\n\t\t\t/* global oInit,_that,emptyInit*/\n\t\t\tvar i = 0,\niLen, j, jLen, k, kLen;\n\t\t\tvar sId = this.getAttribute('id');\n\t\t\tvar bInitHandedOff = false;\n\t\t\tvar defaults = DataTable.defaults;\n\t\t\tvar $this = $(this);\n\n\n\t\t\t/* Sanity check */\n\t\t\tif (this.nodeName.toLowerCase() != 'table') {\n\t\t\t\t_fnLog(null, 0, 'Non-table node initialisation (' + this.nodeName + ')', 2);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/* Backwards compatibility for the defaults */\n\t\t\t_fnCompatOpts(defaults);\n\t\t\t_fnCompatCols(defaults.column);\n\n\t\t\t/* Convert the camel-case defaults to Hungarian */\n\t\t\t_fnCamelToHungarian(defaults, defaults, true);\n\t\t\t_fnCamelToHungarian(defaults.column, defaults.column, true);\n\n\t\t\t/* Setting up the initialisation object */\n\t\t\t_fnCamelToHungarian(defaults, $.extend(oInit, $this.data()), true);\n\n\n\t\t\t/* Check to see if we are re-initialising a table */\n\t\t\tvar allSettings = DataTable.settings;\n\t\t\tfor (i = 0, iLen = allSettings.length; i < iLen; i++) {\n\t\t\t\tvar s = allSettings[i];\n\n\t\t\t\t/* Base check on table node */\n\t\t\t\tif (\n\t\t\t\t\ts.nTable == this ||\n\t\t\t\t\t(s.nTHead && s.nTHead.parentNode == this) ||\n\t\t\t\t\t(s.nTFoot && s.nTFoot.parentNode == this)\n\t\t\t\t) {\n\t\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n\t\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\n\t\t\t\t\tif (emptyInit || bRetrieve) {\n\t\t\t\t\t\treturn s.oInstance;\n\t\t\t\t\t} else if (bDestroy) {\n\t\t\t\t\t\ts.oInstance.fnDestroy();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_fnLog(s, 0, 'Cannot reinitialise DataTable', 3);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t\t */\n\t\t\t\tif (s.sTableId == this.id) {\n\t\t\t\t\tallSettings.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Ensure the table has an ID - required for accessibility */\n\t\t\tif (sId === null || sId === \"\") {\n\t\t\t\tsId = \"DataTables_Table_\" + (DataTable.ext._unique++);\n\t\t\t\tthis.id = sId;\n\t\t\t}\n\n\t\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\t\tvar oSettings = $.extend(true, {}, DataTable.models.oSettings, {\n\t\t\t\t\"sDestroyWidth\": $this[0].style.width,\n\t\t\t\t\"sInstance\":     sId,\n\t\t\t\t\"sTableId\":      sId\n\t\t\t});\n\t\t\toSettings.nTable = this;\n\t\t\toSettings.oApi = _that.internal;\n\t\t\toSettings.oInit = oInit;\n\n\t\t\tallSettings.push(oSettings);\n\n\t\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\t\toSettings.oInstance = (_that.length === 1) ? _that : $this.dataTable();\n\n\t\t\t// Backwards compatibility, before we apply all the defaults\n\t\t\t_fnCompatOpts(oInit);\n\t\t\t_fnLanguageCompat(oInit.oLanguage);\n\n\t\t\t// If the length menu is given, but the init display length is not, use the length menu\n\t\t\tif (oInit.aLengthMenu && !oInit.iDisplayLength) {\n\t\t\t\toInit.iDisplayLength = Array.isArray(oInit.aLengthMenu[0]) ?\n\t\t\t\t\toInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\n\t\t\t}\n\n\t\t\t// Apply the defaults and init options to make a single init object will all\n\t\t\t// options defined from defaults and instance options.\n\t\t\toInit = _fnExtend($.extend(true, {}, defaults), oInit);\n\n\n\t\t\t// Map the initialisation options onto the settings object\n\t\t\t_fnMap(oSettings.oFeatures, oInit, [\n\t\t\t\t\"bPaginate\",\n\t\t\t\t\"bLengthChange\",\n\t\t\t\t\"bFilter\",\n\t\t\t\t\"bSort\",\n\t\t\t\t\"bSortMulti\",\n\t\t\t\t\"bInfo\",\n\t\t\t\t\"bProcessing\",\n\t\t\t\t\"bAutoWidth\",\n\t\t\t\t\"bSortClasses\",\n\t\t\t\t\"bServerSide\",\n\t\t\t\t\"bDeferRender\"\n\t\t\t]);\n\t\t\t_fnMap(oSettings, oInit, [\n\t\t\t\t\"asStripeClasses\",\n\t\t\t\t\"ajax\",\n\t\t\t\t\"fnServerData\",\n\t\t\t\t\"fnFormatNumber\",\n\t\t\t\t\"sServerMethod\",\n\t\t\t\t\"aaSorting\",\n\t\t\t\t\"aaSortingFixed\",\n\t\t\t\t\"aLengthMenu\",\n\t\t\t\t\"sPaginationType\",\n\t\t\t\t\"sAjaxSource\",\n\t\t\t\t\"sAjaxDataProp\",\n\t\t\t\t\"iStateDuration\",\n\t\t\t\t\"sDom\",\n\t\t\t\t\"bSortCellsTop\",\n\t\t\t\t\"iTabIndex\",\n\t\t\t\t\"fnStateLoadCallback\",\n\t\t\t\t\"fnStateSaveCallback\",\n\t\t\t\t\"renderer\",\n\t\t\t\t\"searchDelay\",\n\t\t\t\t\"rowId\",\n\t\t\t\t[\"iCookieDuration\", \"iStateDuration\"], // Backwards compat\n\t\t\t\t[\"oSearch\", \"oPreviousSearch\"],\n\t\t\t\t[\"aoSearchCols\", \"aoPreSearchCols\"],\n\t\t\t\t[\"iDisplayLength\", \"_iDisplayLength\"]\n\t\t\t]);\n\t\t\t_fnMap(oSettings.oScroll, oInit, [\n\t\t\t\t[\"sScrollX\", \"sX\"],\n\t\t\t\t[\"sScrollXInner\", \"sXInner\"],\n\t\t\t\t[\"sScrollY\", \"sY\"],\n\t\t\t\t[\"bScrollCollapse\", \"bCollapse\"]\n\t\t\t]);\n\t\t\t_fnMap(oSettings.oLanguage, oInit, \"fnInfoCallback\");\n\n\t\t\t/* Callback functions which are array driven */\n\t\t\t_fnCallbackReg(oSettings, 'aoDrawCallback', oInit.fnDrawCallback, 'user');\n\t\t\t_fnCallbackReg(oSettings, 'aoServerParams', oInit.fnServerParams, 'user');\n\t\t\t_fnCallbackReg(oSettings, 'aoStateSaveParams', oInit.fnStateSaveParams, 'user');\n\t\t\t_fnCallbackReg(oSettings, 'aoStateLoadParams', oInit.fnStateLoadParams, 'user');\n\t\t\t_fnCallbackReg(oSettings, 'aoStateLoaded', oInit.fnStateLoaded, 'user');\n\t\t\t_fnCallbackReg(oSettings, 'aoRowCallback', oInit.fnRowCallback, 'user');\n\t\t\t_fnCallbackReg(oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow, 'user');\n\t\t\t_fnCallbackReg(oSettings, 'aoHeaderCallback', oInit.fnHeaderCallback, 'user');\n\t\t\t_fnCallbackReg(oSettings, 'aoFooterCallback', oInit.fnFooterCallback, 'user');\n\t\t\t_fnCallbackReg(oSettings, 'aoInitComplete', oInit.fnInitComplete, 'user');\n\t\t\t_fnCallbackReg(oSettings, 'aoPreDrawCallback', oInit.fnPreDrawCallback, 'user');\n\n\t\t\toSettings.rowIdFn = _fnGetObjectDataFn(oInit.rowId);\n\n\t\t\t/* Browser support detection */\n\t\t\t_fnBrowserDetect(oSettings);\n\n\t\t\tvar oClasses = oSettings.oClasses;\n\n\t\t\t$.extend(oClasses, DataTable.ext.classes, oInit.oClasses);\n\t\t\t$this.addClass(oClasses.sTable);\n\n\n\t\t\tif (oSettings.iInitDisplayStart === undefined) {\n\t\t\t\t/* Display start point, taking into account the save saving */\n\t\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t\t}\n\n\t\t\tif (oInit.iDeferLoading !== null) {\n\t\t\t\toSettings.bDeferLoading = true;\n\t\t\t\tvar tmp = Array.isArray(oInit.iDeferLoading);\n\t\t\t\toSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n\t\t\t\toSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n\t\t\t}\n\n\t\t\t/* Language definitions */\n\t\t\tvar oLanguage = oSettings.oLanguage;\n\t\t\t$.extend(true, oLanguage, oInit.oLanguage);\n\n\t\t\tif (oLanguage.sUrl) {\n\t\t\t\t/* Get the language definitions from a file - because this Ajax call makes the language\n\t\t\t\t * get async to the remainder of this function we use bInitHandedOff to indicate that\n\t\t\t\t * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n\t\t\t\t */\n\t\t\t\t$.ajax({\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\turl: oLanguage.sUrl,\n\t\t\t\t\tsuccess: function(json) {\n\t\t\t\t\t\t_fnCamelToHungarian(defaults.oLanguage, json);\n\t\t\t\t\t\t_fnLanguageCompat(json);\n\t\t\t\t\t\t$.extend(true, oLanguage, json, oSettings.oInit.oLanguage);\n\n\t\t\t\t\t\t_fnCallbackFire(oSettings, null, 'i18n', [oSettings]);\n\t\t\t\t\t\t_fnInitialise(oSettings);\n\t\t\t\t\t},\n\t\t\t\t\terror: function() {\n\t\t\t\t\t\t// Error occurred loading language file, continue on as best we can\n\t\t\t\t\t\t_fnInitialise(oSettings);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tbInitHandedOff = true;\n\t\t\t} else {\n\t\t\t\t_fnCallbackFire(oSettings, null, 'i18n', [oSettings]);\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Stripes\n\t\t\t */\n\t\t\tif (oInit.asStripeClasses === null) {\n\t\t\t\toSettings.asStripeClasses = [\n\t\t\t\t\toClasses.sStripeOdd,\n\t\t\t\t\toClasses.sStripeEven\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t/* Remove row stripe classes if they are already on the table row */\n\t\t\tvar stripeClasses = oSettings.asStripeClasses;\n\t\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\n\t\t\tif ($.inArray(true, $.map(stripeClasses, function(el, i) {\n\t\t\t\treturn rowOne.hasClass(el);\n\t\t\t})) !== -1) {\n\t\t\t\t$('tbody tr', this).removeClass(stripeClasses.join(' '));\n\t\t\t\toSettings.asDestroyStripes = stripeClasses.slice();\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Columns\n\t\t\t * See if we should load columns automatically or use defined ones\n\t\t\t */\n\t\t\tvar anThs = [];\n\t\t\tvar aoColumnsInit;\n\t\t\tvar nThead = this.getElementsByTagName('thead');\n\t\t\tif (nThead.length !== 0) {\n\t\t\t\t_fnDetectHeader(oSettings.aoHeader, nThead[0]);\n\t\t\t\tanThs = _fnGetUniqueThs(oSettings);\n\t\t\t}\n\n\t\t\t/* If not given a column array, generate one with nulls */\n\t\t\tif (oInit.aoColumns === null) {\n\t\t\t\taoColumnsInit = [];\n\t\t\t\tfor (i = 0, iLen = anThs.length; i < iLen; i++) {\n\t\t\t\t\taoColumnsInit.push(null);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\taoColumnsInit = oInit.aoColumns;\n\t\t\t}\n\n\t\t\t/* Add the columns */\n\t\t\tfor (i = 0, iLen = aoColumnsInit.length; i < iLen; i++) {\n\t\t\t\t_fnAddColumn(oSettings, anThs ? anThs[i] : null);\n\t\t\t}\n\n\t\t\t/* Apply the column definitions */\n\t\t\t_fnApplyColumnDefs(oSettings, oInit.aoColumnDefs, aoColumnsInit, function(iCol, oDef) {\n\t\t\t\t_fnColumnOptions(oSettings, iCol, oDef);\n\t\t\t});\n\n\t\t\t/* HTML5 attribute detection - build an mData object automatically if the\n\t\t\t * attributes are found\n\t\t\t */\n\t\t\tif (rowOne.length) {\n\t\t\t\tvar a = function(cell, name) {\n\t\t\t\t\treturn cell.getAttribute('data-' + name) !== null ? name : null;\n\t\t\t\t};\n\n\t\t\t\t$(rowOne[0]).children('th, td').each(function(i, cell) {\n\t\t\t\t\tvar col = oSettings.aoColumns[i];\n\n\t\t\t\t\tif (col.mData === i) {\n\t\t\t\t\t\tvar sort = a(cell, 'sort') || a(cell, 'order');\n\t\t\t\t\t\tvar filter = a(cell, 'filter') || a(cell, 'search');\n\n\t\t\t\t\t\tif (sort !== null || filter !== null) {\n\t\t\t\t\t\t\tcol.mData = {\n\t\t\t\t\t\t\t\t_:      i + '.display',\n\t\t\t\t\t\t\t\tsort:   sort !== null ? i + '.@data-' + sort : undefined,\n\t\t\t\t\t\t\t\ttype:   sort !== null ? i + '.@data-' + sort : undefined,\n\t\t\t\t\t\t\t\tfilter: filter !== null ? i + '.@data-' + filter : undefined\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t_fnColumnOptions(oSettings, i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tvar features = oSettings.oFeatures;\n\t\t\tvar loadedInit = function() {\n\t\t\t\t/*\n\t\t\t\t * Sorting\n\t\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler\n\t\t\t\t */\n\n\t\t\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\n\t\t\t\t// in case that has been altered, so the default sort reflects that option\n\t\t\t\tif (oInit.aaSorting === undefined) {\n\t\t\t\t\tvar sorting = oSettings.aaSorting;\n\t\t\t\t\tfor (i = 0, iLen = sorting.length; i < iLen; i++) {\n\t\t\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t\t\t * account, and also will apply sorting disabled classes if disabled\n\t\t\t\t */\n\t\t\t\t_fnSortingClasses(oSettings);\n\n\t\t\t\tif (features.bSort) {\n\t\t\t\t\t_fnCallbackReg(oSettings, 'aoDrawCallback', function() {\n\t\t\t\t\t\tif (oSettings.bSorted) {\n\t\t\t\t\t\t\tvar aSort = _fnSortFlatten(oSettings);\n\t\t\t\t\t\t\tvar sortedColumns = {};\n\n\t\t\t\t\t\t\t$.each(aSort, function(i, val) {\n\t\t\t\t\t\t\t\tsortedColumns[ val.src ] = val.dir;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t_fnCallbackFire(oSettings, null, 'order', [oSettings, aSort, sortedColumns]);\n\t\t\t\t\t\t\t_fnSortAria(oSettings);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t_fnCallbackReg(oSettings, 'aoDrawCallback', function() {\n\t\t\t\t\tif (oSettings.bSorted || _fnDataSource(oSettings) === 'ssp' || features.bDeferRender) {\n\t\t\t\t\t\t_fnSortingClasses(oSettings);\n\t\t\t\t\t}\n\t\t\t\t}, 'sc');\n\n\n\t\t\t\t/*\n\t\t\t\t * Final init\n\t\t\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t\t\t */\n\n\t\t\t\t// Work around for Webkit bug 83867 - store the caption-side before removing from doc\n\t\t\t\tvar captions = $this.children('caption').each(function() {\n\t\t\t\t\tthis._captionSide = $(this).css('caption-side');\n\t\t\t\t});\n\n\t\t\t\tvar thead = $this.children('thead');\n\t\t\t\tif (thead.length === 0) {\n\t\t\t\t\tthead = $('<thead/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\toSettings.nTHead = thead[0];\n\n\t\t\t\tvar tbody = $this.children('tbody');\n\t\t\t\tif (tbody.length === 0) {\n\t\t\t\t\ttbody = $('<tbody/>').insertAfter(thead);\n\t\t\t\t}\n\t\t\t\toSettings.nTBody = tbody[0];\n\n\t\t\t\tvar tfoot = $this.children('tfoot');\n\t\t\t\tif (tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\")) {\n\t\t\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\t\t\ttfoot = $('<tfoot/>').appendTo($this);\n\t\t\t\t}\n\n\t\t\t\tif (tfoot.length === 0 || tfoot.children().length === 0) {\n\t\t\t\t\t$this.addClass(oClasses.sNoFooter);\n\t\t\t\t} else if (tfoot.length > 0) {\n\t\t\t\t\toSettings.nTFoot = tfoot[0];\n\t\t\t\t\t_fnDetectHeader(oSettings.aoFooter, oSettings.nTFoot);\n\t\t\t\t}\n\n\t\t\t\t/* Check if there is data passing into the constructor */\n\t\t\t\tif (oInit.aaData) {\n\t\t\t\t\tfor (i = 0; i < oInit.aaData.length; i++) {\n\t\t\t\t\t\t_fnAddData(oSettings, oInit.aaData[ i ]);\n\t\t\t\t\t}\n\t\t\t\t} else if (oSettings.bDeferLoading || _fnDataSource(oSettings) == 'dom') {\n\t\t\t\t\t/* Grab the data from the page - only do this when deferred loading or no Ajax\n\t\t\t\t\t * source since there is no point in reading the DOM data if we are then going\n\t\t\t\t\t * to replace it with Ajax data\n\t\t\t\t\t */\n\t\t\t\t\t_fnAddTr(oSettings, $(oSettings.nTBody).children('tr'));\n\t\t\t\t}\n\n\t\t\t\t/* Copy the data index array */\n\t\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\n\t\t\t\t/* Initialisation complete - table can be drawn */\n\t\t\t\toSettings.bInitialised = true;\n\n\t\t\t\t/* Check if we need to initialise the table (it might not have been handed off to the\n\t\t\t\t * language processor)\n\t\t\t\t */\n\t\t\t\tif (bInitHandedOff === false) {\n\t\t\t\t\t_fnInitialise(oSettings);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/* Must be done after everything which can be overridden by the state saving! */\n\t\t\t_fnCallbackReg(oSettings, 'aoDrawCallback', _fnSaveState, 'state_save');\n\n\t\t\tif (oInit.bStateSave) {\n\t\t\t\tfeatures.bStateSave = true;\n\t\t\t\t_fnLoadState(oSettings, oInit, loadedInit);\n\t\t\t} else {\n\t\t\t\tloadedInit();\n\t\t\t}\n\n\t\t});\n\t\t_that = null;\n\t\treturn this;\n\t};\n\n\n\t/*\n\t * It is useful to have variables which are scoped locally so only the\n\t * DataTables functions can access them and they don't leak into global space.\n\t * At the same time these functions are often useful over multiple files in the\n\t * core and API, so we list, or at least document, all variables which are used\n\t * by DataTables as private variables here. This also ensures that there is no\n\t * clashing of variable names and that they can easily referenced for reuse.\n\t */\n\n\n\t// Defined else where\n\t//  _selector_run\n\t//  _selector_opts\n\t//  _selector_first\n\t//  _selector_row_indexes\n\n\tvar _ext; // DataTable.ext\n\tvar _Api; // DataTable.Api\n\tvar _api_register; // DataTable.Api.register\n\tvar _api_registerPlural; // DataTable.Api.registerPlural\n\n\tvar _re_dic = {};\n\tvar _re_new_lines = /[\\r\\n\\u2028]/g;\n\tvar _re_html = /<.*?>/g;\n\n\t// This is not strict ISO8601 - Date.parse() is quite lax, although\n\t// implementations differ between browsers.\n\tvar _re_date = /^\\d{2,4}[\\.\\/\\-]\\d{1,2}[\\.\\/\\-]\\d{1,2}([T ]{1}\\d{1,2}[:\\.]\\d{2}([\\.:]\\d{2})?)?$/;\n\n\t// Escape regular expression special characters\n\tvar _re_escape_regex = new RegExp('(\\\\' + ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-'].join('|\\\\') + ')', 'g');\n\n\t// http://en.wikipedia.org/wiki/Foreign_exchange_market\n\t// - \\u20BD - Russian ruble.\n\t// - \\u20a9 - South Korean Won\n\t// - \\u20BA - Turkish Lira\n\t// - \\u20B9 - Indian Rupee\n\t// - R - Brazil (R$) and South Africa\n\t// - fr - Swiss Franc\n\t// - kr - Swedish krona, Norwegian krone and Danish krone\n\t// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n\t// - É - Bitcoin\n\t// - Î - Ethereum\n\t//   standards as thousands separators.\n\tvar _re_formatted_numeric = /['\\u00A0,$Â£â¬Â¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkÉÎ]/gi;\n\n\n\tvar _empty = function(d) {\n\t\treturn !d || d === true || d === '-' ? true : false;\n\t};\n\n\n\tvar _intVal = function(s) {\n\t\tvar integer = parseInt(s, 10);\n\t\treturn !isNaN(integer) && isFinite(s) ? integer : null;\n\t};\n\n\t// Convert from a formatted number with characters other than `.` as the\n\t// decimal place, to a Javascript number\n\tvar _numToDecimal = function(num, decimalPoint) {\n\t\t// Cache created regular expressions for speed as this function is called often\n\t\tif (!_re_dic[ decimalPoint ]) {\n\t\t\t_re_dic[ decimalPoint ] = new RegExp(_fnEscapeRegex(decimalPoint), 'g');\n\t\t}\n\t\treturn typeof num === 'string' && decimalPoint !== '.' ?\n\t\t\tnum.replace(/\\./g, '').replace(_re_dic[ decimalPoint ], '.') :\n\t\t\tnum;\n\t};\n\n\n\tvar _isNumber = function(d, decimalPoint, formatted) {\n\t\tvar strType = typeof d === 'string';\n\n\t\t// If empty return immediately so there must be a number if it is a\n\t\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\n\t\t// as a formatted number for currency\n\t\tif (_empty(d)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (decimalPoint && strType) {\n\t\t\td = _numToDecimal(d, decimalPoint);\n\t\t}\n\n\t\tif (formatted && strType) {\n\t\t\td = d.replace(_re_formatted_numeric, '');\n\t\t}\n\n\t\treturn !isNaN(parseFloat(d)) && isFinite(d);\n\t};\n\n\n\t// A string without HTML in it can be considered to be HTML still\n\tvar _isHtml = function(d) {\n\t\treturn _empty(d) || typeof d === 'string';\n\t};\n\n\n\tvar _htmlNumeric = function(d, decimalPoint, formatted) {\n\t\tif (_empty(d)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tvar html = _isHtml(d);\n\t\treturn !html ?\n\t\t\tnull :\n\t\t\t_isNumber(_stripHtml(d), decimalPoint, formatted) ?\n\t\t\t\ttrue :\n\t\t\t\tnull;\n\t};\n\n\n\tvar _pluck = function(a, prop, prop2) {\n\t\tvar out = [];\n\t\tvar i = 0,\nien = a.length;\n\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif (prop2 !== undefined) {\n\t\t\tfor (; i < ien; i++) {\n\t\t\t\tif (a[i] && a[i][ prop ]) {\n\t\t\t\t\tout.push(a[i][ prop ][ prop2 ]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (; i < ien; i++) {\n\t\t\t\tif (a[i]) {\n\t\t\t\t\tout.push(a[i][ prop ]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t};\n\n\n\t// Basically the same as _pluck, but rather than looping over `a` we use `order`\n\t// as the indexes to pick from `a`\n\tvar _pluck_order = function(a, order, prop, prop2) {\n\t\tvar out = [];\n\t\tvar i = 0,\nien = order.length;\n\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif (prop2 !== undefined) {\n\t\t\tfor (; i < ien; i++) {\n\t\t\t\tif (a[ order[i] ][ prop ]) {\n\t\t\t\t\tout.push(a[ order[i] ][ prop ][ prop2 ]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (; i < ien; i++) {\n\t\t\t\tout.push(a[ order[i] ][ prop ]);\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t};\n\n\n\tvar _range = function(len, start) {\n\t\tvar out = [];\n\t\tvar end;\n\n\t\tif (start === undefined) {\n\t\t\tstart = 0;\n\t\t\tend = len;\n\t\t} else {\n\t\t\tend = start;\n\t\t\tstart = len;\n\t\t}\n\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tout.push(i);\n\t\t}\n\n\t\treturn out;\n\t};\n\n\n\tvar _removeEmpty = function(a) {\n\t\tvar out = [];\n\n\t\tfor (var i = 0, ien = a.length; i < ien; i++) {\n\t\t\tif (a[i]) { // Careful - will remove all falsy values!\n\t\t\t\tout.push(a[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t};\n\n\n\tvar _stripHtml = function(d) {\n\t\treturn d.replace(_re_html, '');\n\t};\n\n\n\t/**\n\t * Determine if all values in the array are unique. This means we can short\n\t * cut the _unique method at the cost of a single loop. A sorted array is used\n\t * to easily check the values.\n\t *\n\t * @param  {array} src Source array\n\t * @return {boolean} true if all unique, false otherwise\n\t * @ignore\n\t */\n\tvar _areAllUnique = function(src) {\n\t\tif (src.length < 2) {\n\t\t\treturn true;\n\t\t}\n\n\t\tvar sorted = src.slice().sort();\n\t\tvar last = sorted[0];\n\n\t\tfor (var i = 1, ien = sorted.length; i < ien; i++) {\n\t\t\tif (sorted[i] === last) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tlast = sorted[i];\n\t\t}\n\n\t\treturn true;\n\t};\n\n\n\t/**\n\t * Find the unique elements in a source array.\n\t *\n\t * @param  {array} src Source array\n\t * @return {array} Array of unique items\n\t * @ignore\n\t */\n\tvar _unique = function(src) {\n\t\tif (_areAllUnique(src)) {\n\t\t\treturn src.slice();\n\t\t}\n\n\t\t// A faster unique method is to use object keys to identify used values,\n\t\t// but this doesn't work with arrays or objects, which we must also\n\t\t// consider. See jsperf.com/compare-array-unique-versions/4 for more\n\t\t// information.\n\t\tvar\n\t\t\tout = [],\n\t\t\tval,\n\t\t\ti,\nien = src.length,\n\t\t\tj,\nk = 0;\n\n\t\tagain: for (i = 0; i < ien; i++) {\n\t\t\tval = src[i];\n\n\t\t\tfor (j = 0; j < k; j++) {\n\t\t\t\tif (out[j] === val) {\n\t\t\t\t\tcontinue again;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tout.push(val);\n\t\t\tk++;\n\t\t}\n\n\t\treturn out;\n\t};\n\n\t// Surprisingly this is faster than [].concat.apply\n\t// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\n\tvar _flatten = function(out, val) {\n\t\tif (Array.isArray(val)) {\n\t\t\tfor (var i = 0; i < val.length; i++) {\n\t\t\t\t_flatten(out, val[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tout.push(val);\n\t\t}\n\n\t\treturn out;\n\t};\n\n\tvar _includes = function(search, start) {\n\t\tif (start === undefined) {\n\t\t\tstart = 0;\n\t\t}\n\n\t\treturn this.indexOf(search, start) !== -1;\n\t};\n\n\t// Array.isArray polyfill.\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\n\tif (!Array.isArray) {\n\t    Array.isArray = function(arg) {\n\t        return Object.prototype.toString.call(arg) === '[object Array]';\n\t    };\n\t}\n\n\tif (!Array.prototype.includes) {\n\t\tArray.prototype.includes = _includes;\n\t}\n\n\t// .trim() polyfill\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim\n\tif (!String.prototype.trim) {\n\t  String.prototype.trim = function() {\n\t    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\t  };\n\t}\n\n\tif (!String.prototype.includes) {\n\t\tString.prototype.includes = _includes;\n\t}\n\n\t/**\n\t * DataTables utility methods\n\t *\n\t * This namespace provides helper methods that DataTables uses internally to\n\t * create a DataTable, but which are not exclusively used only for DataTables.\n\t * These methods can be used by extension authors to save the duplication of\n\t * code.\n\t *\n\t *  @namespace\n\t */\n\tDataTable.util = {\n\t\t/**\n\t\t * Throttle the calls to a function. Arguments and context are maintained\n\t\t * for the throttled function.\n\t\t *\n\t\t * @param {function} fn Function to be called\n\t\t * @param {integer} freq Call frequency in mS\n\t\t * @return {function} Wrapped function\n\t\t */\n\t\tthrottle: function(fn, freq) {\n\t\t\tvar\n\t\t\t\tfrequency = freq !== undefined ? freq : 200,\n\t\t\t\tlast,\n\t\t\t\ttimer;\n\n\t\t\treturn function() {\n\t\t\t\tvar\n\t\t\t\t\tthat = this,\n\t\t\t\t\tnow = +new Date(),\n\t\t\t\t\targs = arguments;\n\n\t\t\t\tif (last && now < last + frequency) {\n\t\t\t\t\tclearTimeout(timer);\n\n\t\t\t\t\ttimer = setTimeout(function() {\n\t\t\t\t\t\tlast = undefined;\n\t\t\t\t\t\tfn.apply(that, args);\n\t\t\t\t\t}, frequency);\n\t\t\t\t} else {\n\t\t\t\t\tlast = now;\n\t\t\t\t\tfn.apply(that, args);\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\n\t\t/**\n\t\t * Escape a string such that it can be used in a regular expression\n\t\t *\n\t\t *  @param {string} val string to escape\n\t\t *  @returns {string} escaped string\n\t\t */\n\t\tescapeRegex: function(val) {\n\t\t\treturn val.replace(_re_escape_regex, '\\\\$1');\n\t\t},\n\n\t\t/**\n\t\t * Create a function that will write to a nested object or array\n\t\t * @param {*} source JSON notation string\n\t\t * @returns Write function\n\t\t */\n\t\tset: function(source) {\n\t\t\tif ($.isPlainObject(source)) {\n\t\t\t\t/* Unlike get, only the underscore (global) option is used for for\n\t\t\t\t * setting data since we don't know the type here. This is why an object\n\t\t\t\t * option is not documented for `mData` (which is read/write), but it is\n\t\t\t\t * for `mRender` which is read only.\n\t\t\t\t */\n\t\t\t\treturn DataTable.util.set(source._);\n\t\t\t} else if (source === null) {\n\t\t\t\t// Nothing to do when the data source is null\n\t\t\t\treturn function() {};\n\t\t\t} else if (typeof source === 'function') {\n\t\t\t\treturn function(data, val, meta) {\n\t\t\t\t\tsource(data, 'set', val, meta);\n\t\t\t\t};\n\t\t\t} else if (typeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\t\t\t  source.indexOf('[') !== -1 || source.indexOf('(') !== -1)) {\n\t\t\t\t// Like the get, we need to get data from a nested object\n\t\t\t\tvar setData = function(data, val, src) {\n\t\t\t\t\tvar a = _fnSplitObjNotation(src),\nb;\n\t\t\t\t\tvar aLast = a[a.length - 1];\n\t\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\n\n\t\t\t\t\tfor (var i = 0, iLen = a.length - 1; i < iLen; i++) {\n\t\t\t\t\t\t// Protect against prototype pollution\n\t\t\t\t\t\tif (a[i] === '__proto__' || a[i] === 'constructor') {\n\t\t\t\t\t\t\tthrow new Error('Cannot set prototype values');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\n\t\t\t\t\t\tif (arrayNotation) {\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\t\tdata[ a[i] ] = [];\n\n\t\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\t\tb.splice(0, i + 1);\n\t\t\t\t\t\t\tinnerSrc = b.join('.');\n\n\t\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\t\tif (Array.isArray(val)) {\n\t\t\t\t\t\t\t\tfor (var j = 0, jLen = val.length; j < jLen; j++) {\n\t\t\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\t\t\tsetData(o, val[j], innerSrc);\n\t\t\t\t\t\t\t\t\tdata[ a[i] ].push(o);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\n\t\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\n\t\t\t\t\t\t\t\t// is to just save the value.\n\t\t\t\t\t\t\t\tdata[ a[i] ] = val;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else if (funcNotation) {\n\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\tdata = data[ a[i] ](val);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\t\tif (data[ a[i] ] === null || data[ a[i] ] === undefined) {\n\t\t\t\t\t\t\tdata[ a[i] ] = {};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Last item in the input - i.e, the actual set\n\t\t\t\t\tif (aLast.match(__reFn)) {\n\t\t\t\t\t\t// Function call\n\t\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ](val);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\treturn function(data, val) { // Meta is also passed in, but not used\n\t\t\t\t\treturn setData(data, val, source);\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// Array or flat object mapping\n\t\t\t\treturn function(data, val) { // Meta is also passed in, but not used\n\t\t\t\t\tdata[source] = val;\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Create a function that will read nested objects from arrays, based on JSON notation\n\t\t * @param {*} source JSON notation string\n\t\t * @returns Value read\n\t\t */\n\t\tget: function(source) {\n\t\t\tif ($.isPlainObject(source)) {\n\t\t\t\t// Build an object of get functions, and wrap them in a single call\n\t\t\t\tvar o = {};\n\t\t\t\t$.each(source, function(key, val) {\n\t\t\t\t\tif (val) {\n\t\t\t\t\t\to[key] = DataTable.util.get(val);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn function(data, type, row, meta) {\n\t\t\t\t\tvar t = o[type] || o._;\n\t\t\t\t\treturn t !== undefined ?\n\t\t\t\t\t\tt(data, type, row, meta) :\n\t\t\t\t\t\tdata;\n\t\t\t\t};\n\t\t\t} else if (source === null) {\n\t\t\t\t// Give an empty string for rendering / sorting etc\n\t\t\t\treturn function(data) { // Type, row and meta also passed, but not used\n\t\t\t\t\treturn data;\n\t\t\t\t};\n\t\t\t} else if (typeof source === 'function') {\n\t\t\t\treturn function(data, type, row, meta) {\n\t\t\t\t\treturn source(data, type, row, meta);\n\t\t\t\t};\n\t\t\t} else if (typeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\t\t\t  source.indexOf('[') !== -1 || source.indexOf('(') !== -1)) {\n\t\t\t\t/* If there is a . in the source string then the data source is in a\n\t\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t\t * be used if defined, rather than throwing an error\n\t\t\t\t */\n\t\t\t\tvar fetchData = function(data, type, src) {\n\t\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\n\n\t\t\t\t\tif (src !== \"\") {\n\t\t\t\t\t\tvar a = _fnSplitObjNotation(src);\n\n\t\t\t\t\t\tfor (var i = 0, iLen = a.length; i < iLen; i++) {\n\t\t\t\t\t\t\t// Check if we are dealing with special notation\n\t\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\n\t\t\t\t\t\t\tif (arrayNotation) {\n\t\t\t\t\t\t\t\t// Array notation\n\t\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\n\t\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\t\tif (a[i] !== \"\") {\n\t\t\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tout = [];\n\n\t\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\t\ta.splice(0, i + 1);\n\t\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\n\t\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\t\tif (Array.isArray(data)) {\n\t\t\t\t\t\t\t\t\tfor (var j = 0, jLen = data.length; j < jLen; j++) {\n\t\t\t\t\t\t\t\t\t\tout.push(fetchData(data[j], type, innerSrc));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length - 1);\n\t\t\t\t\t\t\t\tdata = (join === \"\") ? out : out.join(join);\n\n\t\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else if (funcNotation) {\n\t\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\t\tdata = data[ a[i] ]();\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (data === null || data[ a[i] ] === undefined) {\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn data;\n\t\t\t\t};\n\n\t\t\t\treturn function(data, type) { // Row and meta also passed, but not used\n\t\t\t\t\treturn fetchData(data, type, source);\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// Array or flat object mapping\n\t\t\t\treturn function(data, type) { // Row and meta also passed, but not used\n\t\t\t\t\treturn data[source];\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t};\n\n\n\t/**\n\t * Create a mapping object that allows camel case parameters to be looked up\n\t * for their Hungarian counterparts. The mapping is stored in a private\n\t * parameter called `_hungarianMap` which can be accessed on the source object.\n\t *  @param {object} o\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnHungarianMap(o) {\n\t\tvar\n\t\t\thungarian = 'a aa ai ao as b fn i m o s ',\n\t\t\tmatch,\n\t\t\tnewKey,\n\t\t\tmap = {};\n\n\t\t$.each(o, function(key, val) {\n\t\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\n\n\t\t\tif (match && hungarian.indexOf(match[1] + ' ') !== -1) {\n\t\t\t\tnewKey = key.replace(match[0], match[2].toLowerCase());\n\t\t\t\tmap[ newKey ] = key;\n\n\t\t\t\tif (match[1] === 'o') {\n\t\t\t\t\t_fnHungarianMap(o[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\to._hungarianMap = map;\n\t}\n\n\n\t/**\n\t * Convert from camel case parameters to Hungarian, based on a Hungarian map\n\t * created by _fnHungarianMap.\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCamelToHungarian(src, user, force) {\n\t\tif (!src._hungarianMap) {\n\t\t\t_fnHungarianMap(src);\n\t\t}\n\n\t\tvar hungarianKey;\n\n\t\t$.each(user, function(key, val) {\n\t\t\thungarianKey = src._hungarianMap[ key ];\n\n\t\t\tif (hungarianKey !== undefined && (force || user[hungarianKey] === undefined)) {\n\t\t\t\t// For objects, we need to buzz down into the object to copy parameters\n\t\t\t\tif (hungarianKey.charAt(0) === 'o') {\n\t\t\t\t\t// Copy the camelCase options over to the hungarian\n\t\t\t\t\tif (!user[ hungarianKey ]) {\n\t\t\t\t\t\tuser[ hungarianKey ] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend(true, user[hungarianKey], user[key]);\n\n\t\t\t\t\t_fnCamelToHungarian(src[hungarianKey], user[hungarianKey], force);\n\t\t\t\t} else {\n\t\t\t\t\tuser[hungarianKey] = user[ key ];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\n\t/**\n\t * Language compatibility - when certain options are given, and others aren't, we\n\t * need to duplicate the values over, in order to provide backwards compatibility\n\t * with older language files.\n\t *  @param {object} oSettings dataTables settings object\n\t * @param lang\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLanguageCompat(lang) {\n\t\t// Note the use of the Hungarian notation for the parameters in this method as\n\t\t// this is called after the mapping of camelCase to Hungarian\n\t\tvar defaults = DataTable.defaults.oLanguage;\n\n\t\t// Default mapping\n\t\tvar defaultDecimal = defaults.sDecimal;\n\t\tif (defaultDecimal) {\n\t\t\t_addNumericSort(defaultDecimal);\n\t\t}\n\n\t\tif (lang) {\n\t\t\tvar zeroRecords = lang.sZeroRecords;\n\n\t\t\t// Backwards compatibility - if there is no sEmptyTable given, then use the same as\n\t\t\t// sZeroRecords - assuming that is given.\n\t\t\tif (!lang.sEmptyTable && zeroRecords &&\n\t\t\t\tdefaults.sEmptyTable === \"No data available in table\") {\n\t\t\t\t_fnMap(lang, lang, 'sZeroRecords', 'sEmptyTable');\n\t\t\t}\n\n\t\t\t// Likewise with loading records\n\t\t\tif (!lang.sLoadingRecords && zeroRecords &&\n\t\t\t\tdefaults.sLoadingRecords === \"Loading...\") {\n\t\t\t\t_fnMap(lang, lang, 'sZeroRecords', 'sLoadingRecords');\n\t\t\t}\n\n\t\t\t// Old parameter name of the thousands separator mapped onto the new\n\t\t\tif (lang.sInfoThousands) {\n\t\t\t\tlang.sThousands = lang.sInfoThousands;\n\t\t\t}\n\n\t\t\tvar decimal = lang.sDecimal;\n\t\t\tif (decimal && defaultDecimal !== decimal) {\n\t\t\t\t_addNumericSort(decimal);\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Map one parameter onto another\n\t *  @param {object} o Object to map\n\t *  @param {*} knew The new parameter name\n\t *  @param {*} old The old parameter name\n\t */\n\tvar _fnCompatMap = function(o, knew, old) {\n\t\tif (o[ knew ] !== undefined) {\n\t\t\to[ old ] = o[ knew ];\n\t\t}\n\t};\n\n\n\t/**\n\t * Provide backwards compatibility for the main DT options. Note that the new\n\t * options are mapped onto the old parameters, so this is an external interface\n\t * change only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatOpts(init) {\n\t\t_fnCompatMap(init, 'ordering', 'bSort');\n\t\t_fnCompatMap(init, 'orderMulti', 'bSortMulti');\n\t\t_fnCompatMap(init, 'orderClasses', 'bSortClasses');\n\t\t_fnCompatMap(init, 'orderCellsTop', 'bSortCellsTop');\n\t\t_fnCompatMap(init, 'order', 'aaSorting');\n\t\t_fnCompatMap(init, 'orderFixed', 'aaSortingFixed');\n\t\t_fnCompatMap(init, 'paging', 'bPaginate');\n\t\t_fnCompatMap(init, 'pagingType', 'sPaginationType');\n\t\t_fnCompatMap(init, 'pageLength', 'iDisplayLength');\n\t\t_fnCompatMap(init, 'searching', 'bFilter');\n\n\t\t// Boolean initialisation of x-scrolling\n\t\tif (typeof init.sScrollX === 'boolean') {\n\t\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\n\t\t}\n\t\tif (typeof init.scrollX === 'boolean') {\n\t\t\tinit.scrollX = init.scrollX ? '100%' : '';\n\t\t}\n\n\t\t// Column search objects are in an array, so it needs to be converted\n\t\t// element by element\n\t\tvar searchCols = init.aoSearchCols;\n\n\t\tif (searchCols) {\n\t\t\tfor (var i = 0, ien = searchCols.length; i < ien; i++) {\n\t\t\t\tif (searchCols[i]) {\n\t\t\t\t\t_fnCamelToHungarian(DataTable.models.oSearch, searchCols[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Provide backwards compatibility for column options. Note that the new options\n\t * are mapped onto the old parameters, so this is an external interface change\n\t * only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatCols(init) {\n\t\t_fnCompatMap(init, 'orderable', 'bSortable');\n\t\t_fnCompatMap(init, 'orderData', 'aDataSort');\n\t\t_fnCompatMap(init, 'orderSequence', 'asSorting');\n\t\t_fnCompatMap(init, 'orderDataType', 'sortDataType');\n\n\t\t// OrderData can be given as an integer\n\t\tvar dataSort = init.aDataSort;\n\t\tif (typeof dataSort === 'number' && !Array.isArray(dataSort)) {\n\t\t\tinit.aDataSort = [dataSort];\n\t\t}\n\t}\n\n\n\t/**\n\t * Browser feature detection for capabilities, quirks\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBrowserDetect(settings) {\n\t\t// We don't need to do this every time DataTables is constructed, the values\n\t\t// calculated are specific to the browser and OS configuration which we\n\t\t// don't expect to change between initialisations\n\t\tif (!DataTable.__browser) {\n\t\t\tvar browser = {};\n\t\t\tDataTable.__browser = browser;\n\n\t\t\t// Scrolling feature / quirks detection\n\t\t\tvar n = $('<div/>')\n\t\t\t\t.css({\n\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: $(window).scrollLeft() * -1, // Allow for scrolling\n\t\t\t\t\theight: 1,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t})\n\t\t\t\t.append(\n\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t.css({\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\t\tleft: 1,\n\t\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t\t\t.css({\n\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\theight: 10\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t.appendTo('body');\n\n\t\t\tvar outer = n.children();\n\t\t\tvar inner = outer.children();\n\n\t\t\t// Numbers below, in order, are:\n\t\t\t// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\n\t\t\t//\n\t\t\t// IE6 XP:                           100 100 100  83\n\t\t\t// IE7 Vista:                        100 100 100  83\n\t\t\t// IE 8+ Windows:                     83  83 100  83\n\t\t\t// Evergreen Windows:                 83  83 100  83\n\t\t\t// Evergreen Mac with scrollbars:     85  85 100  85\n\t\t\t// Evergreen Mac without scrollbars: 100 100 100 100\n\n\t\t\t// Get scrollbar width\n\t\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\n\t\t\t// IE6/7 will oversize a width 100% element inside a scrolling element, to\n\t\t\t// include the width of the scrollbar, while other browsers ensure the inner\n\t\t\t// element is contained without forcing scrolling\n\t\t\tbrowser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;\n\n\t\t\t// In rtl text layout, some browsers (most, but not all) will place the\n\t\t\t// scrollbar on the left, rather than the right.\n\t\t\tbrowser.bScrollbarLeft = Math.round(inner.offset().left) !== 1;\n\n\t\t\t// IE8- don't provide height and width for getBoundingClientRect\n\t\t\tbrowser.bBounding = n[0].getBoundingClientRect().width ? true : false;\n\n\t\t\tn.remove();\n\t\t}\n\n\t\t$.extend(settings.oBrowser, DataTable.__browser);\n\t\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n\t}\n\n\n\t/**\n\t * Array.prototype reduce[Right] method, used for browsers which don't support\n\t * JS 1.6. Done this way to reduce code size, since we iterate either way\n\t *  @param {object} settings dataTables settings object\n\t * @param that\n\t * @param fn\n\t * @param init\n\t * @param start\n\t * @param end\n\t * @param inc\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReduce(that, fn, init, start, end, inc) {\n\t\tvar\n\t\t\ti = start,\n\t\t\tvalue,\n\t\t\tisSet = false;\n\n\t\tif (init !== undefined) {\n\t\t\tvalue = init;\n\t\t\tisSet = true;\n\t\t}\n\n\t\twhile (i !== end) {\n\t\t\tif (!that.hasOwnProperty(i)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvalue = isSet ?\n\t\t\t\tfn(value, that[i], i, that) :\n\t\t\t\tthat[i];\n\n\t\t\tisSet = true;\n\t\t\ti += inc;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * Add a column to the list used for the table with default values\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nTh The th element for this column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddColumn(oSettings, nTh) {\n\t\t// Add column to aoColumns array\n\t\tvar oDefaults = DataTable.defaults.column;\n\t\tvar iCol = oSettings.aoColumns.length;\n\t\tvar oCol = $.extend({}, DataTable.models.oColumn, oDefaults, {\n\t\t\t\"nTh\": nTh ? nTh : document.createElement('th'),\n\t\t\t\"sTitle\":    oDefaults.sTitle ? oDefaults.sTitle : nTh ? nTh.innerHTML : '',\n\t\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n\t\t\tidx: iCol\n\t\t});\n\t\toSettings.aoColumns.push(oCol);\n\n\t\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\n\t\t// passed into extend can be undefined. This allows the user to give a default\n\t\t// with only some of the parameters defined, and also not give a default\n\t\tvar searchCols = oSettings.aoPreSearchCols;\n\t\tsearchCols[ iCol ] = $.extend({}, DataTable.models.oSearch, searchCols[ iCol ]);\n\n\t\t// Use the default column options function to initialise classes etc\n\t\t_fnColumnOptions(oSettings, iCol, $(nTh).data());\n\t}\n\n\n\t/**\n\t * Apply options for a column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iCol column index to consider\n\t *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnOptions(oSettings, iCol, oOptions) {\n\t\tvar oCol = oSettings.aoColumns[ iCol ];\n\t\tvar oClasses = oSettings.oClasses;\n\t\tvar th = $(oCol.nTh);\n\n\t\t// Try to get width information from the DOM. We can't get it from CSS\n\t\t// as we'd need to parse the CSS stylesheet. `width` option can override\n\t\tif (!oCol.sWidthOrig) {\n\t\t\t// Width attribute\n\t\t\toCol.sWidthOrig = th.attr('width') || null;\n\n\t\t\t// Style attribute\n\t\t\tvar t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\n\t\t\tif (t) {\n\t\t\t\toCol.sWidthOrig = t[1];\n\t\t\t}\n\t\t}\n\n\t\t/* User specified column options */\n\t\tif (oOptions !== undefined && oOptions !== null) {\n\t\t\t// Backwards compatibility\n\t\t\t_fnCompatCols(oOptions);\n\n\t\t\t// Map camel case parameters to their Hungarian counterparts\n\t\t\t_fnCamelToHungarian(DataTable.defaults.column, oOptions, true);\n\n\t\t\t/* Backwards compatibility for mDataProp */\n\t\t\tif (oOptions.mDataProp !== undefined && !oOptions.mData) {\n\t\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t\t}\n\n\t\t\tif (oOptions.sType) {\n\t\t\t\toCol._sManualType = oOptions.sType;\n\t\t\t}\n\n\t\t\t// `class` is a reserved word in Javascript, so we need to provide\n\t\t\t// the ability to use a valid name for the camel case input\n\t\t\tif (oOptions.className && !oOptions.sClass) {\n\t\t\t\toOptions.sClass = oOptions.className;\n\t\t\t}\n\t\t\tif (oOptions.sClass) {\n\t\t\t\tth.addClass(oOptions.sClass);\n\t\t\t}\n\n\t\t\tvar origClass = oCol.sClass;\n\n\t\t\t$.extend(oCol, oOptions);\n\t\t\t_fnMap(oCol, oOptions, \"sWidth\", \"sWidthOrig\");\n\n\t\t\t// Merge class from previously defined classes with this one, rather than just\n\t\t\t// overwriting it in the extend above\n\t\t\tif (origClass !== oCol.sClass) {\n\t\t\t\toCol.sClass = origClass + ' ' + oCol.sClass;\n\t\t\t}\n\n\t\t\t/* IDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t\t * priority if defined\n\t\t\t */\n\t\t\tif (oOptions.iDataSort !== undefined) {\n\t\t\t\toCol.aDataSort = [oOptions.iDataSort];\n\t\t\t}\n\t\t\t_fnMap(oCol, oOptions, \"aDataSort\");\n\t\t}\n\n\t\t/* Cache the data get and set functions for speed */\n\t\tvar mDataSrc = oCol.mData;\n\t\tvar mData = _fnGetObjectDataFn(mDataSrc);\n\t\tvar mRender = oCol.mRender ? _fnGetObjectDataFn(oCol.mRender) : null;\n\n\t\tvar attrTest = function(src) {\n\t\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\n\t\t};\n\t\toCol._bAttrSrc = $.isPlainObject(mDataSrc) && (\n\t\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n\t\t);\n\t\toCol._setter = null;\n\n\t\toCol.fnGetData = function(rowData, type, meta) {\n\t\t\tvar innerData = mData(rowData, type, undefined, meta);\n\n\t\t\treturn mRender && type ?\n\t\t\t\tmRender(innerData, type, rowData, meta) :\n\t\t\t\tinnerData;\n\t\t};\n\t\toCol.fnSetData = function(rowData, val, meta) {\n\t\t\treturn _fnSetObjectDataFn(mDataSrc)(rowData, val, meta);\n\t\t};\n\n\t\t// Indicate if DataTables should read DOM data as an object or array\n\t\t// Used in _fnGetRowElements\n\t\tif (typeof mDataSrc !== 'number') {\n\t\t\toSettings._rowReadObject = true;\n\t\t}\n\n\t\t/* Feature sorting overrides column specific when off */\n\t\tif (!oSettings.oFeatures.bSort) {\n\t\t\toCol.bSortable = false;\n\t\t\tth.addClass(oClasses.sSortableNone); // Have to add class here as order event isn't called\n\t\t}\n\n\t\t/* Check that the class assignment is correct for sorting */\n\t\tvar bAsc = $.inArray('asc', oCol.asSorting) !== -1;\n\t\tvar bDesc = $.inArray('desc', oCol.asSorting) !== -1;\n\t\tif (!oCol.bSortable || (!bAsc && !bDesc)) {\n\t\t\toCol.sSortingClass = oClasses.sSortableNone;\n\t\t\toCol.sSortingClassJUI = \"\";\n\t\t} else if (bAsc && !bDesc) {\n\t\t\toCol.sSortingClass = oClasses.sSortableAsc;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\n\t\t} else if (!bAsc && bDesc) {\n\t\t\toCol.sSortingClass = oClasses.sSortableDesc;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\n\t\t} else {\n\t\t\toCol.sSortingClass = oClasses.sSortable;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUI;\n\t\t}\n\t}\n\n\n\t/**\n\t * Adjust the table column widths for new data. Note: you would probably want to\n\t * do a redraw after calling this function!\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAdjustColumnSizing(settings) {\n\t\t/* Not interested in doing column width calculation if auto-width is disabled */\n\t\tif (settings.oFeatures.bAutoWidth !== false) {\n\t\t\tvar columns = settings.aoColumns;\n\n\t\t\t_fnCalculateColumnWidths(settings);\n\t\t\tfor (var i = 0, iLen = columns.length; i < iLen; i++) {\n\t\t\t\tcolumns[i].nTh.style.width = columns[i].sWidth;\n\t\t\t}\n\t\t}\n\n\t\tvar scroll = settings.oScroll;\n\t\tif (scroll.sY !== '' || scroll.sX !== '') {\n\t\t\t_fnScrollDraw(settings);\n\t\t}\n\n\t\t_fnCallbackFire(settings, null, 'column-sizing', [settings]);\n\t}\n\n\n\t/**\n\t * Convert the index of a visible column to the index in the data array (take account\n\t * of hidden columns)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iMatch Visible column index to lookup\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisibleToColumnIndex(oSettings, iMatch) {\n\t\tvar aiVis = _fnGetColumns(oSettings, 'bVisible');\n\n\t\treturn typeof aiVis[iMatch] === 'number' ?\n\t\t\taiVis[iMatch] :\n\t\t\tnull;\n\t}\n\n\n\t/**\n\t * Convert the index of an index in the data array and convert it to the visible\n\t *   column index (take account of hidden columns)\n\t *  @param {int} iMatch Column index to lookup\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnIndexToVisible(oSettings, iMatch) {\n\t\tvar aiVis = _fnGetColumns(oSettings, 'bVisible');\n\t\tvar iPos = $.inArray(iMatch, aiVis);\n\n\t\treturn iPos !== -1 ? iPos : null;\n\t}\n\n\n\t/**\n\t * Get the number of visible columns\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the number of visible columns\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisbleColumns(oSettings) {\n\t\tvar vis = 0;\n\n\t\t// No reduce in IE8, use a loop for now\n\t\t$.each(oSettings.aoColumns, function(i, col) {\n\t\t\tif (col.bVisible && $(col.nTh).css('display') !== 'none') {\n\t\t\t\tvis++;\n\t\t\t}\n\t\t});\n\n\t\treturn vis;\n\t}\n\n\n\t/**\n\t * Get an array of column indexes that match a given property\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sParam Parameter in aoColumns to look for - typically\n\t *    bVisible or bSearchable\n\t *  @returns {array} Array of indexes with matched properties\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetColumns(oSettings, sParam) {\n\t\tvar a = [];\n\n\t\t$.map(oSettings.aoColumns, function(val, i) {\n\t\t\tif (val[sParam]) {\n\t\t\t\ta.push(i);\n\t\t\t}\n\t\t});\n\n\t\treturn a;\n\t}\n\n\n\t/**\n\t * Calculate the 'type' of a column\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnTypes(settings) {\n\t\tvar columns = settings.aoColumns;\n\t\tvar data = settings.aoData;\n\t\tvar types = DataTable.ext.type.detect;\n\t\tvar i, ien, j, jen, k, ken;\n\t\tvar col, cell, detectedType, cache;\n\n\t\t// For each column, spin over the\n\t\tfor (i = 0, ien = columns.length; i < ien; i++) {\n\t\t\tcol = columns[i];\n\t\t\tcache = [];\n\n\t\t\tif (!col.sType && col._sManualType) {\n\t\t\t\tcol.sType = col._sManualType;\n\t\t\t} else if (!col.sType) {\n\t\t\t\tfor (j = 0, jen = types.length; j < jen; j++) {\n\t\t\t\t\tfor (k = 0, ken = data.length; k < ken; k++) {\n\t\t\t\t\t\t// Use a cache array so we only need to get the type data\n\t\t\t\t\t\t// from the formatter once (when using multiple detectors)\n\t\t\t\t\t\tif (cache[k] === undefined) {\n\t\t\t\t\t\t\tcache[k] = _fnGetCellData(settings, k, i, 'type');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdetectedType = types[j](cache[k], settings);\n\n\t\t\t\t\t\t// If null, then this type can't apply to this column, so\n\t\t\t\t\t\t// rather than testing all cells, break out. There is an\n\t\t\t\t\t\t// exception for the last type which is `html`. We need to\n\t\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\n\t\t\t\t\t\t// types\n\t\t\t\t\t\tif (!detectedType && j !== types.length - 1) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Only a single match is needed for html type since it is\n\t\t\t\t\t\t// bottom of the pile and very similar to string - but it\n\t\t\t\t\t\t// must not be empty\n\t\t\t\t\t\tif (detectedType === 'html' && !_empty(cache[k])) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Type is valid for all data points in the column - use this\n\t\t\t\t\t// type\n\t\t\t\t\tif (detectedType) {\n\t\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Fall back - if no type was detected, always use string\n\t\t\t\tif (!col.sType) {\n\t\t\t\t\tcol.sType = 'string';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Take the column definitions and static columns arrays and calculate how\n\t * they relate to column indexes. The callback function will then apply the\n\t * definition found for a column to a suitable configuration object.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n\t *  @param {array} aoCols The aoColumns array that defines columns individually\n\t *  @param {function} fn Callback function - takes two parameters, the calculated\n\t *    column index and the definition for that column.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyColumnDefs(oSettings, aoColDefs, aoCols, fn) {\n\t\tvar i, iLen, j, jLen, k, kLen, def;\n\t\tvar columns = oSettings.aoColumns;\n\n\t\t// Column definitions with aTargets\n\t\tif (aoColDefs) {\n\t\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\t\tfor (i = aoColDefs.length - 1; i >= 0; i--) {\n\t\t\t\tdef = aoColDefs[i];\n\n\t\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\t\tvar aTargets = def.target !== undefined\n\t\t\t\t\t? def.target\n\t\t\t\t\t: def.targets !== undefined\n\t\t\t\t\t\t? def.targets\n\t\t\t\t\t\t: def.aTargets;\n\n\t\t\t\tif (!Array.isArray(aTargets)) {\n\t\t\t\t\taTargets = [aTargets];\n\t\t\t\t}\n\n\t\t\t\tfor (j = 0, jLen = aTargets.length; j < jLen; j++) {\n\t\t\t\t\tif (typeof aTargets[j] === 'number' && aTargets[j] >= 0) {\n\t\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\t\twhile (columns.length <= aTargets[j]) {\n\t\t\t\t\t\t\t_fnAddColumn(oSettings);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\t\tfn(aTargets[j], def);\n\t\t\t\t\t} else if (typeof aTargets[j] === 'number' && aTargets[j] < 0) {\n\t\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\t\tfn(columns.length + aTargets[j], def);\n\t\t\t\t\t} else if (typeof aTargets[j] === 'string') {\n\t\t\t\t\t\t/* Class name matching on TH element */\n\t\t\t\t\t\tfor (k = 0, kLen = columns.length; k < kLen; k++) {\n\t\t\t\t\t\t\tif (aTargets[j] == \"_all\" ||\n\t\t\t\t\t\t\t     $(columns[k].nTh).hasClass(aTargets[j])) {\n\t\t\t\t\t\t\t\tfn(k, def);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Statically defined columns array\n\t\tif (aoCols) {\n\t\t\tfor (i = 0, iLen = aoCols.length; i < iLen; i++) {\n\t\t\t\tfn(i, aoCols[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Add a data array to the table, creating DOM node etc. This is the parallel to\n\t * _fnGatherData, but for adding rows from a Javascript source, rather than a\n\t * DOM source.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aData data array to be added\n\t * @param aDataIn\n\t *  @param {node} [nTr] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddData(oSettings, aDataIn, nTr, anTds) {\n\t\t/* Create the object for storing information about this new row */\n\t\tvar iRow = oSettings.aoData.length;\n\t\tvar oData = $.extend(true, {}, DataTable.models.oRow, {\n\t\t\tsrc: nTr ? 'dom' : 'data',\n\t\t\tidx: iRow\n\t\t});\n\n\t\toData._aData = aDataIn;\n\t\toSettings.aoData.push(oData);\n\n\t\t/* Create the cells */\n\t\tvar nTd, sThisType;\n\t\tvar columns = oSettings.aoColumns;\n\n\t\t// Invalidate the column types as the new data needs to be revalidated\n\t\tfor (var i = 0, iLen = columns.length; i < iLen; i++) {\n\t\t\tcolumns[i].sType = null;\n\t\t}\n\n\t\t/* Add to the display array */\n\t\toSettings.aiDisplayMaster.push(iRow);\n\n\t\tvar id = oSettings.rowIdFn(aDataIn);\n\t\tif (id !== undefined) {\n\t\t\toSettings.aIds[ id ] = oData;\n\t\t}\n\n\t\t/* Create the DOM information, or register it if already present */\n\t\tif (nTr || !oSettings.oFeatures.bDeferRender) {\n\t\t\t_fnCreateTr(oSettings, iRow, nTr, anTds);\n\t\t}\n\n\t\treturn iRow;\n\t}\n\n\n\t/**\n\t * Add one or more TR elements to the table. Generally we'd expect to\n\t * use this for reading data from a DOM sourced table, but it could be\n\t * used for an TR element. Note that if a TR is given, it is used (i.e.\n\t * it is not cloned).\n\t *  @param {object} settings dataTables settings object\n\t *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n\t *  @returns {array} Array of indexes for the added rows\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddTr(settings, trs) {\n\t\tvar row;\n\n\t\t// Allow an individual node to be passed in\n\t\tif (!(trs instanceof $)) {\n\t\t\ttrs = $(trs);\n\t\t}\n\n\t\treturn trs.map(function(i, el) {\n\t\t\trow = _fnGetRowElements(settings, el);\n\t\t\treturn _fnAddData(settings, row.data, el, row.cells);\n\t\t});\n\t}\n\n\n\t/**\n\t * Take a TR element and convert it to an index in aoData\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} n the TR element to find\n\t *  @returns {int} index if the node is found, null if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToDataIndex(oSettings, n) {\n\t\treturn (n._DT_RowIndex !== undefined) ? n._DT_RowIndex : null;\n\t}\n\n\n\t/**\n\t * Take a TD element and convert it into a column data index (not the visible index)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow The row number the TD/TH can be found in\n\t *  @param {node} n The TD/TH element to find\n\t *  @returns {int} index if the node is found, -1 if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToColumnIndex(oSettings, iRow, n) {\n\t\treturn $.inArray(n, oSettings.aoData[ iRow ].anCells);\n\t}\n\n\n\t/**\n\t * Get the data for a given cell from the internal cache, taking into account data mapping\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\n\t *  @returns {*} Cell data\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetCellData(settings, rowIdx, colIdx, type) {\n\t\tif (type === 'search') {\n\t\t\ttype = 'filter';\n\t\t} else if (type === 'order') {\n\t\t\ttype = 'sort';\n\t\t}\n\n\t\tvar draw = settings.iDraw;\n\t\tvar col = settings.aoColumns[colIdx];\n\t\tvar rowData = settings.aoData[rowIdx]._aData;\n\t\tvar defaultContent = col.sDefaultContent;\n\t\tvar cellData = col.fnGetData(rowData, type, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t});\n\n\t\tif (cellData === undefined) {\n\t\t\tif (settings.iDrawError != draw && defaultContent === null) {\n\t\t\t\t_fnLog(settings, 0, \"Requested unknown parameter \" +\n\t\t\t\t\t(typeof col.mData == 'function' ? '{function}' : \"'\" + col.mData + \"'\") +\n\t\t\t\t\t\" for row \" + rowIdx + \", column \" + colIdx, 4);\n\t\t\t\tsettings.iDrawError = draw;\n\t\t\t}\n\t\t\treturn defaultContent;\n\t\t}\n\n\t\t// When the data source is null and a specific data type is requested (i.e.\n\t\t// not the original data), we can use default column data\n\t\tif ((cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined) {\n\t\t\tcellData = defaultContent;\n\t\t} else if (typeof cellData === 'function') {\n\t\t\t// If the data source is a function, then we run it and use the return,\n\t\t\t// executing in the scope of the data object (for instances)\n\t\t\treturn cellData.call(rowData);\n\t\t}\n\n\t\tif (cellData === null && type === 'display') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (type === 'filter') {\n\t\t\tvar fomatters = DataTable.ext.type.search;\n\n\t\t\tif (fomatters[ col.sType ]) {\n\t\t\t\tcellData = fomatters[ col.sType ](cellData);\n\t\t\t}\n\t\t}\n\n\t\treturn cellData;\n\t}\n\n\n\t/**\n\t * Set the value for a specific cell, into the internal data cache\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {*} val Value to set\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSetCellData(settings, rowIdx, colIdx, val) {\n\t\tvar col = settings.aoColumns[colIdx];\n\t\tvar rowData = settings.aoData[rowIdx]._aData;\n\n\t\tcol.fnSetData(rowData, val, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t});\n\t}\n\n\n\t// Private variable that is used to match action syntax in the data property object\n\tvar __reArray = /\\[.*?\\]$/;\n\tvar __reFn = /\\(\\)$/;\n\n\t/**\n\t * Split string on periods, taking into account escaped periods\n\t * @param  {string} str String to split\n\t * @return {array} Split string\n\t */\n\tfunction _fnSplitObjNotation(str) {\n\t\treturn $.map(str.match(/(\\\\.|[^\\.])+/g) || [''], function(s) {\n\t\t\treturn s.replace(/\\\\\\./g, '.');\n\t\t});\n\t}\n\n\n\t/**\n\t * Return a function that can be used to get data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data get function\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnGetObjectDataFn = DataTable.util.get;\n\n\n\t/**\n\t * Return a function that can be used to set data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data set function\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnSetObjectDataFn = DataTable.util.set;\n\n\n\t/**\n\t * Return an array with the full table data\n\t *  @param {object} oSettings dataTables settings object\n\t * @param settings\n\t *  @returns array {array} aData Master data array\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetDataMaster(settings) {\n\t\treturn _pluck(settings.aoData, '_aData');\n\t}\n\n\n\t/**\n\t * Nuke the table\n\t *  @param {object} oSettings dataTables settings object\n\t * @param settings\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnClearTable(settings) {\n\t\tsettings.aoData.length = 0;\n\t\tsettings.aiDisplayMaster.length = 0;\n\t\tsettings.aiDisplay.length = 0;\n\t\tsettings.aIds = {};\n\t}\n\n\n\t /**\n\t\t * Take an array of integers (index array) and remove a target integer (value - not\n\t\t * the key!)\n\t\t *  @param {array} a Index array to target\n\t\t *  @param {int} iTarget value to find\n\t\t * @param splice\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\tfunction _fnDeleteIndex(a, iTarget, splice) {\n\t\tvar iTargetIndex = -1;\n\n\t\tfor (var i = 0, iLen = a.length; i < iLen; i++) {\n\t\t\tif (a[i] == iTarget) {\n\t\t\t\tiTargetIndex = i;\n\t\t\t} else if (a[i] > iTarget) {\n\t\t\t\ta[i]--;\n\t\t\t}\n\t\t}\n\n\t\tif (iTargetIndex != -1 && splice === undefined) {\n\t\t\ta.splice(iTargetIndex, 1);\n\t\t}\n\t}\n\n\n\t/**\n\t * Mark cached data as invalid such that a re-read of the data will occur when\n\t * the cached data is next requested. Also update from the data source object.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {int}    rowIdx   Row index to invalidate\n\t * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n\t *     or 'data'\n\t * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n\t *     row will be invalidated\n\t * @memberof DataTable#oApi\n\t *\n\t * @todo For the modularisation of v1.11 this will need to become a callback, so\n\t *   the sort and filter methods can subscribe to it. That will required\n\t *   initialisation options for sorting, which is why it is not already baked in\n\t */\n\tfunction _fnInvalidate(settings, rowIdx, src, colIdx) {\n\t\tvar row = settings.aoData[ rowIdx ];\n\t\tvar i, ien;\n\t\tvar cellWrite = function(cell, col) {\n\t\t\t// This is very frustrating, but in IE if you just write directly\n\t\t\t// to innerHTML, and elements that are overwritten are GC'ed,\n\t\t\t// even if there is a reference to them elsewhere\n\t\t\twhile (cell.childNodes.length) {\n\t\t\t\tcell.removeChild(cell.firstChild);\n\t\t\t}\n\n\t\t\tcell.innerHTML = _fnGetCellData(settings, rowIdx, col, 'display');\n\t\t};\n\n\t\t// Are we reading last data from DOM or the data object?\n\t\tif (src === 'dom' || ((!src || src === 'auto') && row.src === 'dom')) {\n\t\t\t// Read the data from the DOM\n\t\t\trow._aData = _fnGetRowElements(\n\t\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\n\t\t\t\t)\n\t\t\t\t.data;\n\t\t} else {\n\t\t\t// Reading from data object, update the DOM\n\t\t\tvar cells = row.anCells;\n\n\t\t\tif (cells) {\n\t\t\t\tif (colIdx !== undefined) {\n\t\t\t\t\tcellWrite(cells[colIdx], colIdx);\n\t\t\t\t} else {\n\t\t\t\t\tfor (i = 0, ien = cells.length; i < ien; i++) {\n\t\t\t\t\t\tcellWrite(cells[i], i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// For both row and cell invalidation, the cached data for sorting and\n\t\t// filtering is nulled out\n\t\trow._aSortData = null;\n\t\trow._aFilterData = null;\n\n\t\t// Invalidate the type for a specific column (if given) or all columns since\n\t\t// the data might have changed\n\t\tvar cols = settings.aoColumns;\n\t\tif (colIdx !== undefined) {\n\t\t\tcols[ colIdx ].sType = null;\n\t\t} else {\n\t\t\tfor (i = 0, ien = cols.length; i < ien; i++) {\n\t\t\t\tcols[i].sType = null;\n\t\t\t}\n\n\t\t\t// Update DataTables special `DT_*` attributes for the row\n\t\t\t_fnRowAttributes(settings, row);\n\t\t}\n\t}\n\n\n\t/**\n\t * Build a data source object from an HTML row, reading the contents of the\n\t * cells that are in the row.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {node|object} TR element from which to read data or existing row\n\t *   object from which to re-read the data from the cells\n\t * @param row\n\t * @param {int} [colIdx] Optional column index\n\t * @param {array|object} [d] Data source object. If `colIdx` is given then this\n\t *   parameter should also be given and will be used to write the data into.\n\t *   Only the column in question will be written\n\t * @returns {object} Object with two parameters: `data` the data read, in\n\t *   document order, and `cells` and array of nodes (they can be useful to the\n\t *   caller, so rather than needing a second traversal to get them, just return\n\t *   them from here).\n\t * @memberof DataTable#oApi\n\t */\n\tfunction _fnGetRowElements(settings, row, colIdx, d) {\n\t\tvar\n\t\t\ttds = [],\n\t\t\ttd = row.firstChild,\n\t\t\tname, col, o,\ni = 0,\ncontents,\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tobjectRead = settings._rowReadObject;\n\n\t\t// Allow the data object to be passed in, or construct\n\t\td = d !== undefined ?\n\t\t\td :\n\t\t\tobjectRead ?\n\t\t\t\t{} :\n\t\t\t\t[];\n\n\t\tvar attr = function(str, td) {\n\t\t\tif (typeof str === 'string') {\n\t\t\t\tvar idx = str.indexOf('@');\n\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tvar attr = str.substring(idx + 1);\n\t\t\t\t\tvar setter = _fnSetObjectDataFn(str);\n\t\t\t\t\tsetter(d, td.getAttribute(attr));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Read data from a cell and store into the data object\n\t\tvar cellProcess = function(cell) {\n\t\t\tif (colIdx === undefined || colIdx === i) {\n\t\t\t\tcol = columns[i];\n\t\t\t\tcontents = (cell.innerHTML).trim();\n\n\t\t\t\tif (col && col._bAttrSrc) {\n\t\t\t\t\tvar setter = _fnSetObjectDataFn(col.mData._);\n\t\t\t\t\tsetter(d, contents);\n\n\t\t\t\t\tattr(col.mData.sort, cell);\n\t\t\t\t\tattr(col.mData.type, cell);\n\t\t\t\t\tattr(col.mData.filter, cell);\n\t\t\t\t} else {\n\t\t\t\t\t// Depending on the `data` option for the columns the data can\n\t\t\t\t\t// be read to either an object or an array.\n\t\t\t\t\tif (objectRead) {\n\t\t\t\t\t\tif (!col._setter) {\n\t\t\t\t\t\t\t// Cache the setter function\n\t\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn(col.mData);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcol._setter(d, contents);\n\t\t\t\t\t} else {\n\t\t\t\t\t\td[i] = contents;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti++;\n\t\t};\n\n\t\tif (td) {\n\t\t\t// `tr` element was passed in\n\t\t\twhile (td) {\n\t\t\t\tname = td.nodeName.toUpperCase();\n\n\t\t\t\tif (name == \"TD\" || name == \"TH\") {\n\t\t\t\t\tcellProcess(td);\n\t\t\t\t\ttds.push(td);\n\t\t\t\t}\n\n\t\t\t\ttd = td.nextSibling;\n\t\t\t}\n\t\t} else {\n\t\t\t// Existing row object passed in\n\t\t\ttds = row.anCells;\n\n\t\t\tfor (var j = 0, jen = tds.length; j < jen; j++) {\n\t\t\t\tcellProcess(tds[j]);\n\t\t\t}\n\t\t}\n\n\t\t// Read the ID from the DOM if present\n\t\tvar rowNode = row.firstChild ? row : row.nTr;\n\n\t\tif (rowNode) {\n\t\t\tvar id = rowNode.getAttribute('id');\n\n\t\t\tif (id) {\n\t\t\t\t_fnSetObjectDataFn(settings.rowId)(d, id);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdata: d,\n\t\t\tcells: tds\n\t\t};\n\t}\n\t/**\n\t * Create a new TR element (and it's TD children) for a row\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow Row to consider\n\t *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCreateTr(oSettings, iRow, nTrIn, anTds) {\n\t\tvar\n\t\t\trow = oSettings.aoData[iRow],\n\t\t\trowData = row._aData,\n\t\t\tcells = [],\n\t\t\tnTr, nTd, oCol,\n\t\t\ti, iLen, create;\n\n\t\tif (row.nTr === null) {\n\t\t\tnTr = nTrIn || document.createElement('tr');\n\n\t\t\trow.nTr = nTr;\n\t\t\trow.anCells = cells;\n\n\t\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t\t * to the aoData array for fast look up\n\t\t\t */\n\t\t\tnTr._DT_RowIndex = iRow;\n\n\t\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t\t_fnRowAttributes(oSettings, row);\n\n\t\t\t/* Process each column */\n\t\t\tfor (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {\n\t\t\t\toCol = oSettings.aoColumns[i];\n\t\t\t\tcreate = nTrIn ? false : true;\n\n\t\t\t\tnTd = create ? document.createElement(oCol.sCellType) : anTds[i];\n\t\t\t\tnTd._DT_CellIndex = {\n\t\t\t\t\trow: iRow,\n\t\t\t\t\tcolumn: i\n\t\t\t\t};\n\n\t\t\t\tcells.push(nTd);\n\n\t\t\t\t// Need to create the HTML if new, or if a rendering function is defined\n\t\t\t\tif (create || ((oCol.mRender || oCol.mData !== i) &&\n\t\t\t\t\t (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i + '.display')\n\t\t\t\t)) {\n\t\t\t\t\tnTd.innerHTML = _fnGetCellData(oSettings, iRow, i, 'display');\n\t\t\t\t}\n\n\t\t\t\t/* Add user defined class */\n\t\t\t\tif (oCol.sClass) {\n\t\t\t\t\tnTd.className += ' ' + oCol.sClass;\n\t\t\t\t}\n\n\t\t\t\t// Visibility - add or remove as required\n\t\t\t\tif (oCol.bVisible && !nTrIn) {\n\t\t\t\t\tnTr.appendChild(nTd);\n\t\t\t\t} else if (!oCol.bVisible && nTrIn) {\n\t\t\t\t\tnTd.parentNode.removeChild(nTd);\n\t\t\t\t}\n\n\t\t\t\tif (oCol.fnCreatedCell) {\n\t\t\t\t\toCol.fnCreatedCell.call(oSettings.oInstance,\n\t\t\t\t\t\tnTd, _fnGetCellData(oSettings, iRow, i), rowData, iRow, i\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_fnCallbackFire(oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow, cells]);\n\t\t}\n\t}\n\n\n\t/**\n\t * Add attributes to a row based on the special `DT_*` parameters in a data\n\t * source object.\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} DataTables row object for the row to be modified\n\t * @param row\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnRowAttributes(settings, row) {\n\t\tvar tr = row.nTr;\n\t\tvar data = row._aData;\n\n\t\tif (tr) {\n\t\t\tvar id = settings.rowIdFn(data);\n\n\t\t\tif (id) {\n\t\t\t\ttr.id = id;\n\t\t\t}\n\n\t\t\tif (data.DT_RowClass) {\n\t\t\t\t// Remove any classes added by DT_RowClass before\n\t\t\t\tvar a = data.DT_RowClass.split(' ');\n\t\t\t\trow.__rowc = row.__rowc ?\n\t\t\t\t\t_unique(row.__rowc.concat(a)) :\n\t\t\t\t\ta;\n\n\t\t\t\t$(tr)\n\t\t\t\t\t.removeClass(row.__rowc.join(' '))\n\t\t\t\t\t.addClass(data.DT_RowClass);\n\t\t\t}\n\n\t\t\tif (data.DT_RowAttr) {\n\t\t\t\t$(tr).attr(data.DT_RowAttr);\n\t\t\t}\n\n\t\t\tif (data.DT_RowData) {\n\t\t\t\t$(tr).data(data.DT_RowData);\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Create the HTML header for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBuildHead(oSettings) {\n\t\tvar i, ien, cell, row, column;\n\t\tvar thead = oSettings.nTHead;\n\t\tvar tfoot = oSettings.nTFoot;\n\t\tvar createHeader = $('th, td', thead).length === 0;\n\t\tvar classes = oSettings.oClasses;\n\t\tvar columns = oSettings.aoColumns;\n\n\t\tif (createHeader) {\n\t\t\trow = $('<tr/>').appendTo(thead);\n\t\t}\n\n\t\tfor (i = 0, ien = columns.length; i < ien; i++) {\n\t\t\tcolumn = columns[i];\n\t\t\tcell = $(column.nTh).addClass(column.sClass);\n\n\t\t\tif (createHeader) {\n\t\t\t\tcell.appendTo(row);\n\t\t\t}\n\n\t\t\t// 1.11 move into sorting\n\t\t\tif (oSettings.oFeatures.bSort) {\n\t\t\t\tcell.addClass(column.sSortingClass);\n\n\t\t\t\tif (column.bSortable !== false) {\n\t\t\t\t\tcell\n\t\t\t\t\t\t.attr('tabindex', oSettings.iTabIndex)\n\t\t\t\t\t\t.attr('aria-controls', oSettings.sTableId);\n\n\t\t\t\t\t_fnSortAttachListener(oSettings, column.nTh, i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (column.sTitle != cell[0].innerHTML) {\n\t\t\t\tcell.html(column.sTitle);\n\t\t\t}\n\n\t\t\t_fnRenderer(oSettings, 'header')(\n\t\t\t\toSettings, cell, column, classes\n\t\t\t);\n\t\t}\n\n\t\tif (createHeader) {\n\t\t\t_fnDetectHeader(oSettings.aoHeader, thead);\n\t\t}\n\n\t\t/* Deal with the footer - add classes if required */\n\t\t$(thead).children('tr').children('th, td').addClass(classes.sHeaderTH);\n\t\t$(tfoot).children('tr').children('th, td').addClass(classes.sFooterTH);\n\n\t\t// Cache the footer cells. Note that we only take the cells from the first\n\t\t// row in the footer. If there is more than one row the user wants to\n\t\t// interact with, they need to use the table().foot() method. Note also this\n\t\t// allows cells to be used for multiple columns using colspan\n\t\tif (tfoot !== null) {\n\t\t\tvar cells = oSettings.aoFooter[0];\n\n\t\t\tfor (i = 0, ien = cells.length; i < ien; i++) {\n\t\t\t\tcolumn = columns[i];\n\t\t\t\tcolumn.nTf = cells[i].cell;\n\n\t\t\t\tif (column.sClass) {\n\t\t\t\t\t$(column.nTf).addClass(column.sClass);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Draw the header (or footer) element based on the column visibility states. The\n\t * methodology here is to use the layout array from _fnDetectHeader, modified for\n\t * the instantaneous column visibility, to construct the new layout. The grid is\n\t * traversed over cell at a time in a rows x columns grid fashion, although each\n\t * cell insert can cover multiple elements in the grid - which is tracks using the\n\t * aApplied array. Cell inserts in the grid will only occur where there isn't\n\t * already a cell in that position.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param array {objects} aoSource Layout array from _fnDetectHeader\n\t * @param aoSource\n\t *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDrawHead(oSettings, aoSource, bIncludeHidden) {\n\t\tvar i, iLen, j, jLen, k, kLen, n, nLocalTr;\n\t\tvar aoLocal = [];\n\t\tvar aApplied = [];\n\t\tvar iColumns = oSettings.aoColumns.length;\n\t\tvar iRowspan, iColspan;\n\n\t\tif (!aoSource) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (bIncludeHidden === undefined) {\n\t\t\tbIncludeHidden = false;\n\t\t}\n\n\t\t/* Make a copy of the master layout array, but without the visible columns in it */\n\t\tfor (i = 0, iLen = aoSource.length; i < iLen; i++) {\n\t\t\taoLocal[i] = aoSource[i].slice();\n\t\t\taoLocal[i].nTr = aoSource[i].nTr;\n\n\t\t\t/* Remove any columns which are currently hidden */\n\t\t\tfor (j = iColumns - 1; j >= 0; j--) {\n\t\t\t\tif (!oSettings.aoColumns[j].bVisible && !bIncludeHidden) {\n\t\t\t\t\taoLocal[i].splice(j, 1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Prep the applied array - it needs an element for each row */\n\t\t\taApplied.push([]);\n\t\t}\n\n\t\tfor (i = 0, iLen = aoLocal.length; i < iLen; i++) {\n\t\t\tnLocalTr = aoLocal[i].nTr;\n\n\t\t\t/* All cells are going to be replaced, so empty out the row */\n\t\t\tif (nLocalTr) {\n\t\t\t\twhile ((n = nLocalTr.firstChild)) {\n\t\t\t\t\tnLocalTr.removeChild(n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (j = 0, jLen = aoLocal[i].length; j < jLen; j++) {\n\t\t\t\tiRowspan = 1;\n\t\t\t\tiColspan = 1;\n\n\t\t\t\t/* Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t\t * insert point. If there is, then there is nothing to do.\n\t\t\t\t */\n\t\t\t\tif (aApplied[i][j] === undefined) {\n\t\t\t\t\tnLocalTr.appendChild(aoLocal[i][j].cell);\n\t\t\t\t\taApplied[i][j] = 1;\n\n\t\t\t\t\t/* Expand the cell to cover as many rows as needed */\n\t\t\t\t\twhile (aoLocal[i + iRowspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i + iRowspan][j].cell) {\n\t\t\t\t\t\taApplied[i + iRowspan][j] = 1;\n\t\t\t\t\t\tiRowspan++;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Expand the cell to cover as many columns as needed */\n\t\t\t\t\twhile (aoLocal[i][j + iColspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i][j + iColspan].cell) {\n\t\t\t\t\t\t/* Must update the applied array over the rows for the columns */\n\t\t\t\t\t\tfor (k = 0; k < iRowspan; k++) {\n\t\t\t\t\t\t\taApplied[i + k][j + iColspan] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tiColspan++;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Do the actual expansion in the DOM */\n\t\t\t\t\t$(aoLocal[i][j].cell)\n\t\t\t\t\t\t.attr('rowspan', iRowspan)\n\t\t\t\t\t\t.attr('colspan', iColspan);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Insert the required TR nodes into the table for display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param ajaxComplete true after ajax call to complete rendering\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDraw(oSettings, ajaxComplete) {\n\t\t// Allow for state saving and a custom start position\n\t\t_fnStart(oSettings);\n\n\t\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\t\tvar aPreDraw = _fnCallbackFire(oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings]);\n\t\tif ($.inArray(false, aPreDraw) !== -1) {\n\t\t\t_fnProcessingDisplay(oSettings, false);\n\t\t\treturn;\n\t\t}\n\n\t\tvar anRows = [];\n\t\tvar iRowCount = 0;\n\t\tvar asStripeClasses = oSettings.asStripeClasses;\n\t\tvar iStripes = asStripeClasses.length;\n\t\tvar oLang = oSettings.oLanguage;\n\t\tvar bServerSide = _fnDataSource(oSettings) == 'ssp';\n\t\tvar aiDisplay = oSettings.aiDisplay;\n\t\tvar iDisplayStart = oSettings._iDisplayStart;\n\t\tvar iDisplayEnd = oSettings.fnDisplayEnd();\n\n\t\toSettings.bDrawing = true;\n\n\t\t/* Server-side processing draw intercept */\n\t\tif (oSettings.bDeferLoading) {\n\t\t\toSettings.bDeferLoading = false;\n\t\t\toSettings.iDraw++;\n\t\t\t_fnProcessingDisplay(oSettings, false);\n\t\t} else if (!bServerSide) {\n\t\t\toSettings.iDraw++;\n\t\t} else if (!oSettings.bDestroying && !ajaxComplete) {\n\t\t\t_fnAjaxUpdate(oSettings);\n\t\t\treturn;\n\t\t}\n\n\t\tif (aiDisplay.length !== 0) {\n\t\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\n\t\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\n\t\t\tfor (var j = iStart; j < iEnd; j++) {\n\t\t\t\tvar iDataIndex = aiDisplay[j];\n\t\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\n\t\t\t\tif (aoData.nTr === null) {\n\t\t\t\t\t_fnCreateTr(oSettings, iDataIndex);\n\t\t\t\t}\n\n\t\t\t\tvar nRow = aoData.nTr;\n\n\t\t\t\t/* Remove the old striping classes and then add the new one */\n\t\t\t\tif (iStripes !== 0) {\n\t\t\t\t\tvar sStripe = asStripeClasses[ iRowCount % iStripes ];\n\t\t\t\t\tif (aoData._sRowStripe != sStripe) {\n\t\t\t\t\t\t$(nRow).removeClass(aoData._sRowStripe).addClass(sStripe);\n\t\t\t\t\t\taoData._sRowStripe = sStripe;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Row callback functions - might want to manipulate the row\n\t\t\t\t// iRowCount and j are not currently documented. Are they at all\n\t\t\t\t// useful?\n\t\t\t\t_fnCallbackFire(oSettings, 'aoRowCallback', null,\n\t\t\t\t\t[nRow, aoData._aData, iRowCount, j, iDataIndex]);\n\n\t\t\t\tanRows.push(nRow);\n\t\t\t\tiRowCount++;\n\t\t\t}\n\t\t} else {\n\t\t\t/* Table is empty - create a row with an empty message in it */\n\t\t\tvar sZero = oLang.sZeroRecords;\n\t\t\tif (oSettings.iDraw == 1 && _fnDataSource(oSettings) == 'ajax') {\n\t\t\t\tsZero = oLang.sLoadingRecords;\n\t\t\t} else if (oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0) {\n\t\t\t\tsZero = oLang.sEmptyTable;\n\t\t\t}\n\n\t\t\tanRows[ 0 ] = $('<tr/>', {'class': iStripes ? asStripeClasses[0] : ''})\n\t\t\t\t.append($('<td />', {\n\t\t\t\t\t'valign':  'top',\n\t\t\t\t\t'colSpan': _fnVisbleColumns(oSettings),\n\t\t\t\t\t'class':   oSettings.oClasses.sRowEmpty\n\t\t\t\t}).html(sZero))[0];\n\t\t}\n\n\t\t/* Header and footer callbacks */\n\t\t_fnCallbackFire(oSettings, 'aoHeaderCallback', 'header', [$(oSettings.nTHead).children('tr')[0],\n\t\t\t_fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);\n\n\t\t_fnCallbackFire(oSettings, 'aoFooterCallback', 'footer', [$(oSettings.nTFoot).children('tr')[0],\n\t\t\t_fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);\n\n\t\tvar body = $(oSettings.nTBody);\n\n\t\tbody.children().detach();\n\t\tbody.append($(anRows));\n\n\t\t/* Call all required callback functions for the end of a draw */\n\t\t_fnCallbackFire(oSettings, 'aoDrawCallback', 'draw', [oSettings]);\n\n\t\t/* Draw is complete, sorting and filtering must be as well */\n\t\toSettings.bSorted = false;\n\t\toSettings.bFiltered = false;\n\t\toSettings.bDrawing = false;\n\t}\n\n\n\t/**\n\t * Redraw the table - taking account of the various features which are enabled\n\t *  @param {object} oSettings dataTables settings object\n\t * @param settings\n\t *  @param {boolean} [holdPosition] Keep the current paging position. By default\n\t *    the paging is reset to the first page\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReDraw(settings, holdPosition) {\n\t\tvar\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tsort = features.bSort,\n\t\t\tfilter = features.bFilter;\n\n\t\tif (sort) {\n\t\t\t_fnSort(settings);\n\t\t}\n\n\t\tif (filter) {\n\t\t\t_fnFilterComplete(settings, settings.oPreviousSearch);\n\t\t} else {\n\t\t\t// No filtering, so we want to just use the display master\n\t\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\t}\n\n\t\tif (holdPosition !== true) {\n\t\t\tsettings._iDisplayStart = 0;\n\t\t}\n\n\t\t// Let any modules know about the draw hold position state (used by\n\t\t// scrolling internally)\n\t\tsettings._drawHold = holdPosition;\n\n\t\t_fnDraw(settings);\n\n\t\tsettings._drawHold = false;\n\t}\n\n\n\t/**\n\t * Add the options to the page HTML for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddOptionsHtml(oSettings) {\n\t\tvar classes = oSettings.oClasses;\n\t\tvar table = $(oSettings.nTable);\n\t\tvar holding = $('<div/>').insertBefore(table); // Holding element for speed\n\t\tvar features = oSettings.oFeatures;\n\n\t\t// All DataTables are wrapped in a div\n\t\tvar insert = $('<div/>', {\n\t\t\tid:      oSettings.sTableId + '_wrapper',\n\t\t\t'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' ' + classes.sNoFooter)\n\t\t});\n\n\t\toSettings.nHolding = holding[0];\n\t\toSettings.nTableWrapper = insert[0];\n\t\toSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n\n\t\t/* Loop over the user set positioning and place the elements as needed */\n\t\tvar aDom = oSettings.sDom.split('');\n\t\tvar featureNode, cOption, nNewNode, cNext, sAttr, j;\n\t\tfor (var i = 0; i < aDom.length; i++) {\n\t\t\tfeatureNode = null;\n\t\t\tcOption = aDom[i];\n\n\t\t\tif (cOption == '<') {\n\t\t\t\t/* New container div */\n\t\t\t\tnNewNode = $('<div/>')[0];\n\n\t\t\t\t/* Check to see if we should append an id and/or a class name to the container */\n\t\t\t\tcNext = aDom[i + 1];\n\t\t\t\tif (cNext == \"'\" || cNext == '\"') {\n\t\t\t\t\tsAttr = \"\";\n\t\t\t\t\tj = 2;\n\t\t\t\t\twhile (aDom[i + j] != cNext) {\n\t\t\t\t\t\tsAttr += aDom[i + j];\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Replace jQuery UI constants @todo depreciated */\n\t\t\t\t\tif (sAttr == \"H\") {\n\t\t\t\t\t\tsAttr = classes.sJUIHeader;\n\t\t\t\t\t} else if (sAttr == \"F\") {\n\t\t\t\t\t\tsAttr = classes.sJUIFooter;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t\t */\n\t\t\t\t\tif (sAttr.indexOf('.') != -1) {\n\t\t\t\t\t\tvar aSplit = sAttr.split('.');\n\t\t\t\t\t\tnNewNode.id = aSplit[0].substr(1, aSplit[0].length - 1);\n\t\t\t\t\t\tnNewNode.className = aSplit[1];\n\t\t\t\t\t} else if (sAttr.charAt(0) == \"#\") {\n\t\t\t\t\t\tnNewNode.id = sAttr.substr(1, sAttr.length - 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnNewNode.className = sAttr;\n\t\t\t\t\t}\n\n\t\t\t\t\ti += j; /* Move along the position array */\n\t\t\t\t}\n\n\t\t\t\tinsert.append(nNewNode);\n\t\t\t\tinsert = $(nNewNode);\n\t\t\t} else if (cOption == '>') {\n\t\t\t\t/* End container div */\n\t\t\t\tinsert = insert.parent();\n\t\t\t}\n\t\t\t// @todo Move options into their own plugins?\n\t\t\telse if (cOption == 'l' && features.bPaginate && features.bLengthChange) {\n\t\t\t\t/* Length */\n\t\t\t\tfeatureNode = _fnFeatureHtmlLength(oSettings);\n\t\t\t} else if (cOption == 'f' && features.bFilter) {\n\t\t\t\t/* Filter */\n\t\t\t\tfeatureNode = _fnFeatureHtmlFilter(oSettings);\n\t\t\t} else if (cOption == 'r' && features.bProcessing) {\n\t\t\t\t/* PRocessing */\n\t\t\t\tfeatureNode = _fnFeatureHtmlProcessing(oSettings);\n\t\t\t} else if (cOption == 't') {\n\t\t\t\t/* Table */\n\t\t\t\tfeatureNode = _fnFeatureHtmlTable(oSettings);\n\t\t\t} else if (cOption == 'i' && features.bInfo) {\n\t\t\t\t/* Info */\n\t\t\t\tfeatureNode = _fnFeatureHtmlInfo(oSettings);\n\t\t\t} else if (cOption == 'p' && features.bPaginate) {\n\t\t\t\t/* Pagination */\n\t\t\t\tfeatureNode = _fnFeatureHtmlPaginate(oSettings);\n\t\t\t} else if (DataTable.ext.feature.length !== 0) {\n\t\t\t\t/* Plug-in features */\n\t\t\t\tvar aoFeatures = DataTable.ext.feature;\n\t\t\t\tfor (var k = 0, kLen = aoFeatures.length; k < kLen; k++) {\n\t\t\t\t\tif (cOption == aoFeatures[k].cFeature) {\n\t\t\t\t\t\tfeatureNode = aoFeatures[k].fnInit(oSettings);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Add to the 2D features array */\n\t\t\tif (featureNode) {\n\t\t\t\tvar aanFeatures = oSettings.aanFeatures;\n\n\t\t\t\tif (!aanFeatures[cOption]) {\n\t\t\t\t\taanFeatures[cOption] = [];\n\t\t\t\t}\n\n\t\t\t\taanFeatures[cOption].push(featureNode);\n\t\t\t\tinsert.append(featureNode);\n\t\t\t}\n\t\t}\n\n\t\t/* Built our DOM structure - replace the holding div with what we want */\n\t\tholding.replaceWith(insert);\n\t\toSettings.nHolding = null;\n\t}\n\n\n\t/**\n\t * Use the DOM source to create up an array of header cells. The idea here is to\n\t * create a layout grid (array) of rows x columns, which contains a reference\n\t * to the cell that that point in the grid (regardless of col/rowspan), such that\n\t * any column / row could be removed and the new grid constructed\n\t *  @param array {object} aLayout Array to store the calculated layout in\n\t * @param aLayout\n\t *  @param {node} nThead The header/footer element for the table\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDetectHeader(aLayout, nThead) {\n\t\tvar nTrs = $(nThead).children('tr');\n\t\tvar nTr, nCell;\n\t\tvar i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n\t\tvar bUnique;\n\t\tvar fnShiftCol = function(a, i, j) {\n\t\t\tvar k = a[i];\n\t                while (k[j]) {\n\t\t\t\tj++;\n\t\t\t}\n\t\t\treturn j;\n\t\t};\n\n\t\taLayout.splice(0, aLayout.length);\n\n\t\t/* We know how many rows there are in the layout - so prep it */\n\t\tfor (i = 0, iLen = nTrs.length; i < iLen; i++) {\n\t\t\taLayout.push([]);\n\t\t}\n\n\t\t/* Calculate a layout array */\n\t\tfor (i = 0, iLen = nTrs.length; i < iLen; i++) {\n\t\t\tnTr = nTrs[i];\n\t\t\tiColumn = 0;\n\n\t\t\t/* For every cell in the row... */\n\t\t\tnCell = nTr.firstChild;\n\t\t\twhile (nCell) {\n\t\t\t\tif (nCell.nodeName.toUpperCase() == \"TD\" ||\n\t\t\t\t     nCell.nodeName.toUpperCase() == \"TH\") {\n\t\t\t\t\t/* Get the col and rowspan attributes from the DOM and sanitise them */\n\t\t\t\t\tiColspan = nCell.getAttribute('colspan') * 1;\n\t\t\t\t\tiRowspan = nCell.getAttribute('rowspan') * 1;\n\t\t\t\t\tiColspan = (!iColspan || iColspan === 0 || iColspan === 1) ? 1 : iColspan;\n\t\t\t\t\tiRowspan = (!iRowspan || iRowspan === 0 || iRowspan === 1) ? 1 : iRowspan;\n\n\t\t\t\t\t/* There might be colspan cells already in this row, so shift our target\n\t\t\t\t\t * accordingly\n\t\t\t\t\t */\n\t\t\t\t\tiColShifted = fnShiftCol(aLayout, i, iColumn);\n\n\t\t\t\t\t/* Cache calculation for unique columns */\n\t\t\t\t\tbUnique = iColspan === 1 ? true : false;\n\n\t\t\t\t\t/* If there is col / rowspan, copy the information into the layout grid */\n\t\t\t\t\tfor (l = 0; l < iColspan; l++) {\n\t\t\t\t\t\tfor (k = 0; k < iRowspan; k++) {\n\t\t\t\t\t\t\taLayout[i + k][iColShifted + l] = {\n\t\t\t\t\t\t\t\t\"cell\": nCell,\n\t\t\t\t\t\t\t\t\"unique\": bUnique\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\taLayout[i + k].nTr = nTr;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnCell = nCell.nextSibling;\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Get an array of unique th elements, one for each column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nHeader automatically detect the layout from this node - optional\n\t *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n\t *  @returns array {node} aReturn list of unique th's\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetUniqueThs(oSettings, nHeader, aLayout) {\n\t\tvar aReturn = [];\n\t\tif (!aLayout) {\n\t\t\taLayout = oSettings.aoHeader;\n\t\t\tif (nHeader) {\n\t\t\t\taLayout = [];\n\t\t\t\t_fnDetectHeader(aLayout, nHeader);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0, iLen = aLayout.length; i < iLen; i++) {\n\t\t\tfor (var j = 0, jLen = aLayout[i].length; j < jLen; j++) {\n\t\t\t\tif (aLayout[i][j].unique &&\n\t\t\t\t\t (!aReturn[j] || !oSettings.bSortCellsTop)) {\n\t\t\t\t\taReturn[j] = aLayout[i][j].cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn aReturn;\n\t}\n\n\t/**\n\t * Set the start position for draw\n\t *  @param {object} oSettings dataTables settings object\n\t */\n\tfunction _fnStart(oSettings) {\n\t\tvar bServerSide = _fnDataSource(oSettings) == 'ssp';\n\t\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\n\n\t\t// Check and see if we have an initial draw position from state saving\n\t\tif (iInitDisplayStart !== undefined && iInitDisplayStart !== -1) {\n\t\t\toSettings._iDisplayStart = bServerSide ?\n\t\t\t\tiInitDisplayStart :\n\t\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n\t\t\t\t\t0 :\n\t\t\t\t\tiInitDisplayStart;\n\n\t\t\toSettings.iInitDisplayStart = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Create an Ajax call based on the table's settings, taking into account that\n\t * parameters can have multiple forms, and backwards compatibility.\n\t *\n\t * @param {object} oSettings dataTables settings object\n\t * @param {array} data Data to send to the server, required by\n\t *     DataTables - may be augmented by developer callbacks\n\t * @param {function} fn Callback function to run when data is obtained\n\t */\n\tfunction _fnBuildAjax(oSettings, data, fn) {\n\t\t// Compatibility with 1.9-, allow fnServerData and event to manipulate\n\t\t_fnCallbackFire(oSettings, 'aoServerParams', 'serverParams', [data]);\n\n\t\t// Convert to object based for 1.10+ if using the old array scheme which can\n\t\t// come from server-side processing or serverParams\n\t\tif (data && Array.isArray(data)) {\n\t\t\tvar tmp = {};\n\t\t\tvar rbracket = /(.*?)\\[\\]$/;\n\n\t\t\t$.each(data, function(key, val) {\n\t\t\t\tvar match = val.name.match(rbracket);\n\n\t\t\t\tif (match) {\n\t\t\t\t\t// Support for arrays\n\t\t\t\t\tvar name = match[0];\n\n\t\t\t\t\tif (!tmp[ name ]) {\n\t\t\t\t\t\ttmp[ name ] = [];\n\t\t\t\t\t}\n\t\t\t\t\ttmp[ name ].push(val.value);\n\t\t\t\t} else {\n\t\t\t\t\ttmp[val.name] = val.value;\n\t\t\t\t}\n\t\t\t});\n\t\t\tdata = tmp;\n\t\t}\n\n\t\tvar ajaxData;\n\t\tvar ajax = oSettings.ajax;\n\t\tvar instance = oSettings.oInstance;\n\t\tvar callback = function(json) {\n\t\t\tvar status = oSettings.jqXHR\n\t\t\t\t? oSettings.jqXHR.status\n\t\t\t\t: null;\n\n\t\t\tif (json === null || (typeof status === 'number' && status == 204)) {\n\t\t\t\tjson = {};\n\t\t\t\t_fnAjaxDataSrc(oSettings, json, []);\n\t\t\t}\n\n\t\t\tvar error = json.error || json.sError;\n\t\t\tif (error) {\n\t\t\t\t_fnLog(oSettings, 0, error);\n\t\t\t}\n\n\t\t\toSettings.json = json;\n\n\t\t\t_fnCallbackFire(oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR]);\n\t\t\tfn(json);\n\t\t};\n\n\t\tif ($.isPlainObject(ajax) && ajax.data) {\n\t\t\tajaxData = ajax.data;\n\n\t\t\tvar newData = typeof ajaxData === 'function' ?\n\t\t\t\tajaxData(data, oSettings) : // Fn can manipulate data or return\n\t\t\t\tajaxData; // An object object or array to merge\n\n\t\t\t// If the function returned something, use that alone\n\t\t\tdata = typeof ajaxData === 'function' && newData ?\n\t\t\t\tnewData :\n\t\t\t\t$.extend(true, data, newData);\n\n\t\t\t// Remove the data property as we've resolved it already and don't want\n\t\t\t// jQuery to do it again (it is restored at the end of the function)\n\t\t\tdelete ajax.data;\n\t\t}\n\n\t\tvar baseAjax = {\n\t\t\t\"data\": data,\n\t\t\t\"success\": callback,\n\t\t\t\"dataType\": \"json\",\n\t\t\t\"cache\": false,\n\t\t\t\"type\": oSettings.sServerMethod,\n\t\t\t\"error\": function(xhr, error, thrown) {\n\t\t\t\tvar ret = _fnCallbackFire(oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR]);\n\n\t\t\t\tif ($.inArray(true, ret) === -1) {\n\t\t\t\t\tif (error == \"parsererror\") {\n\t\t\t\t\t\t_fnLog(oSettings, 0, 'Invalid JSON response', 1);\n\t\t\t\t\t} else if (xhr.readyState === 4) {\n\t\t\t\t\t\t_fnLog(oSettings, 0, 'Ajax error', 7);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t_fnProcessingDisplay(oSettings, false);\n\t\t\t}\n\t\t};\n\n\t\t// Store the data submitted for the API\n\t\toSettings.oAjaxData = data;\n\n\t\t// Allow plug-ins and external processes to modify the data\n\t\t_fnCallbackFire(oSettings, null, 'preXhr', [oSettings, data]);\n\n\t\tif (oSettings.fnServerData) {\n\t\t\t// DataTables 1.9- compatibility\n\t\t\toSettings.fnServerData.call(instance,\n\t\t\t\toSettings.sAjaxSource,\n\t\t\t\t$.map(data, function(val, key) { // Need to convert back to 1.9 trad format\n\t\t\t\t\treturn {name: key, value: val};\n\t\t\t\t}),\n\t\t\t\tcallback,\n\t\t\t\toSettings\n\t\t\t);\n\t\t} else if (oSettings.sAjaxSource || typeof ajax === 'string') {\n\t\t\t// DataTables 1.9- compatibility\n\t\t\toSettings.jqXHR = $.ajax($.extend(baseAjax, {\n\t\t\t\turl: ajax || oSettings.sAjaxSource\n\t\t\t}));\n\t\t} else if (typeof ajax === 'function') {\n\t\t\t// Is a function - let the caller define what needs to be done\n\t\t\toSettings.jqXHR = ajax.call(instance, data, callback, oSettings);\n\t\t} else {\n\t\t\t// Object to extend the base settings\n\t\t\toSettings.jqXHR = $.ajax($.extend(baseAjax, ajax));\n\n\t\t\t// Restore for next time around\n\t\t\tajax.data = ajaxData;\n\t\t}\n\t}\n\n\n\t/**\n\t * Update the table using an Ajax call\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {boolean} Block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdate(settings) {\n\t\tsettings.iDraw++;\n\t\t_fnProcessingDisplay(settings, true);\n\n\t\t_fnBuildAjax(\n\t\t\tsettings,\n\t\t\t_fnAjaxParameters(settings),\n\t\t\tfunction(json) {\n\t\t\t\t_fnAjaxUpdateDraw(settings, json);\n\t\t\t}\n\t\t);\n\t}\n\n\n\t/**\n\t * Build up the parameters in an object needed for a server-side processing\n\t * request. Note that this is basically done twice, is different ways - a modern\n\t * method which is used by default in DataTables 1.10 which uses objects and\n\t * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\n\t * the sAjaxSource option is used in the initialisation, or the legacyAjax\n\t * option is set.\n\t *  @param {object} oSettings dataTables settings object\n\t * @param settings\n\t *  @returns {bool} block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxParameters(settings) {\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tcolumnCount = columns.length,\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tpreSearch = settings.oPreviousSearch,\n\t\t\tpreColSearch = settings.aoPreSearchCols,\n\t\t\ti,\ndata = [],\ndataProp, column, columnSearch,\n\t\t\tsort = _fnSortFlatten(settings),\n\t\t\tdisplayStart = settings._iDisplayStart,\n\t\t\tdisplayLength = features.bPaginate !== false ?\n\t\t\t\tsettings._iDisplayLength :\n\t\t\t\t-1;\n\n\t\tvar param = function(name, value) {\n\t\t\tdata.push({'name': name, 'value': value});\n\t\t};\n\n\t\t// DataTables 1.9- compatible method\n\t\tparam('sEcho', settings.iDraw);\n\t\tparam('iColumns', columnCount);\n\t\tparam('sColumns', _pluck(columns, 'sName').join(','));\n\t\tparam('iDisplayStart', displayStart);\n\t\tparam('iDisplayLength', displayLength);\n\n\t\t// DataTables 1.10+ method\n\t\tvar d = {\n\t\t\tdraw:    settings.iDraw,\n\t\t\tcolumns: [],\n\t\t\torder:   [],\n\t\t\tstart:   displayStart,\n\t\t\tlength:  displayLength,\n\t\t\tsearch:  {\n\t\t\t\tvalue: preSearch.sSearch,\n\t\t\t\tregex: preSearch.bRegex\n\t\t\t}\n\t\t};\n\n\t\tfor (i = 0; i < columnCount; i++) {\n\t\t\tcolumn = columns[i];\n\t\t\tcolumnSearch = preColSearch[i];\n\t\t\tdataProp = typeof column.mData == \"function\" ? 'function' : column.mData;\n\n\t\t\td.columns.push({\n\t\t\t\tdata:       dataProp,\n\t\t\t\tname:       column.sName,\n\t\t\t\tsearchable: column.bSearchable,\n\t\t\t\torderable:  column.bSortable,\n\t\t\t\tsearch:     {\n\t\t\t\t\tvalue: columnSearch.sSearch,\n\t\t\t\t\tregex: columnSearch.bRegex\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tparam(\"mDataProp_\" + i, dataProp);\n\n\t\t\tif (features.bFilter) {\n\t\t\t\tparam('sSearch_' + i, columnSearch.sSearch);\n\t\t\t\tparam('bRegex_' + i, columnSearch.bRegex);\n\t\t\t\tparam('bSearchable_' + i, column.bSearchable);\n\t\t\t}\n\n\t\t\tif (features.bSort) {\n\t\t\t\tparam('bSortable_' + i, column.bSortable);\n\t\t\t}\n\t\t}\n\n\t\tif (features.bFilter) {\n\t\t\tparam('sSearch', preSearch.sSearch);\n\t\t\tparam('bRegex', preSearch.bRegex);\n\t\t}\n\n\t\tif (features.bSort) {\n\t\t\t$.each(sort, function(i, val) {\n\t\t\t\td.order.push({column: val.col, dir: val.dir});\n\n\t\t\t\tparam('iSortCol_' + i, val.col);\n\t\t\t\tparam('sSortDir_' + i, val.dir);\n\t\t\t});\n\n\t\t\tparam('iSortingCols', sort.length);\n\t\t}\n\n\t\t// If the legacy.ajax parameter is null, then we automatically decide which\n\t\t// form to use, based on sAjaxSource\n\t\tvar legacy = DataTable.ext.legacy.ajax;\n\t\tif (legacy === null) {\n\t\t\treturn settings.sAjaxSource ? data : d;\n\t\t}\n\n\t\t// Otherwise, if legacy has been specified then we use that to decide on the\n\t\t// form\n\t\treturn legacy ? data : d;\n\t}\n\n\n\t/**\n\t * Data the data from the server (nuking the old) and redraw the table\n\t *  @param {object} oSettings dataTables settings object\n\t * @param settings\n\t *  @param {object} json json data return from the server.\n\t *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n\t *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n\t *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n\t *  @param {array} json.aaData The data to display on this page\n\t *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdateDraw(settings, json) {\n\t\t// V1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\n\t\t// Support both\n\t\tvar compat = function(old, modern) {\n\t\t\treturn json[old] !== undefined ? json[old] : json[modern];\n\t\t};\n\n\t\tvar data = _fnAjaxDataSrc(settings, json);\n\t\tvar draw = compat('sEcho', 'draw');\n\t\tvar recordsTotal = compat('iTotalRecords', 'recordsTotal');\n\t\tvar recordsFiltered = compat('iTotalDisplayRecords', 'recordsFiltered');\n\n\t\tif (draw !== undefined) {\n\t\t\t// Protect against out of sequence returns\n\t\t\tif (draw * 1 < settings.iDraw) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsettings.iDraw = draw * 1;\n\t\t}\n\n\t\t// No data in returned object, so rather than an array, we show an empty table\n\t\tif (!data) {\n\t\t\tdata = [];\n\t\t}\n\n\t\t_fnClearTable(settings);\n\t\tsettings._iRecordsTotal = parseInt(recordsTotal, 10);\n\t\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\n\t\tfor (var i = 0, ien = data.length; i < ien; i++) {\n\t\t\t_fnAddData(settings, data[i]);\n\t\t}\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\n\t\t_fnDraw(settings, true);\n\n\t\tif (!settings._bInitComplete) {\n\t\t\t_fnInitComplete(settings, json);\n\t\t}\n\n\t\t_fnProcessingDisplay(settings, false);\n\t}\n\n\n\t/**\n\t * Get the data from the JSON data source to use for drawing a table. Using\n\t * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n\t * source object, or from a processing function.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param  {object} json Data source object / array from the server\n\t * @param write\n\t *  @return {array} Array of data to use\n\t */\n\t function _fnAjaxDataSrc(oSettings, json, write) {\n\t\tvar dataSrc = $.isPlainObject(oSettings.ajax) && oSettings.ajax.dataSrc !== undefined ?\n\t\t\toSettings.ajax.dataSrc :\n\t\t\toSettings.sAjaxDataProp; // Compatibility with 1.9-.\n\n\t\tif (!write) {\n\t\t\tif (dataSrc === 'data') {\n\t\t\t\t// If the default, then we still want to support the old style, and safely ignore\n\t\t\t\t// it if possible\n\t\t\t\treturn json.aaData || json[dataSrc];\n\t\t\t}\n\n\t\t\treturn dataSrc !== \"\" ?\n\t\t\t\t_fnGetObjectDataFn(dataSrc)(json) :\n\t\t\t\tjson;\n\t\t}\n\n\t\t// Set\n\t\t_fnSetObjectDataFn(dataSrc)(json, write);\n\t}\n\n\t/**\n\t * Generate the node required for filtering text\n\t *  @returns {node} Filter control element\n\t * @param settings\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlFilter(settings) {\n\t\tvar classes = settings.oClasses;\n\t\tvar tableId = settings.sTableId;\n\t\tvar language = settings.oLanguage;\n\t\tvar previousSearch = settings.oPreviousSearch;\n\t\tvar features = settings.aanFeatures;\n\t\tvar input = '<input type=\"search\" class=\"' + classes.sFilterInput + '\"/>';\n\n\t\tvar str = language.sSearch;\n\t\tstr = str.match(/_INPUT_/) ?\n\t\t\tstr.replace('_INPUT_', input) :\n\t\t\tstr + input;\n\n\t\tvar filter = $('<div/>', {\n\t\t\t\t'id': !features.f ? tableId + '_filter' : null,\n\t\t\t\t'class': classes.sFilter\n\t\t\t})\n\t\t\t.append($('<label/>').append(str));\n\n\t\tvar searchFn = function(event) {\n\t\t\t/* Update all other filter input elements for the new display */\n\t\t\tvar n = features.f;\n\t\t\tvar val = !this.value ? \"\" : this.value; // Mental IE8 fix :-(\n\t\t\tif (previousSearch.return && event.key !== \"Enter\") {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t/* Now do the filter */\n\t\t\tif (val != previousSearch.sSearch) {\n\t\t\t\t_fnFilterComplete(settings, {\n\t\t\t\t\t\"sSearch\": val,\n\t\t\t\t\t\"bRegex\": previousSearch.bRegex,\n\t\t\t\t\t\"bSmart\": previousSearch.bSmart,\n\t\t\t\t\t\"bCaseInsensitive\": previousSearch.bCaseInsensitive,\n\t\t\t\t\t\"return\": previousSearch.return\n\t\t\t\t});\n\n\t\t\t\t// Need to redraw, without resorting\n\t\t\t\tsettings._iDisplayStart = 0;\n\t\t\t\t_fnDraw(settings);\n\t\t\t}\n\t\t};\n\n\t\tvar searchDelay = settings.searchDelay !== null ?\n\t\t\tsettings.searchDelay :\n\t\t\t_fnDataSource(settings) === 'ssp' ?\n\t\t\t\t400 :\n\t\t\t\t0;\n\n\t\tvar jqFilter = $('input', filter)\n\t\t\t.val(previousSearch.sSearch)\n\t\t\t.attr('placeholder', language.sSearchPlaceholder)\n\t\t\t.on(\n\t\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\n\t\t\t\tsearchDelay ?\n\t\t\t\t\t_fnThrottle(searchFn, searchDelay) :\n\t\t\t\t\tsearchFn\n\t\t\t)\n\t\t\t.on('mouseup', function(e) {\n\t\t\t\t// Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\n\t\t\t\t// on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\n\t\t\t\t// checks the value to see if it has changed. In other browsers it won't have.\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsearchFn.call(jqFilter[0], e);\n\t\t\t\t}, 10);\n\t\t\t})\n\t\t\t.on('keypress.DT', function(e) {\n\t\t\t\t/* Prevent form submission */\n\t\t\t\tif (e.keyCode == 13) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\t\t\t.attr('aria-controls', tableId);\n\n\t\t// Update the input elements whenever the table is filtered\n\t\t$(settings.nTable).on('search.dt.DT', function(ev, s) {\n\t\t\tif (settings === s) {\n\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t// inside an iframe or frame...\n\t\t\t\ttry {\n\t\t\t\t\tif (jqFilter[0] !== document.activeElement) {\n\t\t\t\t\t\tjqFilter.val(previousSearch.sSearch);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\t\t});\n\n\t\treturn filter[0];\n\t}\n\n\n\t/**\n\t * Filter the table using both the global filter and column based filtering\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oSearch search information\n\t * @param oInput\n\t *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterComplete(oSettings, oInput, iForce) {\n\t\tvar oPrevSearch = oSettings.oPreviousSearch;\n\t\tvar aoPrevSearch = oSettings.aoPreSearchCols;\n\t\tvar fnSaveFilter = function(oFilter) {\n\t\t\t/* Save the filtering values */\n\t\t\toPrevSearch.sSearch = oFilter.sSearch;\n\t\t\toPrevSearch.bRegex = oFilter.bRegex;\n\t\t\toPrevSearch.bSmart = oFilter.bSmart;\n\t\t\toPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n\t\t\toPrevSearch.return = oFilter.return;\n\t\t};\n\t\tvar fnRegex = function(o) {\n\t\t\t// Backwards compatibility with the bEscapeRegex option\n\t\t\treturn o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\n\t\t};\n\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t// @todo As per sort - can this be moved into an event handler?\n\t\t_fnColumnTypes(oSettings);\n\n\t\t/* In server-side processing all filtering is done by the server, so no point hanging around here */\n\t\tif (_fnDataSource(oSettings) != 'ssp') {\n\t\t\t/* Global filter */\n\t\t\t_fnFilter(oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive, oInput.return);\n\t\t\tfnSaveFilter(oInput);\n\n\t\t\t/* Now do the individual column filter */\n\t\t\tfor (var i = 0; i < aoPrevSearch.length; i++) {\n\t\t\t\t_fnFilterColumn(oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),\n\t\t\t\t\taoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive);\n\t\t\t}\n\n\t\t\t/* Custom filtering */\n\t\t\t_fnFilterCustom(oSettings);\n\t\t} else {\n\t\t\tfnSaveFilter(oInput);\n\t\t}\n\n\t\t/* Tell the draw function we have been filtering */\n\t\toSettings.bFiltered = true;\n\t\t_fnCallbackFire(oSettings, null, 'search', [oSettings]);\n\t}\n\n\n\t/**\n\t * Apply custom filtering functions\n\t *  @param {object} oSettings dataTables settings object\n\t * @param settings\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCustom(settings) {\n\t\tvar filters = DataTable.ext.search;\n\t\tvar displayRows = settings.aiDisplay;\n\t\tvar row, rowIdx;\n\n\t\tfor (var i = 0, ien = filters.length; i < ien; i++) {\n\t\t\tvar rows = [];\n\n\t\t\t// Loop over each row and see if it should be included\n\t\t\tfor (var j = 0, jen = displayRows.length; j < jen; j++) {\n\t\t\t\trowIdx = displayRows[ j ];\n\t\t\t\trow = settings.aoData[ rowIdx ];\n\n\t\t\t\tif (filters[i](settings, row._aFilterData, rowIdx, row._aData, j)) {\n\t\t\t\t\trows.push(rowIdx);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// So the array reference doesn't break set the results into the\n\t\t\t// existing array\n\t\t\tdisplayRows.length = 0;\n\t\t\t$.merge(displayRows, rows);\n\t\t}\n\t}\n\n\n\t/**\n\t * Filter the table on a per-column basis\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sInput string to filter on\n\t *  @param {int} iColumn column to filter\n\t *  @param {bool} bRegex treat search string as a regular expression or not\n\t *  @param {bool} bSmart use smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n\t * @param settings\n\t * @param searchStr\n\t * @param colIdx\n\t * @param regex\n\t * @param smart\n\t * @param caseInsensitive\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterColumn(settings, searchStr, colIdx, regex, smart, caseInsensitive) {\n\t\tif (searchStr === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tvar data;\n\t\tvar out = [];\n\t\tvar display = settings.aiDisplay;\n\t\tvar rpSearch = _fnFilterCreateSearch(searchStr, regex, smart, caseInsensitive);\n\n\t\tfor (var i = 0; i < display.length; i++) {\n\t\t\tdata = settings.aoData[ display[i] ]._aFilterData[ colIdx ];\n\n\t\t\tif (rpSearch.test(data)) {\n\t\t\t\tout.push(display[i]);\n\t\t\t}\n\t\t}\n\n\t\tsettings.aiDisplay = out;\n\t}\n\n\n\t/**\n\t * Filter the data table based on user input and draw the table\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} input string to filter on\n\t *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\n\t *  @param {bool} regex treat as a regular expression or not\n\t *  @param {bool} smart perform smart filtering or not\n\t *  @param {bool} caseInsensitive Do case insensitive matching or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilter(settings, input, force, regex, smart, caseInsensitive) {\n\t\tvar rpSearch = _fnFilterCreateSearch(input, regex, smart, caseInsensitive);\n\t\tvar prevSearch = settings.oPreviousSearch.sSearch;\n\t\tvar displayMaster = settings.aiDisplayMaster;\n\t\tvar display, invalidated, i;\n\t\tvar filtered = [];\n\n\t\t// Need to take account of custom filtering functions - always filter\n\t\tif (DataTable.ext.search.length !== 0) {\n\t\t\tforce = true;\n\t\t}\n\n\t\t// Check if any of the rows were invalidated\n\t\tinvalidated = _fnFilterData(settings);\n\n\t\t// If the input is blank - we just want the full data set\n\t\tif (input.length <= 0) {\n\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t} else {\n\t\t\t// New search - start from the master array\n\t\t\tif (invalidated ||\n\t\t\t\t force ||\n\t\t\t\t regex ||\n\t\t\t\t prevSearch.length > input.length ||\n\t\t\t\t input.indexOf(prevSearch) !== 0 ||\n\t\t\t\t settings.bSorted // On resort, the display master needs to be\n\t\t\t\t                  // re-filtered since indexes will have changed\n\t\t\t) {\n\t\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t\t}\n\n\t\t\t// Search the display array\n\t\t\tdisplay = settings.aiDisplay;\n\n\t\t\tfor (i = 0; i < display.length; i++) {\n\t\t\t\tif (rpSearch.test(settings.aoData[ display[i] ]._sFilterRow)) {\n\t\t\t\t\tfiltered.push(display[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsettings.aiDisplay = filtered;\n\t\t}\n\t}\n\n\n\t/**\n\t * Build a regular expression object suitable for searching a table\n\t *  @param {string} sSearch string to search for\n\t *  @param {bool} bRegex treat as a regular expression or not\n\t *  @param {bool} bSmart perform smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n\t * @param search\n\t * @param regex\n\t * @param smart\n\t * @param caseInsensitive\n\t *  @returns {RegExp} constructed object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCreateSearch(search, regex, smart, caseInsensitive) {\n\t\tsearch = regex ?\n\t\t\tsearch :\n\t\t\t_fnEscapeRegex(search);\n\n\t\tif (smart) {\n\t\t\t/* For smart filtering we want to allow the search to work regardless of\n\t\t\t * word order. We also want double quoted text to be preserved, so word\n\t\t\t * order is important - a la google. So this is what we want to\n\t\t\t * generate:\n\t\t\t *\n\t\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n\t\t\t */\n\t\t\tvar a = $.map(search.match(/\"[^\"]+\"|[^ ]+/g) || [''], function(word) {\n\t\t\t\tif (word.charAt(0) === '\"') {\n\t\t\t\t\tvar m = word.match(/^\"(.*)\"$/);\n\t\t\t\t\tword = m ? m[1] : word;\n\t\t\t\t}\n\n\t\t\t\treturn word.replace('\"', '');\n\t\t\t});\n\n\t\t\tsearch = '^(?=.*?' + a.join(')(?=.*?') + ').*$';\n\t\t}\n\n\t\treturn new RegExp(search, caseInsensitive ? 'i' : '');\n\t}\n\n\n\t/**\n\t * Escape a string such that it can be used in a regular expression\n\t *  @param {string} sVal string to escape\n\t *  @returns {string} escaped string\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnEscapeRegex = DataTable.util.escapeRegex;\n\n\tvar __filter_div = $('<div>')[0];\n\tvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\n\t// Update the filtering data for each row if needed (by invalidation or first run)\n\t/**\n\t * @param settings\n\t */\n\tfunction _fnFilterData(settings) {\n\t\tvar columns = settings.aoColumns;\n\t\tvar column;\n\t\tvar i, j, ien, jen, filterData, cellData, row;\n\t\tvar wasInvalidated = false;\n\n\t\tfor (i = 0, ien = settings.aoData.length; i < ien; i++) {\n\t\t\trow = settings.aoData[i];\n\n\t\t\tif (!row._aFilterData) {\n\t\t\t\tfilterData = [];\n\n\t\t\t\tfor (j = 0, jen = columns.length; j < jen; j++) {\n\t\t\t\t\tcolumn = columns[j];\n\n\t\t\t\t\tif (column.bSearchable) {\n\t\t\t\t\t\tcellData = _fnGetCellData(settings, i, j, 'filter');\n\n\t\t\t\t\t\t// Search in DataTables 1.10 is string based. In 1.11 this\n\t\t\t\t\t\t// should be altered to also allow strict type checking.\n\t\t\t\t\t\tif (cellData === null) {\n\t\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (typeof cellData !== 'string' && cellData.toString) {\n\t\t\t\t\t\t\tcellData = cellData.toString();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// If it looks like there is an HTML entity in the string,\n\t\t\t\t\t// attempt to decode it so sorting works as expected. Note that\n\t\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\n\t\t\t\t\t// method used here is much faster http://jsperf.com/html-decode\n\t\t\t\t\tif (cellData.indexOf && cellData.indexOf('&') !== -1) {\n\t\t\t\t\t\t__filter_div.innerHTML = cellData;\n\t\t\t\t\t\tcellData = __filter_div_textContent ?\n\t\t\t\t\t\t\t__filter_div.textContent :\n\t\t\t\t\t\t\t__filter_div.innerText;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (cellData.replace) {\n\t\t\t\t\t\tcellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\n\t\t\t\t\t}\n\n\t\t\t\t\tfilterData.push(cellData);\n\t\t\t\t}\n\n\t\t\t\trow._aFilterData = filterData;\n\t\t\t\trow._sFilterRow = filterData.join('  ');\n\t\t\t\twasInvalidated = true;\n\t\t\t}\n\t\t}\n\n\t\treturn wasInvalidated;\n\t}\n\n\n\t/**\n\t * Convert from the internal Hungarian notation to camelCase for external\n\t * interaction\n\t *  @param {object} obj Object to convert\n\t *  @returns {object} Inverted object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSearchToCamel(obj) {\n\t\treturn {\n\t\t\tsearch:          obj.sSearch,\n\t\t\tsmart:           obj.bSmart,\n\t\t\tregex:           obj.bRegex,\n\t\t\tcaseInsensitive: obj.bCaseInsensitive\n\t\t};\n\t}\n\n\n\t/**\n\t * Convert from camelCase notation to the internal Hungarian. We could use the\n\t * Hungarian convert function here, but this is cleaner\n\t *  @param {object} obj Object to convert\n\t *  @returns {object} Inverted object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSearchToHung(obj) {\n\t\treturn {\n\t\t\tsSearch:          obj.search,\n\t\t\tbSmart:           obj.smart,\n\t\t\tbRegex:           obj.regex,\n\t\t\tbCaseInsensitive: obj.caseInsensitive\n\t\t};\n\t}\n\n\t/**\n\t * Generate the node required for the info display\n\t *  @param {object} oSettings dataTables settings object\n\t * @param settings\n\t *  @returns {node} Information element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlInfo(settings) {\n\t\tvar\n\t\t\ttid = settings.sTableId,\n\t\t\tnodes = settings.aanFeatures.i,\n\t\t\tn = $('<div/>', {\n\t\t\t\t'class': settings.oClasses.sInfo,\n\t\t\t\t'id': !nodes ? tid + '_info' : null\n\t\t\t});\n\n\t\tif (!nodes) {\n\t\t\t// Update display on each draw\n\t\t\tsettings.aoDrawCallback.push({\n\t\t\t\t\"fn\": _fnUpdateInfo,\n\t\t\t\t\"sName\": \"information\"\n\t\t\t});\n\n\t\t\tn\n\t\t\t\t.attr('role', 'status')\n\t\t\t\t.attr('aria-live', 'polite');\n\n\t\t\t// Table is described by our info div\n\t\t\t$(settings.nTable).attr('aria-describedby', tid + '_info');\n\t\t}\n\n\t\treturn n[0];\n\t}\n\n\n\t/**\n\t * Update the information elements in the display\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnUpdateInfo(settings) {\n\t\t/* Show information about the table */\n\t\tvar nodes = settings.aanFeatures.i;\n\t\tif (nodes.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar\n\t\t\tlang = settings.oLanguage,\n\t\t\tstart = settings._iDisplayStart + 1,\n\t\t\tend = settings.fnDisplayEnd(),\n\t\t\tmax = settings.fnRecordsTotal(),\n\t\t\ttotal = settings.fnRecordsDisplay(),\n\t\t\tout = total ?\n\t\t\t\tlang.sInfo :\n\t\t\t\tlang.sInfoEmpty;\n\n\t\tif (total !== max) {\n\t\t\t/* Record set after filtering */\n\t\t\tout += ' ' + lang.sInfoFiltered;\n\t\t}\n\n\t\t// Convert the macros\n\t\tout += lang.sInfoPostFix;\n\t\tout = _fnInfoMacros(settings, out);\n\n\t\tvar callback = lang.fnInfoCallback;\n\t\tif (callback !== null) {\n\t\t\tout = callback.call(settings.oInstance,\n\t\t\t\tsettings, start, end, max, total, out\n\t\t\t);\n\t\t}\n\n\t\t$(nodes).html(out);\n\t}\n\n\n\t/**\n\t * @param settings\n\t * @param str\n\t */\n\tfunction _fnInfoMacros(settings, str) {\n\t\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n\t\t// internally\n\t\tvar\n\t\t\tformatter = settings.fnFormatNumber,\n\t\t\tstart = settings._iDisplayStart + 1,\n\t\t\tlen = settings._iDisplayLength,\n\t\t\tvis = settings.fnRecordsDisplay(),\n\t\t\tall = len === -1;\n\n\t\treturn str.\n\t\t\treplace(/_START_/g, formatter.call(settings, start)).\n\t\t\treplace(/_END_/g, formatter.call(settings, settings.fnDisplayEnd())).\n\t\t\treplace(/_MAX_/g, formatter.call(settings, settings.fnRecordsTotal())).\n\t\t\treplace(/_TOTAL_/g, formatter.call(settings, vis)).\n\t\t\treplace(/_PAGE_/g, formatter.call(settings, all ? 1 : Math.ceil(start / len))).\n\t\t\treplace(/_PAGES_/g, formatter.call(settings, all ? 1 : Math.ceil(vis / len)));\n\t}\n\n\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitialise(settings) {\n\t\tvar i, iLen,\niAjaxStart = settings.iInitDisplayStart;\n\t\tvar columns = settings.aoColumns,\ncolumn;\n\t\tvar features = settings.oFeatures;\n\t\tvar deferLoading = settings.bDeferLoading; // Value modified by the draw\n\n\t\t/* Ensure that the table data is fully initialised */\n\t\tif (!settings.bInitialised) {\n\t\t\tsetTimeout(function() {\n _fnInitialise(settings);\n}, 200);\n\t\t\treturn;\n\t\t}\n\n\t\t/* Show the display HTML options */\n\t\t_fnAddOptionsHtml(settings);\n\n\t\t/* Build and draw the header / footer for the table */\n\t\t_fnBuildHead(settings);\n\t\t_fnDrawHead(settings, settings.aoHeader);\n\t\t_fnDrawHead(settings, settings.aoFooter);\n\n\t\t/* Okay to show that something is going on now */\n\t\t_fnProcessingDisplay(settings, true);\n\n\t\t/* Calculate sizes for columns */\n\t\tif (features.bAutoWidth) {\n\t\t\t_fnCalculateColumnWidths(settings);\n\t\t}\n\n\t\tfor (i = 0, iLen = columns.length; i < iLen; i++) {\n\t\t\tcolumn = columns[i];\n\n\t\t\tif (column.sWidth) {\n\t\t\t\tcolumn.nTh.style.width = _fnStringToCss(column.sWidth);\n\t\t\t}\n\t\t}\n\n\t\t_fnCallbackFire(settings, null, 'preInit', [settings]);\n\n\t\t// If there is default sorting required - let's do it. The sort function\n\t\t// will do the drawing for us. Otherwise we draw the table regardless of the\n\t\t// Ajax source - this allows the table to look initialised for Ajax sourcing\n\t\t// data (show 'loading' message possibly)\n\t\t_fnReDraw(settings);\n\n\t\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\n\t\tvar dataSrc = _fnDataSource(settings);\n\t\tif (dataSrc != 'ssp' || deferLoading) {\n\t\t\t// If there is an ajax source load the data\n\t\t\tif (dataSrc == 'ajax') {\n\t\t\t\t_fnBuildAjax(settings, [], function(json) {\n\t\t\t\t\tvar aData = _fnAjaxDataSrc(settings, json);\n\n\t\t\t\t\t// Got the data - add it to the table\n\t\t\t\t\tfor (i = 0; i < aData.length; i++) {\n\t\t\t\t\t\t_fnAddData(settings, aData[i]);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reset the init display for cookie saving. We've already done\n\t\t\t\t\t// a filter, and therefore cleared it before. So we need to make\n\t\t\t\t\t// it appear 'fresh'\n\t\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\n\n\t\t\t\t\t_fnReDraw(settings);\n\n\t\t\t\t\t_fnProcessingDisplay(settings, false);\n\t\t\t\t\t_fnInitComplete(settings, json);\n\t\t\t\t}, settings);\n\t\t\t} else {\n\t\t\t\t_fnProcessingDisplay(settings, false);\n\t\t\t\t_fnInitComplete(settings);\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} oSettings dataTables settings object\n\t * @param settings\n\t *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n\t *    with client-side processing (optional)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitComplete(settings, json) {\n\t\tsettings._bInitComplete = true;\n\n\t\t// When data was added after the initialisation (data or Ajax) we need to\n\t\t// calculate the column sizing\n\t\tif (json || settings.oInit.aaData) {\n\t\t\t_fnAdjustColumnSizing(settings);\n\t\t}\n\n\t\t_fnCallbackFire(settings, null, 'plugin-init', [settings, json]);\n\t\t_fnCallbackFire(settings, 'aoInitComplete', 'init', [settings, json]);\n\t}\n\n\n\t/**\n\t * @param settings\n\t * @param val\n\t */\n\tfunction _fnLengthChange(settings, val) {\n\t\tvar len = parseInt(val, 10);\n\t\tsettings._iDisplayLength = len;\n\n\t\t_fnLengthOverflow(settings);\n\n\t\t// Fire length change event\n\t\t_fnCallbackFire(settings, null, 'length', [settings, len]);\n\t}\n\n\n\t/**\n\t * Generate the node required for user display length changing\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Display length feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlLength(settings) {\n\t\tvar\n\t\t\tclasses = settings.oClasses,\n\t\t\ttableId = settings.sTableId,\n\t\t\tmenu = settings.aLengthMenu,\n\t\t\td2 = Array.isArray(menu[0]),\n\t\t\tlengths = d2 ? menu[0] : menu,\n\t\t\tlanguage = d2 ? menu[1] : menu;\n\n\t\tvar select = $('<select/>', {\n\t\t\t'name':          tableId + '_length',\n\t\t\t'aria-controls': tableId,\n\t\t\t'class':         classes.sLengthSelect\n\t\t});\n\n\t\tfor (var i = 0, ien = lengths.length; i < ien; i++) {\n\t\t\tselect[0][ i ] = new Option(\n\t\t\t\ttypeof language[i] === 'number' ?\n\t\t\t\t\tsettings.fnFormatNumber(language[i]) :\n\t\t\t\t\tlanguage[i],\n\t\t\t\tlengths[i]\n\t\t\t);\n\t\t}\n\n\t\tvar div = $('<div><label/></div>').addClass(classes.sLength);\n\t\tif (!settings.aanFeatures.l) {\n\t\t\tdiv[0].id = tableId + '_length';\n\t\t}\n\n\t\tdiv.children().append(\n\t\t\tsettings.oLanguage.sLengthMenu.replace('_MENU_', select[0].outerHTML)\n\t\t);\n\n\t\t// Can't use `select` variable as user might provide their own and the\n\t\t// reference is broken by the use of outerHTML\n\t\t$('select', div)\n\t\t\t.val(settings._iDisplayLength)\n\t\t\t.on('change.DT', function(e) {\n\t\t\t\t_fnLengthChange(settings, $(this).val());\n\t\t\t\t_fnDraw(settings);\n\t\t\t});\n\n\t\t// Update node value whenever anything changes the table's length\n\t\t$(settings.nTable).on('length.dt.DT', function(e, s, len) {\n\t\t\tif (settings === s) {\n\t\t\t\t$('select', div).val(len);\n\t\t\t}\n\t\t});\n\n\t\treturn div[0];\n\t}\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Note that most of the paging logic is done in\n\t * DataTable.ext.pager\n\t */\n\n\t/**\n\t * Generate the node required for default pagination\n\t *  @param {object} oSettings dataTables settings object\n\t * @param settings\n\t *  @returns {node} Pagination feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlPaginate(settings) {\n\t\tvar\n\t\t\ttype = settings.sPaginationType,\n\t\t\tplugin = DataTable.ext.pager[ type ],\n\t\t\tmodern = typeof plugin === 'function',\n\t\t\tredraw = function(settings) {\n\t\t\t\t_fnDraw(settings);\n\t\t\t},\n\t\t\tnode = $('<div/>').addClass(settings.oClasses.sPaging + type)[0],\n\t\t\tfeatures = settings.aanFeatures;\n\n\t\tif (!modern) {\n\t\t\tplugin.fnInit(settings, node, redraw);\n\t\t}\n\n\t\t/* Add a draw callback for the pagination on first instance, to update the paging display */\n\t\tif (!features.p) {\n\t\t\tnode.id = settings.sTableId + '_paginate';\n\n\t\t\tsettings.aoDrawCallback.push({\n\t\t\t\t\"fn\": function(settings) {\n\t\t\t\t\tif (modern) {\n\t\t\t\t\t\tvar\n\t\t\t\t\t\t\tstart = settings._iDisplayStart,\n\t\t\t\t\t\t\tlen = settings._iDisplayLength,\n\t\t\t\t\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\t\t\t\t\tall = len === -1,\n\t\t\t\t\t\t\tpage = all ? 0 : Math.ceil(start / len),\n\t\t\t\t\t\t\tpages = all ? 1 : Math.ceil(visRecords / len),\n\t\t\t\t\t\t\tbuttons = plugin(page, pages),\n\t\t\t\t\t\t\ti, ien;\n\n\t\t\t\t\t\tfor (i = 0, ien = features.p.length; i < ien; i++) {\n\t\t\t\t\t\t\t_fnRenderer(settings, 'pageButton')(\n\t\t\t\t\t\t\t\tsettings, features.p[i], i, buttons, page, pages\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tplugin.fnUpdate(settings, redraw);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"sName\": \"pagination\"\n\t\t\t});\n\t\t}\n\n\t\treturn node;\n\t}\n\n\n\t/**\n\t * Alter the display settings to change the page\n\t *  @param {object} settings DataTables settings object\n\t *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n\t *    \"next\" or \"last\" or page number to jump to (integer)\n\t *  @param [bool] redraw Automatically draw the update or not\n\t * @param redraw\n\t *  @returns {bool} true page has changed, false - no change\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnPageChange(settings, action, redraw) {\n\t\tvar\n\t\t\tstart = settings._iDisplayStart,\n\t\t\tlen = settings._iDisplayLength,\n\t\t\trecords = settings.fnRecordsDisplay();\n\n\t\tif (records === 0 || len === -1) {\n\t\t\tstart = 0;\n\t\t} else if (typeof action === \"number\") {\n\t\t\tstart = action * len;\n\n\t\t\tif (start > records) {\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t} else if (action == \"first\") {\n\t\t\tstart = 0;\n\t\t} else if (action == \"previous\") {\n\t\t\tstart = len >= 0 ?\n\t\t\t\tstart - len :\n\t\t\t\t0;\n\n\t\t\tif (start < 0) {\n\t\t\t  start = 0;\n\t\t\t}\n\t\t} else if (action == \"next\") {\n\t\t\tif (start + len < records) {\n\t\t\t\tstart += len;\n\t\t\t}\n\t\t} else if (action == \"last\") {\n\t\t\tstart = Math.floor((records - 1) / len) * len;\n\t\t} else {\n\t\t\t_fnLog(settings, 0, \"Unknown paging action: \" + action, 5);\n\t\t}\n\n\t\tvar changed = settings._iDisplayStart !== start;\n\t\tsettings._iDisplayStart = start;\n\n\t\tif (changed) {\n\t\t\t_fnCallbackFire(settings, null, 'page', [settings]);\n\n\t\t\tif (redraw) {\n\t\t\t\t_fnDraw(settings);\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n\n\n\t/**\n\t * Generate the node required for the processing node\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Processing element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlProcessing(settings) {\n\t\treturn $('<div/>', {\n\t\t\t\t'id': !settings.aanFeatures.r ? settings.sTableId + '_processing' : null,\n\t\t\t\t'class': settings.oClasses.sProcessing\n\t\t\t})\n\t\t\t.html(settings.oLanguage.sProcessing)\n\t\t\t.append('<div><div></div><div></div><div></div><div></div></div>')\n\t\t\t.insertBefore(settings.nTable)[0];\n\t}\n\n\n\t/**\n\t * Display or hide the processing indicator\n\t *  @param {object} settings dataTables settings object\n\t *  @param {bool} show Show the processing indicator (true) or not (false)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnProcessingDisplay(settings, show) {\n\t\tif (settings.oFeatures.bProcessing) {\n\t\t\t$(settings.aanFeatures.r).css('display', show ? 'block' : 'none');\n\t\t}\n\n\t\t_fnCallbackFire(settings, null, 'processing', [settings, show]);\n\t}\n\n\t/**\n\t * Add any control elements for the table - specifically scrolling\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Node to add to the DOM\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlTable(settings) {\n\t\tvar table = $(settings.nTable);\n\n\t\t// Scrolling from here on in\n\t\tvar scroll = settings.oScroll;\n\n\t\tif (scroll.sX === '' && scroll.sY === '') {\n\t\t\treturn settings.nTable;\n\t\t}\n\n\t\tvar scrollX = scroll.sX;\n\t\tvar scrollY = scroll.sY;\n\t\tvar classes = settings.oClasses;\n\t\tvar caption = table.children('caption');\n\t\tvar captionSide = caption.length ? caption[0]._captionSide : null;\n\t\tvar headerClone = $(table[0].cloneNode(false));\n\t\tvar footerClone = $(table[0].cloneNode(false));\n\t\tvar footer = table.children('tfoot');\n\t\tvar _div = '<div/>';\n\t\tvar size = function(s) {\n\t\t\treturn !s ? null : _fnStringToCss(s);\n\t\t};\n\n\t\tif (!footer.length) {\n\t\t\tfooter = null;\n\t\t}\n\n\t\t/*\n\t\t * The HTML structure that we want to generate in this function is:\n\t\t *  div - scroller\n\t\t *    div - scroll head\n\t\t *      div - scroll head inner\n\t\t *        table - scroll head table\n\t\t *          thead - thead\n\t\t *    div - scroll body\n\t\t *      table - table (master table)\n\t\t *        thead - thead clone for sizing\n\t\t *        tbody - tbody\n\t\t *    div - scroll foot\n\t\t *      div - scroll foot inner\n\t\t *        table - scroll foot table\n\t\t *          tfoot - tfoot\n\t\t */\n\t\tvar scroller = $(_div, {'class': classes.sScrollWrapper})\n\t\t\t.append(\n\t\t\t\t$(_div, {'class': classes.sScrollHead})\n\t\t\t\t\t.css({\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t})\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, {'class': classes.sScrollHeadInner})\n\t\t\t\t\t\t\t.css({\n\t\t\t\t\t\t\t\t'box-sizing': 'content-box',\n\t\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\theaderClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css('margin-left', 0)\n\t\t\t\t\t\t\t\t\t.append(captionSide === 'top' ? caption : null)\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('thead')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.append(\n\t\t\t\t$(_div, {'class': classes.sScrollBody})\n\t\t\t\t\t.css({\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\t\twidth: size(scrollX)\n\t\t\t\t\t})\n\t\t\t\t\t.append(table)\n\t\t\t);\n\n\t\tif (footer) {\n\t\t\tscroller.append(\n\t\t\t\t$(_div, {'class': classes.sScrollFoot})\n\t\t\t\t\t.css({\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t})\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, {'class': classes.sScrollFootInner})\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\tfooterClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css('margin-left', 0)\n\t\t\t\t\t\t\t\t\t.append(captionSide === 'bottom' ? caption : null)\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('tfoot')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tvar children = scroller.children();\n\t\tvar scrollHead = children[0];\n\t\tvar scrollBody = children[1];\n\t\tvar scrollFoot = footer ? children[2] : null;\n\n\t\t// When the body is scrolled, then we also want to scroll the headers\n\t\tif (scrollX) {\n\t\t\t$(scrollBody).on('scroll.DT', function(e) {\n\t\t\t\tvar scrollLeft = this.scrollLeft;\n\n\t\t\t\tscrollHead.scrollLeft = scrollLeft;\n\n\t\t\t\tif (footer) {\n\t\t\t\t\tscrollFoot.scrollLeft = scrollLeft;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$(scrollBody).css('max-height', scrollY);\n\t\tif (!scroll.bCollapse) {\n\t\t\t$(scrollBody).css('height', scrollY);\n\t\t}\n\n\t\tsettings.nScrollHead = scrollHead;\n\t\tsettings.nScrollBody = scrollBody;\n\t\tsettings.nScrollFoot = scrollFoot;\n\n\t\t// On redraw - align columns\n\t\tsettings.aoDrawCallback.push({\n\t\t\t\"fn\": _fnScrollDraw,\n\t\t\t\"sName\": \"scrolling\"\n\t\t});\n\n\t\treturn scroller[0];\n\t}\n\n\n\t/**\n\t * Update the header, footer and body tables for resizing - i.e. column\n\t * alignment.\n\t *\n\t * Welcome to the most horrible function DataTables. The process that this\n\t * function follows is basically:\n\t *   1. Re-create the table inside the scrolling div\n\t *   2. Take live measurements from the DOM\n\t *   3. Apply the measurements to align the columns\n\t *   4. Clean up\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnScrollDraw(settings) {\n\t\t// Given that this is such a monster function, a lot of variables are use\n\t\t// to try and keep the minimised size as small as possible\n\t\tvar\n\t\t\tscroll = settings.oScroll,\n\t\t\tscrollX = scroll.sX,\n\t\t\tscrollXInner = scroll.sXInner,\n\t\t\tscrollY = scroll.sY,\n\t\t\tbarWidth = scroll.iBarWidth,\n\t\t\tdivHeader = $(settings.nScrollHead),\n\t\t\tdivHeaderStyle = divHeader[0].style,\n\t\t\tdivHeaderInner = divHeader.children('div'),\n\t\t\tdivHeaderInnerStyle = divHeaderInner[0].style,\n\t\t\tdivHeaderTable = divHeaderInner.children('table'),\n\t\t\tdivBodyEl = settings.nScrollBody,\n\t\t\tdivBody = $(divBodyEl),\n\t\t\tdivBodyStyle = divBodyEl.style,\n\t\t\tdivFooter = $(settings.nScrollFoot),\n\t\t\tdivFooterInner = divFooter.children('div'),\n\t\t\tdivFooterTable = divFooterInner.children('table'),\n\t\t\theader = $(settings.nTHead),\n\t\t\ttable = $(settings.nTable),\n\t\t\ttableEl = table[0],\n\t\t\ttableStyle = tableEl.style,\n\t\t\tfooter = settings.nTFoot ? $(settings.nTFoot) : null,\n\t\t\tbrowser = settings.oBrowser,\n\t\t\tie67 = browser.bScrollOversize,\n\t\t\tdtHeaderCells = _pluck(settings.aoColumns, 'nTh'),\n\t\t\theaderTrgEls, footerTrgEls,\n\t\t\theaderSrcEls, footerSrcEls,\n\t\t\theaderCopy, footerCopy,\n\t\t\theaderWidths = [],\nfooterWidths = [],\n\t\t\theaderContent = [],\nfooterContent = [],\n\t\t\tidx, correction, sanityWidth,\n\t\t\tzeroOut = function(nSizer) {\n\t\t\t\tvar style = nSizer.style;\n\t\t\t\tstyle.paddingTop = \"0\";\n\t\t\t\tstyle.paddingBottom = \"0\";\n\t\t\t\tstyle.borderTopWidth = \"0\";\n\t\t\t\tstyle.borderBottomWidth = \"0\";\n\t\t\t\tstyle.height = 0;\n\t\t\t};\n\n\t\t// If the scrollbar visibility has changed from the last draw, we need to\n\t\t// adjust the column sizes as the table width will have changed to account\n\t\t// for the scrollbar\n\t\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\n\t\tif (settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined) {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t\t_fnAdjustColumnSizing(settings);\n\t\t\treturn; // Adjust column sizing will call this function again\n\t\t} else {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t}\n\n\t\t/*\n\t\t * 1. Re-create the table inside the scrolling div\n\t\t */\n\n\t\t// Remove the old minimised thead and tfoot elements in the inner table\n\t\ttable.children('thead, tfoot').remove();\n\n\t\tif (footer) {\n\t\t\tfooterCopy = footer.clone().prependTo(table);\n\t\t\tfooterTrgEls = footer.find('tr'); // The original tfoot is in its own table and must be sized\n\t\t\tfooterSrcEls = footerCopy.find('tr');\n\t\t\tfooterCopy.find('[id]').removeAttr('id');\n\t\t}\n\n\t\t// Clone the current header and footer elements and then place it into the inner table\n\t\theaderCopy = header.clone().prependTo(table);\n\t\theaderTrgEls = header.find('tr'); // Original header is in its own table\n\t\theaderSrcEls = headerCopy.find('tr');\n\t\theaderCopy.find('th, td').removeAttr('tabindex');\n\t\theaderCopy.find('[id]').removeAttr('id');\n\n\n\t\t/*\n\t\t * 2. Take live measurements from the DOM - do not alter the DOM itself!\n\t\t */\n\n\t\t// Remove old sizing and apply the calculated column widths\n\t\t// Get the unique column headers in the newly created (cloned) header. We want to apply the\n\t\t// calculated sizes to this header\n\t\tif (!scrollX) {\n\t\t\tdivBodyStyle.width = '100%';\n\t\t\tdivHeader[0].style.width = '100%';\n\t\t}\n\n\t\t$.each(_fnGetUniqueThs(settings, headerCopy), function(i, el) {\n\t\t\tidx = _fnVisibleToColumnIndex(settings, i);\n\t\t\tel.style.width = settings.aoColumns[idx].sWidth;\n\t\t});\n\n\t\tif (footer) {\n\t\t\t_fnApplyToChildren(function(n) {\n\t\t\t\tn.style.width = \"\";\n\t\t\t}, footerSrcEls);\n\t\t}\n\n\t\t// Size the table as a whole\n\t\tsanityWidth = table.outerWidth();\n\t\tif (scrollX === \"\") {\n\t\t\t// No x scrolling\n\t\t\ttableStyle.width = \"100%\";\n\n\t\t\t// IE7 will make the width of the table when 100% include the scrollbar\n\t\t\t// - which is shouldn't. When there is a scrollbar we need to take this\n\t\t\t// into account.\n\t\t\tif (ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||\n\t\t\t\tdivBody.css('overflow-y') == \"scroll\")\n\t\t\t) {\n\t\t\t\ttableStyle.width = _fnStringToCss(table.outerWidth() - barWidth);\n\t\t\t}\n\n\t\t\t// Recalculate the sanity width\n\t\t\tsanityWidth = table.outerWidth();\n\t\t} else if (scrollXInner !== \"\") {\n\t\t\t// Legacy x scroll inner has been given - use it\n\t\t\ttableStyle.width = _fnStringToCss(scrollXInner);\n\n\t\t\t// Recalculate the sanity width\n\t\t\tsanityWidth = table.outerWidth();\n\t\t}\n\n\t\t// Hidden header should have zero height, so remove padding and borders. Then\n\t\t// set the width based on the real headers\n\n\t\t// Apply all styles in one pass\n\t\t_fnApplyToChildren(zeroOut, headerSrcEls);\n\n\t\t// Read all widths in next pass\n\t\t_fnApplyToChildren(function(nSizer) {\n\t\t\tvar style = window.getComputedStyle ?\n\t\t\t\twindow.getComputedStyle(nSizer).width :\n\t\t\t\t_fnStringToCss($(nSizer).width());\n\n\t\t\theaderContent.push(nSizer.innerHTML);\n\t\t\theaderWidths.push(style);\n\t\t}, headerSrcEls);\n\n\t\t// Apply all widths in final pass\n\t\t_fnApplyToChildren(function(nToSize, i) {\n\t\t\tnToSize.style.width = headerWidths[i];\n\t\t}, headerTrgEls);\n\n\t\t$(headerSrcEls).css('height', 0);\n\n\t\t/* Same again with the footer if we have one */\n\t\tif (footer) {\n\t\t\t_fnApplyToChildren(zeroOut, footerSrcEls);\n\n\t\t\t_fnApplyToChildren(function(nSizer) {\n\t\t\t\tfooterContent.push(nSizer.innerHTML);\n\t\t\t\tfooterWidths.push(_fnStringToCss($(nSizer).css('width')));\n\t\t\t}, footerSrcEls);\n\n\t\t\t_fnApplyToChildren(function(nToSize, i) {\n\t\t\t\tnToSize.style.width = footerWidths[i];\n\t\t\t}, footerTrgEls);\n\n\t\t\t$(footerSrcEls).height(0);\n\t\t}\n\n\n\t\t/*\n\t\t * 3. Apply the measurements\n\t\t */\n\n\t\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\n\t\t// the content of the cell so that the width applied to the header and body\n\t\t// both match, but we want to hide it completely. We want to also fix their\n\t\t// width to what they currently are\n\t\t_fnApplyToChildren(function(nSizer, i) {\n\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">' + headerContent[i] + '</div>';\n\t\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\t\tnSizer.style.width = headerWidths[i];\n\t\t}, headerSrcEls);\n\n\t\tif (footer) {\n\t\t\t_fnApplyToChildren(function(nSizer, i) {\n\t\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">' + footerContent[i] + '</div>';\n\t\t\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\t\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\t\t\tnSizer.style.width = footerWidths[i];\n\t\t\t}, footerSrcEls);\n\t\t}\n\n\t\t// Sanity check that the table is of a sensible width. If not then we are going to get\n\t\t// misalignment - try to prevent this by not allowing the table to shrink below its min width\n\t\tif (Math.round(table.outerWidth()) < Math.round(sanityWidth)) {\n\t\t\t// The min width depends upon if we have a vertical scrollbar visible or not */\n\t\t\tcorrection = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||\n\t\t\t\tdivBody.css('overflow-y') == \"scroll\")) ?\n\t\t\t\t\tsanityWidth + barWidth :\n\t\t\t\t\tsanityWidth;\n\n\t\t\t// IE6/7 are a law unto themselves...\n\t\t\tif (ie67 && (divBodyEl.scrollHeight >\n\t\t\t\tdivBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")\n\t\t\t) {\n\t\t\t\ttableStyle.width = _fnStringToCss(correction - barWidth);\n\t\t\t}\n\n\t\t\t// And give the user a warning that we've stopped the table getting too small\n\t\t\tif (scrollX === \"\" || scrollXInner !== \"\") {\n\t\t\t\t_fnLog(settings, 1, 'Possible column misalignment', 6);\n\t\t\t}\n\t\t} else {\n\t\t\tcorrection = '100%';\n\t\t}\n\n\t\t// Apply to the container elements\n\t\tdivBodyStyle.width = _fnStringToCss(correction);\n\t\tdivHeaderStyle.width = _fnStringToCss(correction);\n\n\t\tif (footer) {\n\t\t\tsettings.nScrollFoot.style.width = _fnStringToCss(correction);\n\t\t}\n\n\n\t\t/*\n\t\t * 4. Clean up\n\t\t */\n\t\tif (!scrollY) {\n\t\t\t/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n\t\t\t * the scrollbar height from the visible display, rather than adding it on. We need to\n\t\t\t * set the height in order to sort this. Don't want to do it in any other browsers.\n\t\t\t */\n\t\t\tif (ie67) {\n\t\t\t\tdivBodyStyle.height = _fnStringToCss(tableEl.offsetHeight + barWidth);\n\t\t\t}\n\t\t}\n\n\t\t/* Finally set the width's of the header and footer tables */\n\t\tvar iOuterWidth = table.outerWidth();\n\t\tdivHeaderTable[0].style.width = _fnStringToCss(iOuterWidth);\n\t\tdivHeaderInnerStyle.width = _fnStringToCss(iOuterWidth);\n\n\t\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\n\t\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\t\tvar bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n\t\tvar padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right');\n\t\tdivHeaderInnerStyle[ padding ] = bScrolling ? barWidth + \"px\" : \"0px\";\n\n\t\tif (footer) {\n\t\t\tdivFooterTable[0].style.width = _fnStringToCss(iOuterWidth);\n\t\t\tdivFooterInner[0].style.width = _fnStringToCss(iOuterWidth);\n\t\t\tdivFooterInner[0].style[padding] = bScrolling ? barWidth + \"px\" : \"0px\";\n\t\t}\n\n\t\t// Correct DOM ordering for colgroup - comes before the thead\n\t\ttable.children('colgroup').insertBefore(table.children('thead'));\n\n\t\t/* Adjust the position of the header in case we loose the y-scrollbar */\n\t\tdivBody.trigger('scroll');\n\n\t\t// If sorting or filtering has occurred, jump the scrolling back to the top\n\t\t// only if we aren't holding the position\n\t\tif ((settings.bSorted || settings.bFiltered) && !settings._drawHold) {\n\t\t\tdivBodyEl.scrollTop = 0;\n\t\t}\n\t}\n\n\n\t/**\n\t * Apply a given function to the display child nodes of an element array (typically\n\t * TD children of TR rows\n\t *  @param {function} fn Method to apply to the objects\n\t *  @param array {nodes} an1 List of elements to look through for display children\n\t *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n\t * @param an1\n\t * @param an2\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyToChildren(fn, an1, an2) {\n\t\tvar index = 0,\ni = 0,\niLen = an1.length;\n\t\tvar nNode1, nNode2;\n\n\t\twhile (i < iLen) {\n\t\t\tnNode1 = an1[i].firstChild;\n\t\t\tnNode2 = an2 ? an2[i].firstChild : null;\n\n\t\t\twhile (nNode1) {\n\t\t\t\tif (nNode1.nodeType === 1) {\n\t\t\t\t\tif (an2) {\n\t\t\t\t\t\tfn(nNode1, nNode2, index);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfn(nNode1, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\n\t\t\t\tnNode1 = nNode1.nextSibling;\n\t\t\t\tnNode2 = an2 ? nNode2.nextSibling : null;\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\t}\n\n\n\tvar __re_html_remove = /<.*?>/g;\n\n\n\t/**\n\t * Calculate the width of columns for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCalculateColumnWidths(oSettings) {\n\t\tvar\n\t\t\ttable = oSettings.nTable,\n\t\t\tcolumns = oSettings.aoColumns,\n\t\t\tscroll = oSettings.oScroll,\n\t\t\tscrollY = scroll.sY,\n\t\t\tscrollX = scroll.sX,\n\t\t\tscrollXInner = scroll.sXInner,\n\t\t\tcolumnCount = columns.length,\n\t\t\tvisibleColumns = _fnGetColumns(oSettings, 'bVisible'),\n\t\t\theaderCells = $('th', oSettings.nTHead),\n\t\t\ttableWidthAttr = table.getAttribute('width'), // From DOM element\n\t\t\ttableContainer = table.parentNode,\n\t\t\tuserInputs = false,\n\t\t\ti, column, columnIdx, width, outerWidth,\n\t\t\tbrowser = oSettings.oBrowser,\n\t\t\tie67 = browser.bScrollOversize;\n\n\t\tvar styleWidth = table.style.width;\n\t\tif (styleWidth && styleWidth.indexOf('%') !== -1) {\n\t\t\ttableWidthAttr = styleWidth;\n\t\t}\n\n\t\t/* Convert any user input sizes into pixel sizes */\n\t\tfor (i = 0; i < visibleColumns.length; i++) {\n\t\t\tcolumn = columns[ visibleColumns[i] ];\n\n\t\t\tif (column.sWidth !== null) {\n\t\t\t\tcolumn.sWidth = _fnConvertToWidth(column.sWidthOrig, tableContainer);\n\n\t\t\t\tuserInputs = true;\n\t\t\t}\n\t\t}\n\n\t\t/* If the number of columns in the DOM equals the number that we have to\n\t\t * process in DataTables, then we can use the offsets that are created by\n\t\t * the web- browser. No custom sizes can be set in order for this to happen,\n\t\t * nor scrolling used\n\t\t */\n\t\tif (ie67 || !userInputs && !scrollX && !scrollY &&\n\t\t     columnCount == _fnVisbleColumns(oSettings) &&\n\t\t     columnCount == headerCells.length\n\t\t) {\n\t\t\tfor (i = 0; i < columnCount; i++) {\n\t\t\t\tvar colIdx = _fnVisibleToColumnIndex(oSettings, i);\n\n\t\t\t\tif (colIdx !== null) {\n\t\t\t\t\tcolumns[ colIdx ].sWidth = _fnStringToCss(headerCells.eq(i).width());\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Otherwise construct a single row, worst case, table with the widest\n\t\t\t// node in the data, assign any user defined widths, then insert it into\n\t\t\t// the DOM and allow the browser to do all the hard work of calculating\n\t\t\t// table widths\n\t\t\tvar tmpTable = $(table).clone() // Don't use cloneNode - IE8 will remove events on the main table\n\t\t\t\t.css('visibility', 'hidden')\n\t\t\t\t.removeAttr('id');\n\n\t\t\t// Clean up the table body\n\t\t\ttmpTable.find('tbody tr').remove();\n\t\t\tvar tr = $('<tr/>').appendTo(tmpTable.find('tbody'));\n\n\t\t\t// Clone the table header and footer - we can't use the header / footer\n\t\t\t// from the cloned table, since if scrolling is active, the table's\n\t\t\t// real header and footer are contained in different table tags\n\t\t\ttmpTable.find('thead, tfoot').remove();\n\t\t\ttmpTable\n\t\t\t\t.append($(oSettings.nTHead).clone())\n\t\t\t\t.append($(oSettings.nTFoot).clone());\n\n\t\t\t// Remove any assigned widths from the footer (from scrolling)\n\t\t\ttmpTable.find('tfoot th, tfoot td').css('width', '');\n\n\t\t\t// Apply custom sizing to the cloned header\n\t\t\theaderCells = _fnGetUniqueThs(oSettings, tmpTable.find('thead')[0]);\n\n\t\t\tfor (i = 0; i < visibleColumns.length; i++) {\n\t\t\t\tcolumn = columns[ visibleColumns[i] ];\n\n\t\t\t\theaderCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?\n\t\t\t\t\t_fnStringToCss(column.sWidthOrig) :\n\t\t\t\t\t'';\n\n\t\t\t\t// For scrollX we need to force the column width otherwise the\n\t\t\t\t// browser will collapse it. If this width is smaller than the\n\t\t\t\t// width the column requires, then it will have no effect\n\t\t\t\tif (column.sWidthOrig && scrollX) {\n\t\t\t\t\t$(headerCells[i]).append($('<div/>').css({\n\t\t\t\t\t\twidth: column.sWidthOrig,\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\theight: 1\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Find the widest cell for each column and put it into the table\n\t\t\tif (oSettings.aoData.length) {\n\t\t\t\tfor (i = 0; i < visibleColumns.length; i++) {\n\t\t\t\t\tcolumnIdx = visibleColumns[i];\n\t\t\t\t\tcolumn = columns[ columnIdx ];\n\n\t\t\t\t\t$(_fnGetWidestNode(oSettings, columnIdx))\n\t\t\t\t\t\t.clone(false)\n\t\t\t\t\t\t.append(column.sContentPadding)\n\t\t\t\t\t\t.appendTo(tr);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tidy the temporary table - remove name attributes so there aren't\n\t\t\t// duplicated in the dom (radio elements for example)\n\t\t\t$('[name]', tmpTable).removeAttr('name');\n\n\t\t\t// Table has been built, attach to the document so we can work with it.\n\t\t\t// A holding element is used, positioned at the top of the container\n\t\t\t// with minimal height, so it has no effect on if the container scrolls\n\t\t\t// or not. Otherwise it might trigger scrolling when it actually isn't\n\t\t\t// needed\n\t\t\tvar holder = $('<div/>').css(scrollX || scrollY ?\n\t\t\t\t\t{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\theight: 1,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t} :\n\t\t\t\t\t{}\n\t\t\t\t)\n\t\t\t\t.append(tmpTable)\n\t\t\t\t.appendTo(tableContainer);\n\n\t\t\t// When scrolling (X or Y) we want to set the width of the table as\n\t\t\t// appropriate. However, when not scrolling leave the table width as it\n\t\t\t// is. This results in slightly different, but I think correct behaviour\n\t\t\tif (scrollX && scrollXInner) {\n\t\t\t\ttmpTable.width(scrollXInner);\n\t\t\t} else if (scrollX) {\n\t\t\t\ttmpTable.css('width', 'auto');\n\t\t\t\ttmpTable.removeAttr('width');\n\n\t\t\t\t// If there is no width attribute or style, then allow the table to\n\t\t\t\t// collapse\n\t\t\t\tif (tmpTable.width() < tableContainer.clientWidth && tableWidthAttr) {\n\t\t\t\t\ttmpTable.width(tableContainer.clientWidth);\n\t\t\t\t}\n\t\t\t} else if (scrollY) {\n\t\t\t\ttmpTable.width(tableContainer.clientWidth);\n\t\t\t} else if (tableWidthAttr) {\n\t\t\t\ttmpTable.width(tableWidthAttr);\n\t\t\t}\n\n\t\t\t// Get the width of each column in the constructed table - we need to\n\t\t\t// know the inner width (so it can be assigned to the other table's\n\t\t\t// cells) and the outer width so we can calculate the full width of the\n\t\t\t// table. This is safe since DataTables requires a unique cell for each\n\t\t\t// column, but if ever a header can span multiple columns, this will\n\t\t\t// need to be modified.\n\t\t\tvar total = 0;\n\t\t\tfor (i = 0; i < visibleColumns.length; i++) {\n\t\t\t\tvar cell = $(headerCells[i]);\n\t\t\t\tvar border = cell.outerWidth() - cell.width();\n\n\t\t\t\t// Use getBounding... where possible (not IE8-) because it can give\n\t\t\t\t// sub-pixel accuracy, which we then want to round up!\n\t\t\t\tvar bounding = browser.bBounding ?\n\t\t\t\t\tMath.ceil(headerCells[i].getBoundingClientRect().width) :\n\t\t\t\t\tcell.outerWidth();\n\n\t\t\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\n\t\t\t\t// of the table might not equal the total given here (IE!).\n\t\t\t\ttotal += bounding;\n\n\t\t\t\t// Width for each column to use\n\t\t\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss(bounding - border);\n\t\t\t}\n\n\t\t\ttable.style.width = _fnStringToCss(total);\n\n\t\t\t// Finished with the table - ditch it\n\t\t\tholder.remove();\n\t\t}\n\n\t\t// If there is a width attr, we want to attach an event listener which\n\t\t// allows the table sizing to automatically adjust when the window is\n\t\t// resized. Use the width attr rather than CSS, since we can't know if the\n\t\t// CSS is a relative value or absolute - DOM read is always px.\n\t\tif (tableWidthAttr) {\n\t\t\ttable.style.width = _fnStringToCss(tableWidthAttr);\n\t\t}\n\n\t\tif ((tableWidthAttr || scrollX) && !oSettings._reszEvt) {\n\t\t\tvar bindResize = function() {\n\t\t\t\t$(window).on('resize.DT-' + oSettings.sInstance, _fnThrottle(function() {\n\t\t\t\t\t_fnAdjustColumnSizing(oSettings);\n\t\t\t\t}));\n\t\t\t};\n\n\t\t\t// IE6/7 will crash if we bind a resize event handler on page load.\n\t\t\t// To be removed in 1.11 which drops IE6/7 support\n\t\t\tif (ie67) {\n\t\t\t\tsetTimeout(bindResize, 1000);\n\t\t\t} else {\n\t\t\t\tbindResize();\n\t\t\t}\n\n\t\t\toSettings._reszEvt = true;\n\t\t}\n\t}\n\n\n\t/**\n\t * Throttle the calls to a function. Arguments and context are maintained for\n\t * the throttled function\n\t *  @param {function} fn Function to be called\n\t *  @param {int} [freq=200] call frequency in mS\n\t *  @returns {function} wrapped function\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnThrottle = DataTable.util.throttle;\n\n\n\t/**\n\t * Convert a CSS unit width to pixels (e.g. 2em)\n\t *  @param {string} width width to be converted\n\t *  @param {node} parent parent to get the with for (required for relative widths) - optional\n\t *  @returns {int} width in pixels\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnConvertToWidth(width, parent) {\n\t\tif (!width) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar n = $('<div/>')\n\t\t\t.css('width', _fnStringToCss(width))\n\t\t\t.appendTo(parent || document.body);\n\n\t\tvar val = n[0].offsetWidth;\n\t\tn.remove();\n\n\t\treturn val;\n\t}\n\n\n\t/**\n\t * Get the widest node\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} colIdx column of interest\n\t *  @returns {node} widest table node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetWidestNode(settings, colIdx) {\n\t\tvar idx = _fnGetMaxLenString(settings, colIdx);\n\t\tif (idx < 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar data = settings.aoData[ idx ];\n\t\treturn !data.nTr ? // Might not have been created when deferred rendering\n\t\t\t$('<td/>').html(_fnGetCellData(settings, idx, colIdx, 'display'))[0] :\n\t\t\tdata.anCells[ colIdx ];\n\t}\n\n\n\t/**\n\t * Get the maximum strlen for each data column\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} colIdx column of interest\n\t *  @returns {string} max string length for each column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetMaxLenString(settings, colIdx) {\n\t\tvar s,\nmax = -1,\nmaxIdx = -1;\n\n\t\tfor (var i = 0, ien = settings.aoData.length; i < ien; i++) {\n\t\t\ts = _fnGetCellData(settings, i, colIdx, 'display') + '';\n\t\t\ts = s.replace(__re_html_remove, '');\n\t\t\ts = s.replace(/&nbsp;/g, ' ');\n\n\t\t\tif (s.length > max) {\n\t\t\t\tmax = s.length;\n\t\t\t\tmaxIdx = i;\n\t\t\t}\n\t\t}\n\n\t\treturn maxIdx;\n\t}\n\n\n\t/**\n\t * Append a CSS unit (only if required) to a string\n\t *  @param {string} value to css-ify\n\t * @param s\n\t *  @returns {string} value with css unit\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnStringToCss(s) {\n\t\tif (s === null) {\n\t\t\treturn '0px';\n\t\t}\n\n\t\tif (typeof s == 'number') {\n\t\t\treturn s < 0 ?\n\t\t\t\t'0px' :\n\t\t\t\ts + 'px';\n\t\t}\n\n\t\t// Check it has a unit character already\n\t\treturn s.match(/\\d$/) ?\n\t\t\ts + 'px' :\n\t\t\ts;\n\t}\n\n\n\t/**\n\t * @param settings\n\t */\n\tfunction _fnSortFlatten(settings) {\n\t\tvar\n\t\t\ti, iLen, k, kLen,\n\t\t\taSort = [],\n\t\t\taiOrig = [],\n\t\t\taoColumns = settings.aoColumns,\n\t\t\taDataSort, iCol, sType, srcCol,\n\t\t\tfixed = settings.aaSortingFixed,\n\t\t\tfixedObj = $.isPlainObject(fixed),\n\t\t\tnestedSort = [],\n\t\t\tadd = function(a) {\n\t\t\t\tif (a.length && !Array.isArray(a[0])) {\n\t\t\t\t\t// 1D array\n\t\t\t\t\tnestedSort.push(a);\n\t\t\t\t} else {\n\t\t\t\t\t// 2D array\n\t\t\t\t\t$.merge(nestedSort, a);\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Build the sort array, with pre-fix and post-fix options if they have been\n\t\t// specified\n\t\tif (Array.isArray(fixed)) {\n\t\t\tadd(fixed);\n\t\t}\n\n\t\tif (fixedObj && fixed.pre) {\n\t\t\tadd(fixed.pre);\n\t\t}\n\n\t\tadd(settings.aaSorting);\n\n\t\tif (fixedObj && fixed.post) {\n\t\t\tadd(fixed.post);\n\t\t}\n\n\t\tfor (i = 0; i < nestedSort.length; i++) {\n\t\t\tsrcCol = nestedSort[i][0];\n\t\t\taDataSort = aoColumns[ srcCol ].aDataSort;\n\n\t\t\tfor (k = 0, kLen = aDataSort.length; k < kLen; k++) {\n\t\t\t\tiCol = aDataSort[k];\n\t\t\t\tsType = aoColumns[ iCol ].sType || 'string';\n\n\t\t\t\tif (nestedSort[i]._idx === undefined) {\n\t\t\t\t\tnestedSort[i]._idx = $.inArray(nestedSort[i][1], aoColumns[iCol].asSorting);\n\t\t\t\t}\n\n\t\t\t\taSort.push({\n\t\t\t\t\tsrc:       srcCol,\n\t\t\t\t\tcol:       iCol,\n\t\t\t\t\tdir:       nestedSort[i][1],\n\t\t\t\t\tindex:     nestedSort[i]._idx,\n\t\t\t\t\ttype:      sType,\n\t\t\t\t\tformatter: DataTable.ext.type.order[ sType + \"-pre\" ]\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn aSort;\n\t}\n\n\t/**\n\t * Change the order of the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t *  @todo This really needs split up!\n\t */\n\tfunction _fnSort(oSettings) {\n\t\tvar\n\t\t\ti, ien, iLen, j, jLen, k, kLen,\n\t\t\tsDataType, nTh,\n\t\t\taiOrig = [],\n\t\t\toExtSort = DataTable.ext.type.order,\n\t\t\taoData = oSettings.aoData,\n\t\t\taoColumns = oSettings.aoColumns,\n\t\t\taDataSort, data, iCol, sType, oSort,\n\t\t\tformatters = 0,\n\t\t\tsortCol,\n\t\t\tdisplayMaster = oSettings.aiDisplayMaster,\n\t\t\taSort;\n\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t// @todo Can this be moved into a 'data-ready' handler which is called when\n\t\t//   data is going to be used in the table?\n\t\t_fnColumnTypes(oSettings);\n\n\t\taSort = _fnSortFlatten(oSettings);\n\n\t\tfor (i = 0, ien = aSort.length; i < ien; i++) {\n\t\t\tsortCol = aSort[i];\n\n\t\t\t// Track if we can use the fast sort algorithm\n\t\t\tif (sortCol.formatter) {\n\t\t\t\tformatters++;\n\t\t\t}\n\n\t\t\t// Load the data needed for the sort, for each cell\n\t\t\t_fnSortData(oSettings, sortCol.col);\n\t\t}\n\n\t\t/* No sorting required if server-side or no sorting array */\n\t\tif (_fnDataSource(oSettings) != 'ssp' && aSort.length !== 0) {\n\t\t\t// Create a value - key array of the current row positions such that we can use their\n\t\t\t// current position during the sort, if values match, in order to perform stable sorting\n\t\t\tfor (i = 0, iLen = displayMaster.length; i < iLen; i++) {\n\t\t\t\taiOrig[ displayMaster[i] ] = i;\n\t\t\t}\n\n\t\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t\t *  fnLocalSorting = function(a,b){\n\t\t\t *    var iTest;\n\t\t\t *    iTest = oSort['string-asc']('data11', 'data12');\n\t\t\t *      if (iTest !== 0)\n\t\t\t *        return iTest;\n\t\t\t *    iTest = oSort['numeric-desc']('data21', 'data22');\n\t\t\t *    if (iTest !== 0)\n\t\t\t *      return iTest;\n\t\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t\t *  }\n\t\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t\t * test the next column. If all columns match, then we use a numeric sort on the row\n\t\t\t * positions in the original data array to provide a stable sort.\n\t\t\t *\n\t\t\t * Note - I know it seems excessive to have two sorting methods, but the first is around\n\t\t\t * 15% faster, so the second is only maintained for backwards compatibility with sorting\n\t\t\t * methods which do not have a pre-sort formatting function.\n\t\t\t */\n\t\t\tif (formatters === aSort.length) {\n\t\t\t\t// All sort types have formatting functions\n\t\t\t\tdisplayMaster.sort(function(a, b) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tx, y, k, test, sort,\n\t\t\t\t\t\tlen = aSort.length,\n\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\n\t\t\t\t\tfor (k = 0; k < len; k++) {\n\t\t\t\t\t\tsort = aSort[k];\n\n\t\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\t\ty = dataB[ sort.col ];\n\n\t\t\t\t\t\ttest = x < y ? -1 : x > y ? 1 : 0;\n\t\t\t\t\t\tif (test !== 0) {\n\t\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\treturn x < y ? -1 : x > y ? 1 : 0;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Depreciated - remove in 1.11 (providing a plug-in option)\n\t\t\t\t// Not all sort types have formatting methods, so we have to call their sorting\n\t\t\t\t// methods.\n\t\t\t\tdisplayMaster.sort(function(a, b) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tx, y, k, l, test, sort, fn,\n\t\t\t\t\t\tlen = aSort.length,\n\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\n\t\t\t\t\tfor (k = 0; k < len; k++) {\n\t\t\t\t\t\tsort = aSort[k];\n\n\t\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\t\ty = dataB[ sort.col ];\n\n\t\t\t\t\t\tfn = oExtSort[ sort.type + \"-\" + sort.dir ] || oExtSort[ \"string-\" + sort.dir ];\n\t\t\t\t\t\ttest = fn(x, y);\n\t\t\t\t\t\tif (test !== 0) {\n\t\t\t\t\t\t\treturn test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\treturn x < y ? -1 : x > y ? 1 : 0;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/* Tell the draw function that we have sorted the data */\n\t\toSettings.bSorted = true;\n\t}\n\n\n\t/**\n\t * @param settings\n\t */\n\tfunction _fnSortAria(settings) {\n\t\tvar label;\n\t\tvar nextSort;\n\t\tvar columns = settings.aoColumns;\n\t\tvar aSort = _fnSortFlatten(settings);\n\t\tvar oAria = settings.oLanguage.oAria;\n\n\t\t// ARIA attributes - need to loop all columns, to update all (removing old\n\t\t// attributes as needed)\n\t\tfor (var i = 0, iLen = columns.length; i < iLen; i++) {\n\t\t\tvar col = columns[i];\n\t\t\tvar asSorting = col.asSorting;\n\t\t\tvar sTitle = col.ariaTitle || col.sTitle.replace(/<.*?>/g, \"\");\n\t\t\tvar th = col.nTh;\n\n\t\t\t// IE7 is throwing an error when setting these properties with jQuery's\n\t\t\t// attr() and removeAttr() methods...\n\t\t\tth.removeAttribute('aria-sort');\n\n\t\t\t/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n\t\t\tif (col.bSortable) {\n\t\t\t\tif (aSort.length > 0 && aSort[0].col == i) {\n\t\t\t\t\tth.setAttribute('aria-sort', aSort[0].dir == \"asc\" ? \"ascending\" : \"descending\");\n\t\t\t\t\tnextSort = asSorting[ aSort[0].index + 1 ] || asSorting[0];\n\t\t\t\t} else {\n\t\t\t\t\tnextSort = asSorting[0];\n\t\t\t\t}\n\n\t\t\t\tlabel = sTitle + (nextSort === \"asc\" ?\n\t\t\t\t\toAria.sSortAscending :\n\t\t\t\t\toAria.sSortDescending\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tlabel = sTitle;\n\t\t\t}\n\n\t\t\tth.setAttribute('aria-label', label);\n\t\t}\n\t}\n\n\n\t/**\n\t * Function to run on user sort request\n\t *  @param {object} settings dataTables settings object\n\t *  @param {node} attachTo node to attach the handler to\n\t *  @param {int} colIdx column sorting index\n\t *  @param {boolean} [append=false] Append the requested sort to the existing\n\t *    sort if true (i.e. multi-column sort)\n\t *  @param {function} [callback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortListener(settings, colIdx, append, callback) {\n\t\tvar col = settings.aoColumns[ colIdx ];\n\t\tvar sorting = settings.aaSorting;\n\t\tvar asSorting = col.asSorting;\n\t\tvar nextSortIdx;\n\t\tvar next = function(a, overflow) {\n\t\t\tvar idx = a._idx;\n\t\t\tif (idx === undefined) {\n\t\t\t\tidx = $.inArray(a[1], asSorting);\n\t\t\t}\n\n\t\t\treturn idx + 1 < asSorting.length ?\n\t\t\t\tidx + 1 :\n\t\t\t\toverflow ?\n\t\t\t\t\tnull :\n\t\t\t\t\t0;\n\t\t};\n\n\t\t// Convert to 2D array if needed\n\t\tif (typeof sorting[0] === 'number') {\n\t\t\tsorting = settings.aaSorting = [sorting];\n\t\t}\n\n\t\t// If appending the sort then we are multi-column sorting\n\t\tif (append && settings.oFeatures.bSortMulti) {\n\t\t\t// Are we already doing some kind of sort on this column?\n\t\t\tvar sortIdx = $.inArray(colIdx, _pluck(sorting, '0'));\n\n\t\t\tif (sortIdx !== -1) {\n\t\t\t\t// Yes, modify the sort\n\t\t\t\tnextSortIdx = next(sorting[sortIdx], true);\n\n\t\t\t\tif (nextSortIdx === null && sorting.length === 1) {\n\t\t\t\t\tnextSortIdx = 0; // Can't remove sorting completely\n\t\t\t\t}\n\n\t\t\t\tif (nextSortIdx === null) {\n\t\t\t\t\tsorting.splice(sortIdx, 1);\n\t\t\t\t} else {\n\t\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\n\t\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// No sort on this column yet\n\t\t\t\tsorting.push([colIdx, asSorting[0], 0]);\n\t\t\t\tsorting[sorting.length - 1]._idx = 0;\n\t\t\t}\n\t\t} else if (sorting.length && sorting[0][0] == colIdx) {\n\t\t\t// Single column - already sorting on this column, modify the sort\n\t\t\tnextSortIdx = next(sorting[0]);\n\n\t\t\tsorting.length = 1;\n\t\t\tsorting[0][1] = asSorting[ nextSortIdx ];\n\t\t\tsorting[0]._idx = nextSortIdx;\n\t\t} else {\n\t\t\t// Single column - sort only on this column\n\t\t\tsorting.length = 0;\n\t\t\tsorting.push([colIdx, asSorting[0]]);\n\t\t\tsorting[0]._idx = 0;\n\t\t}\n\n\t\t// Run the sort by calling a full redraw\n\t\t_fnReDraw(settings);\n\n\t\t// Callback used for async user interaction\n\t\tif (typeof callback == 'function') {\n\t\t\tcallback(settings);\n\t\t}\n\t}\n\n\n\t/**\n\t * Attach a sort handler (click) to a node\n\t *  @param {object} settings dataTables settings object\n\t *  @param {node} attachTo node to attach the handler to\n\t *  @param {int} colIdx column sorting index\n\t *  @param {function} [callback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortAttachListener(settings, attachTo, colIdx, callback) {\n\t\tvar col = settings.aoColumns[ colIdx ];\n\n\t\t_fnBindAction(attachTo, {}, function(e) {\n\t\t\t/* If the column is not sortable - don't to anything */\n\t\t\tif (col.bSortable === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If processing is enabled use a timeout to allow the processing\n\t\t\t// display to be shown - otherwise to it synchronously\n\t\t\tif (settings.oFeatures.bProcessing) {\n\t\t\t\t_fnProcessingDisplay(settings, true);\n\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t_fnSortListener(settings, colIdx, e.shiftKey, callback);\n\n\t\t\t\t\t// In server-side processing, the draw callback will remove the\n\t\t\t\t\t// processing display\n\t\t\t\t\tif (_fnDataSource(settings) !== 'ssp') {\n\t\t\t\t\t\t_fnProcessingDisplay(settings, false);\n\t\t\t\t\t}\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\t_fnSortListener(settings, colIdx, e.shiftKey, callback);\n\t\t\t}\n\t\t});\n\t}\n\n\n\t/**\n\t * Set the sorting classes on table's body, Note: it is safe to call this function\n\t * when bSort and bSortClasses are false\n\t *  @param {object} oSettings dataTables settings object\n\t * @param settings\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortingClasses(settings) {\n\t\tvar oldSort = settings.aLastSort;\n\t\tvar sortClass = settings.oClasses.sSortColumn;\n\t\tvar sort = _fnSortFlatten(settings);\n\t\tvar features = settings.oFeatures;\n\t\tvar i, ien, colIdx;\n\n\t\tif (features.bSort && features.bSortClasses) {\n\t\t\t// Remove old sorting classes\n\t\t\tfor (i = 0, ien = oldSort.length; i < ien; i++) {\n\t\t\t\tcolIdx = oldSort[i].src;\n\n\t\t\t\t// Remove column sorting\n\t\t\t\t$(_pluck(settings.aoData, 'anCells', colIdx))\n\t\t\t\t\t.removeClass(sortClass + (i < 2 ? i + 1 : 3));\n\t\t\t}\n\n\t\t\t// Add new column sorting\n\t\t\tfor (i = 0, ien = sort.length; i < ien; i++) {\n\t\t\t\tcolIdx = sort[i].src;\n\n\t\t\t\t$(_pluck(settings.aoData, 'anCells', colIdx))\n\t\t\t\t\t.addClass(sortClass + (i < 2 ? i + 1 : 3));\n\t\t\t}\n\t\t}\n\n\t\tsettings.aLastSort = sort;\n\t}\n\n\n\t// Get the data to sort a column, be it from cache, fresh (populating the\n\t// cache), or from a sort formatter\n\t/**\n\t * @param settings\n\t * @param idx\n\t */\n\tfunction _fnSortData(settings, idx) {\n\t\t// Custom sorting function - provided by the sort data type\n\t\tvar column = settings.aoColumns[ idx ];\n\t\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\n\t\tvar customData;\n\n\t\tif (customSort) {\n\t\t\tcustomData = customSort.call(settings.oInstance, settings, idx,\n\t\t\t\t_fnColumnIndexToVisible(settings, idx)\n\t\t\t);\n\t\t}\n\n\t\t// Use / populate cache\n\t\tvar row, cellData;\n\t\tvar formatter = DataTable.ext.type.order[ column.sType + \"-pre\" ];\n\n\t\tfor (var i = 0, ien = settings.aoData.length; i < ien; i++) {\n\t\t\trow = settings.aoData[i];\n\n\t\t\tif (!row._aSortData) {\n\t\t\t\trow._aSortData = [];\n\t\t\t}\n\n\t\t\tif (!row._aSortData[idx] || customSort) {\n\t\t\t\tcellData = customSort ?\n\t\t\t\t\tcustomData[i] : // If there was a custom sort function, use data from there\n\t\t\t\t\t_fnGetCellData(settings, i, idx, 'sort');\n\n\t\t\t\trow._aSortData[ idx ] = formatter ?\n\t\t\t\t\tformatter(cellData) :\n\t\t\t\t\tcellData;\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Save the state of a table\n\t *  @param {object} oSettings dataTables settings object\n\t * @param settings\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSaveState(settings) {\n\t\tif (settings._bLoadingState) {\n\t\t\treturn;\n\t\t}\n\n\t\t/* Store the interesting variables */\n\t\tvar state = {\n\t\t\ttime:    +new Date(),\n\t\t\tstart:   settings._iDisplayStart,\n\t\t\tlength:  settings._iDisplayLength,\n\t\t\torder:   $.extend(true, [], settings.aaSorting),\n\t\t\tsearch:  _fnSearchToCamel(settings.oPreviousSearch),\n\t\t\tcolumns: $.map(settings.aoColumns, function(col, i) {\n\t\t\t\treturn {\n\t\t\t\t\tvisible: col.bVisible,\n\t\t\t\t\tsearch: _fnSearchToCamel(settings.aoPreSearchCols[i])\n\t\t\t\t};\n\t\t\t})\n\t\t};\n\n\t\tsettings.oSavedState = state;\n\t\t_fnCallbackFire(settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state]);\n\n\t\tif (settings.oFeatures.bStateSave && !settings.bDestroying) {\n\t\t\tsettings.fnStateSaveCallback.call(settings.oInstance, settings, state);\n\t\t}\n\t}\n\n\n\t/**\n\t * Attempt to load a saved table state\n\t *  @param {object} oSettings dataTables settings object\n\t * @param settings\n\t *  @param {object} oInit DataTables init object so we can override settings\n\t *  @param {function} callback Callback to execute when the state has been loaded\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLoadState(settings, oInit, callback) {\n\t\tif (!settings.oFeatures.bStateSave) {\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\n\t\tvar loaded = function(state) {\n\t\t\t_fnImplementState(settings, state, callback);\n\t\t};\n\n\t\tvar state = settings.fnStateLoadCallback.call(settings.oInstance, settings, loaded);\n\n\t\tif (state !== undefined) {\n\t\t\t_fnImplementState(settings, state, callback);\n\t\t}\n\t\t// Otherwise, wait for the loaded callback to be executed\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @param settings\n\t * @param s\n\t * @param callback\n\t */\n\tfunction _fnImplementState(settings, s, callback) {\n\t\tvar i, ien;\n\t\tvar columns = settings.aoColumns;\n\t\tsettings._bLoadingState = true;\n\n\t\t// When StateRestore was introduced the state could now be implemented at any time\n\t\t// Not just initialisation. To do this an api instance is required in some places\n\t\tvar api = settings._bInitComplete ? new DataTable.Api(settings) : null;\n\n\t\tif (!s || !s.time) {\n\t\t\tsettings._bLoadingState = false;\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\n\t\t// Allow custom and plug-in manipulation functions to alter the saved data set and\n\t\t// cancelling of loading by returning false\n\t\tvar abStateLoad = _fnCallbackFire(settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s]);\n\t\tif ($.inArray(false, abStateLoad) !== -1) {\n\t\t\tsettings._bLoadingState = false;\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\n\t\t// Reject old data\n\t\tvar duration = settings.iStateDuration;\n\t\tif (duration > 0 && s.time < +new Date() - (duration * 1000)) {\n\t\t\tsettings._bLoadingState = false;\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\n\t\t// Number of columns have changed - all bets are off, no restore of settings\n\t\tif (s.columns && columns.length !== s.columns.length) {\n\t\t\tsettings._bLoadingState = false;\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\n\t\t// Store the saved state so it might be accessed at any time\n\t\tsettings.oLoadedState = $.extend(true, {}, s);\n\n\t\t// Page Length\n\t\tif (s.length !== undefined) {\n\t\t\t// If already initialised just set the value directly so that the select element is also updated\n\t\t\tif (api) {\n\t\t\t\tapi.page.len(s.length);\n\t\t\t} else {\n\t\t\t\tsettings._iDisplayLength = s.length;\n\t\t\t}\n\t\t}\n\n\t\t// Restore key features - todo - for 1.11 this needs to be done by\n\t\t// subscribed events\n\t\tif (s.start !== undefined) {\n\t\t\tif (api === null) {\n\t\t\t\tsettings._iDisplayStart = s.start;\n\t\t\t\tsettings.iInitDisplayStart = s.start;\n\t\t\t} else {\n\t\t\t\t_fnPageChange(settings, s.start / settings._iDisplayLength);\n\t\t\t}\n\t\t}\n\n\t\t// Order\n\t\tif (s.order !== undefined) {\n\t\t\tsettings.aaSorting = [];\n\t\t\t$.each(s.order, function(i, col) {\n\t\t\t\tsettings.aaSorting.push(col[0] >= columns.length ?\n\t\t\t\t\t[0, col[1]] :\n\t\t\t\t\tcol\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\t// Search\n\t\tif (s.search !== undefined) {\n\t\t\t$.extend(settings.oPreviousSearch, _fnSearchToHung(s.search));\n\t\t}\n\n\t\t// Columns\n\t\tif (s.columns) {\n\t\t\tfor (i = 0, ien = s.columns.length; i < ien; i++) {\n\t\t\t\tvar col = s.columns[i];\n\n\t\t\t\t// Visibility\n\t\t\t\tif (col.visible !== undefined) {\n\t\t\t\t\t// If the api is defined, the table has been initialised so we need to use it rather than internal settings\n\t\t\t\t\tif (api) {\n\t\t\t\t\t\t// Don't redraw the columns on every iteration of this loop, we will do this at the end instead\n\t\t\t\t\t\tapi.column(i).visible(col.visible, false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolumns[i].bVisible = col.visible;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Search\n\t\t\t\tif (col.search !== undefined) {\n\t\t\t\t\t$.extend(settings.aoPreSearchCols[i], _fnSearchToHung(col.search));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If the api is defined then we need to adjust the columns once the visibility has been changed\n\t\t\tif (api) {\n\t\t\t\tapi.columns.adjust();\n\t\t\t}\n\t\t}\n\n\t\tsettings._bLoadingState = false;\n\t\t_fnCallbackFire(settings, 'aoStateLoaded', 'stateLoaded', [settings, s]);\n\t\tcallback();\n\t}\n\n\n\t/**\n\t * Return the settings object for a particular table\n\t *  @param {node} table table we are using as a dataTable\n\t *  @returns {object} Settings object - or null if not found\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSettingsFromNode(table) {\n\t\tvar settings = DataTable.settings;\n\t\tvar idx = $.inArray(table, _pluck(settings, 'nTable'));\n\n\t\treturn idx !== -1 ?\n\t\t\tsettings[ idx ] :\n\t\t\tnull;\n\t}\n\n\n\t/**\n\t * Log an error message\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} level log error messages, or display them to the user\n\t *  @param {string} msg error message\n\t *  @param {int} tn Technical note id to get more information about the error.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLog(settings, level, msg, tn) {\n\t\tmsg = 'DataTables warning: ' +\n\t\t\t(settings ? 'table id=' + settings.sTableId + ' - ' : '') + msg;\n\n\t\tif (tn) {\n\t\t\tmsg += '. For more information about this error, please see ' +\n\t\t\t'http://datatables.net/tn/' + tn;\n\t\t}\n\n\t\tif (!level) {\n\t\t\t// Backwards compatibility pre 1.10\n\t\t\tvar ext = DataTable.ext;\n\t\t\tvar type = ext.sErrMode || ext.errMode;\n\n\t\t\tif (settings) {\n\t\t\t\t_fnCallbackFire(settings, null, 'error', [settings, tn, msg]);\n\t\t\t}\n\n\t\t\tif (type == 'alert') {\n\t\t\t\talert(msg);\n\t\t\t} else if (type == 'throw') {\n\t\t\t\tthrow new Error(msg);\n\t\t\t} else if (typeof type == 'function') {\n\t\t\t\ttype(settings, tn, msg);\n\t\t\t}\n\t\t} else if (window.console && console.log) {\n\t\t\tconsole.log(msg);\n\t\t}\n\t}\n\n\n\t/**\n\t * See if a property is defined on one object, if so assign it to the other object\n\t *  @param {object} ret target object\n\t *  @param {object} src source object\n\t *  @param {string} name property\n\t *  @param {string} [mappedName] name to map too - optional, name used if not given\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnMap(ret, src, name, mappedName) {\n\t\tif (Array.isArray(name)) {\n\t\t\t$.each(name, function(i, val) {\n\t\t\t\tif (Array.isArray(val)) {\n\t\t\t\t\t_fnMap(ret, src, val[0], val[1]);\n\t\t\t\t} else {\n\t\t\t\t\t_fnMap(ret, src, val);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (mappedName === undefined) {\n\t\t\tmappedName = name;\n\t\t}\n\n\t\tif (src[name] !== undefined) {\n\t\t\tret[mappedName] = src[name];\n\t\t}\n\t}\n\n\n\t/**\n\t * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n\t * shallow copy arrays. The reason we need to do this, is that we don't want to\n\t * deep copy array init values (such as aaSorting) since the dev wouldn't be\n\t * able to override them, but we do want to deep copy arrays.\n\t *  @param {object} out Object to extend\n\t *  @param {object} extender Object from which the properties will be applied to\n\t *      out\n\t *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n\t *      independent copy with the exception of the `data` or `aaData` parameters\n\t *      if they are present. This is so you can pass in a collection to\n\t *      DataTables and have that used as your data source without breaking the\n\t *      references\n\t *  @returns {object} out Reference, just for convenience - out === the return.\n\t *  @memberof DataTable#oApi\n\t *  @todo This doesn't take account of arrays inside the deep copied objects.\n\t */\n\tfunction _fnExtend(out, extender, breakRefs) {\n\t\tvar val;\n\n\t\tfor (var prop in extender) {\n\t\t\tif (extender.hasOwnProperty(prop)) {\n\t\t\t\tval = extender[prop];\n\n\t\t\t\tif ($.isPlainObject(val)) {\n\t\t\t\t\tif (!$.isPlainObject(out[prop])) {\n\t\t\t\t\t\tout[prop] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend(true, out[prop], val);\n\t\t\t\t} else if (breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val)) {\n\t\t\t\t\tout[prop] = val.slice();\n\t\t\t\t} else {\n\t\t\t\t\tout[prop] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t}\n\n\n\t/**\n\t * Bind an event handers to allow a click or return key to activate the callback.\n\t * This is good for accessibility since a return on the keyboard will have the\n\t * same effect as a click, if the element has focus.\n\t *  @param {element} n Element to bind the action to\n\t *  @param {object} oData Data object to pass to the triggered function\n\t *  @param {function} fn Callback function for when the event is triggered\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBindAction(n, oData, fn) {\n\t\t$(n)\n\t\t\t.on('click.DT', oData, function(e) {\n\t\t\t\t\t$(n).trigger('blur'); // Remove focus outline for mouse users\n\t\t\t\t\tfn(e);\n\t\t\t\t})\n\t\t\t.on('keypress.DT', oData, function(e) {\n\t\t\t\t\tif (e.which === 13) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tfn(e);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t.on('selectstart.DT', function() {\n\t\t\t\t\t/* Take the brutal approach to cancelling text selection */\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t}\n\n\n\t/**\n\t * Register a callback function. Easily allows a callback function to be added to\n\t * an array store of callback functions that can then all be called together.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n\t *  @param {function} fn Function to be called back\n\t *  @param {string} sName Identifying name for the callback (i.e. a label)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackReg(oSettings, sStore, fn, sName) {\n\t\tif (fn) {\n\t\t\toSettings[sStore].push({\n\t\t\t\t\"fn\": fn,\n\t\t\t\t\"sName\": sName\n\t\t\t});\n\t\t}\n\t}\n\n\n\t/**\n\t * Fire callback functions and trigger events. Note that the loop over the\n\t * callback array store is done backwards! Further note that you do not want to\n\t * fire off triggers in time sensitive applications (for example cell creation)\n\t * as its slow.\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} callbackArr Name of the array storage for the callbacks in\n\t *      oSettings\n\t *  @param {string} eventName Name of the jQuery custom event to trigger. If\n\t *      null no trigger is fired\n\t *  @param {array} args Array of arguments to pass to the callback function /\n\t *      trigger\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackFire(settings, callbackArr, eventName, args) {\n\t\tvar ret = [];\n\n\t\tif (callbackArr) {\n\t\t\tret = $.map(settings[callbackArr].slice().reverse(), function(val, i) {\n\t\t\t\treturn val.fn.apply(settings.oInstance, args);\n\t\t\t});\n\t\t}\n\n\t\tif (eventName !== null) {\n\t\t\tvar e = $.Event(eventName + '.dt');\n\n\t\t\t$(settings.nTable).trigger(e, args);\n\n\t\t\tret.push(e.result);\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\n\t/**\n\t * @param settings\n\t */\n\tfunction _fnLengthOverflow(settings) {\n\t\tvar\n\t\t\tstart = settings._iDisplayStart,\n\t\t\tend = settings.fnDisplayEnd(),\n\t\t\tlen = settings._iDisplayLength;\n\n\t\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\t\tif (start >= end) {\n\t\t\tstart = end - len;\n\t\t}\n\n\t\t// Keep the start record on the current page\n\t\tstart -= (start % len);\n\n\t\tif (len === -1 || start < 0) {\n\t\t\tstart = 0;\n\t\t}\n\n\t\tsettings._iDisplayStart = start;\n\t}\n\n\n\t/**\n\t * @param settings\n\t * @param type\n\t */\n\tfunction _fnRenderer(settings, type) {\n\t\tvar renderer = settings.renderer;\n\t\tvar host = DataTable.ext.renderer[type];\n\n\t\tif ($.isPlainObject(renderer) && renderer[type]) {\n\t\t\t// Specific renderer for this type. If available use it, otherwise use\n\t\t\t// the default.\n\t\t\treturn host[renderer[type]] || host._;\n\t\t} else if (typeof renderer === 'string') {\n\t\t\t// Common renderer - if there is one available for this type use it,\n\t\t\t// otherwise use the default\n\t\t\treturn host[renderer] || host._;\n\t\t}\n\n\t\t// Use the default\n\t\treturn host._;\n\t}\n\n\n\t/**\n\t * Detect the data source being used for the table. Used to simplify the code\n\t * a little (ajax) and to make it compress a little smaller.\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {string} Data source\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDataSource(settings) {\n\t\tif (settings.oFeatures.bServerSide) {\n\t\t\treturn 'ssp';\n\t\t} else if (settings.ajax || settings.sAjaxSource) {\n\t\t\treturn 'ajax';\n\t\t}\n\t\treturn 'dom';\n\t}\n\n\n\t/**\n\t * Computed structure of the DataTables API, defined by the options passed to\n\t * `DataTable.Api.register()` when building the API.\n\t *\n\t * The structure is built in order to speed creation and extension of the Api\n\t * objects since the extensions are effectively pre-parsed.\n\t *\n\t * The array is an array of objects with the following structure, where this\n\t * base array represents the Api prototype base:\n\t *\n\t *     [\n\t *       {\n\t *         name:      'data'                -- string   - Property name\n\t *         val:       function () {},       -- function - Api method (or undefined if just an object\n\t *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t *       },\n\t *       {\n\t *         name:     'row'\n\t *         val:       {},\n\t *         methodExt: [ ... ],\n\t *         propExt:   [\n\t *           {\n\t *             name:      'data'\n\t *             val:       function () {},\n\t *             methodExt: [ ... ],\n\t *             propExt:   [ ... ]\n\t *           },\n\t *           ...\n\t *         ]\n\t *       }\n\t *     ]\n\t *\n\t * @type {Array}\n\t * @ignore\n\t */\n\tvar __apiStruct = [];\n\n\n\t/**\n\t * `Array.prototype` reference.\n\t *\n\t * @type object\n\t * @ignore\n\t */\n\tvar __arrayProto = Array.prototype;\n\n\n\t/**\n\t * Abstraction for `context` parameter of the `Api` constructor to allow it to\n\t * take several different forms for ease of use.\n\t *\n\t * Each of the input parameter types will be converted to a DataTables settings\n\t * object where possible.\n\t *\n\t * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n\t *   of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t *   * `DataTables.Api` - API instance\n\t * @return {array|null} Matching DataTables settings objects. `null` or\n\t *   `undefined` is returned if no matching DataTable is found.\n\t * @ignore\n\t */\n\tvar _toSettings = function(mixed) {\n\t\tvar idx, jq;\n\t\tvar settings = DataTable.settings;\n\t\tvar tables = $.map(settings, function(el, i) {\n\t\t\treturn el.nTable;\n\t\t});\n\n\t\tif (!mixed) {\n\t\t\treturn [];\n\t\t} else if (mixed.nTable && mixed.oApi) {\n\t\t\t// DataTables settings object\n\t\t\treturn [mixed];\n\t\t} else if (mixed.nodeName && mixed.nodeName.toLowerCase() === 'table') {\n\t\t\t// Table node\n\t\t\tidx = $.inArray(mixed, tables);\n\t\t\treturn idx !== -1 ? [settings[idx]] : null;\n\t\t} else if (mixed && typeof mixed.settings === 'function') {\n\t\t\treturn mixed.settings().toArray();\n\t\t} else if (typeof mixed === 'string') {\n\t\t\t// JQuery selector\n\t\t\tjq = $(mixed);\n\t\t} else if (mixed instanceof $) {\n\t\t\t// JQuery object (also DataTables instance)\n\t\t\tjq = mixed;\n\t\t}\n\n\t\tif (jq) {\n\t\t\treturn jq.map(function(i) {\n\t\t\t\tidx = $.inArray(this, tables);\n\t\t\t\treturn idx !== -1 ? settings[idx] : null;\n\t\t\t}).toArray();\n\t\t}\n\t};\n\n\n\t/**\n\t * DataTables API class - used to control and interface with  one or more\n\t * DataTables enhanced tables.\n\t *\n\t * The API class is heavily based on jQuery, presenting a chainable interface\n\t * that you can use to interact with tables. Each instance of the API class has\n\t * a \"context\" - i.e. the tables that it will operate on. This could be a single\n\t * table, all tables on a page or a sub-set thereof.\n\t *\n\t * Additionally the API is designed to allow you to easily work with the data in\n\t * the tables, retrieving and manipulating it as required. This is done by\n\t * presenting the API class as an array like interface. The contents of the\n\t * array depend upon the actions requested by each method (for example\n\t * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n\t * return an array of objects or arrays depending upon your table's\n\t * configuration). The API object has a number of array like methods (`push`,\n\t * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n\t * `unique` etc) to assist your working with the data held in a table.\n\t *\n\t * Most methods (those which return an Api instance) are chainable, which means\n\t * the return from a method call also has all of the methods available that the\n\t * top level object had. For example, these two calls are equivalent:\n\t *\n\t *     // Not chained\n\t *     api.row.add( {...} );\n\t *     api.draw();\n\t *\n\t *     // Chained\n\t *     api.row.add( {...} ).draw();\n\t *\n\t * @class DataTable.Api\n\t * @param {array|object|string|jQuery} context DataTable identifier. This is\n\t *   used to define which DataTables enhanced tables this API will operate on.\n\t *   Can be one of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t * @param {array} [data] Data to initialise the Api instance with.\n\t *\n\t * @example\n\t *   // Direct initialisation during DataTables construction\n\t *   var api = $('#example').DataTable();\n\t *\n\t * @example\n\t *   // Initialisation using a DataTables jQuery object\n\t *   var api = $('#example').dataTable().api();\n\t *\n\t * @example\n\t *   // Initialisation as a constructor\n\t *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\n\t */\n\t_Api = function(context, data) {\n\t\tif (!(this instanceof _Api)) {\n\t\t\treturn new _Api(context, data);\n\t\t}\n\n\t\tvar settings = [];\n\t\tvar ctxSettings = function(o) {\n\t\t\tvar a = _toSettings(o);\n\t\t\tif (a) {\n\t\t\t\tsettings.push.apply(settings, a);\n\t\t\t}\n\t\t};\n\n\t\tif (Array.isArray(context)) {\n\t\t\tfor (var i = 0, ien = context.length; i < ien; i++) {\n\t\t\t\tctxSettings(context[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tctxSettings(context);\n\t\t}\n\n\t\t// Remove duplicates\n\t\tthis.context = _unique(settings);\n\n\t\t// Initial data\n\t\tif (data) {\n\t\t\t$.merge(this, data);\n\t\t}\n\n\t\t// Selector\n\t\tthis.selector = {\n\t\t\trows: null,\n\t\t\tcols: null,\n\t\t\topts: null\n\t\t};\n\n\t\t_Api.extend(this, this, __apiStruct);\n\t};\n\n\tDataTable.Api = _Api;\n\n\t// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n\t// isPlainObject.\n\t$.extend(_Api.prototype, {\n\t\tany: function() {\n\t\t\treturn this.count() !== 0;\n\t\t},\n\n\n\t\tconcat:  __arrayProto.concat,\n\n\n\t\tcontext: [], // Array of table settings objects\n\n\n\t\tcount: function() {\n\t\t\treturn this.flatten().length;\n\t\t},\n\n\n\t\teach: function(fn) {\n\t\t\tfor (var i = 0, ien = this.length; i < ien; i++) {\n\t\t\t\tfn.call(this, this[i], i, this);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\n\t\teq: function(idx) {\n\t\t\tvar ctx = this.context;\n\n\t\t\treturn ctx.length > idx ?\n\t\t\t\tnew _Api(ctx[idx], this[idx]) :\n\t\t\t\tnull;\n\t\t},\n\n\n\t\tfilter: function(fn) {\n\t\t\tvar a = [];\n\n\t\t\tif (__arrayProto.filter) {\n\t\t\t\ta = __arrayProto.filter.call(this, fn, this);\n\t\t\t} else {\n\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\tfor (var i = 0, ien = this.length; i < ien; i++) {\n\t\t\t\t\tif (fn.call(this, this[i], i, this)) {\n\t\t\t\t\t\ta.push(this[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new _Api(this.context, a);\n\t\t},\n\n\n\t\tflatten: function() {\n\t\t\tvar a = [];\n\t\t\treturn new _Api(this.context, a.concat.apply(a, this.toArray()));\n\t\t},\n\n\n\t\tjoin:    __arrayProto.join,\n\n\n\t\tindexOf: __arrayProto.indexOf || function(obj, start) {\n\t\t\tfor (var i = (start || 0), ien = this.length; i < ien; i++) {\n\t\t\t\tif (this[i] === obj) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t},\n\n\t\titerator: function(flatten, type, fn, alwaysNew) {\n\t\t\tvar\n\t\t\t\ta = [],\nret,\n\t\t\t\ti, ien, j, jen,\n\t\t\t\tcontext = this.context,\n\t\t\t\trows, items, item,\n\t\t\t\tselector = this.selector;\n\n\t\t\t// Argument shifting\n\t\t\tif (typeof flatten === 'string') {\n\t\t\t\talwaysNew = fn;\n\t\t\t\tfn = type;\n\t\t\t\ttype = flatten;\n\t\t\t\tflatten = false;\n\t\t\t}\n\n\t\t\tfor (i = 0, ien = context.length; i < ien; i++) {\n\t\t\t\tvar apiInst = new _Api(context[i]);\n\n\t\t\t\tif (type === 'table') {\n\t\t\t\t\tret = fn.call(apiInst, context[i], i);\n\n\t\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\t\ta.push(ret);\n\t\t\t\t\t}\n\t\t\t\t} else if (type === 'columns' || type === 'rows') {\n\t\t\t\t\t// This has same length as context - one entry for each table\n\t\t\t\t\tret = fn.call(apiInst, context[i], this[i], i);\n\n\t\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\t\ta.push(ret);\n\t\t\t\t\t}\n\t\t\t\t} else if (type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell') {\n\t\t\t\t\t// Columns and rows share the same structure.\n\t\t\t\t\t// 'this' is an array of column indexes for each context\n\t\t\t\t\titems = this[i];\n\n\t\t\t\t\tif (type === 'column-rows') {\n\t\t\t\t\t\trows = _selector_row_indexes(context[i], selector.opts);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (j = 0, jen = items.length; j < jen; j++) {\n\t\t\t\t\t\titem = items[j];\n\n\t\t\t\t\t\tif (type === 'cell') {\n\t\t\t\t\t\t\tret = fn.call(apiInst, context[i], item.row, item.column, i, j);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tret = fn.call(apiInst, context[i], item, i, j, rows);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\t\t\ta.push(ret);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (a.length || alwaysNew) {\n\t\t\t\tvar api = new _Api(context, flatten ? a.concat.apply([], a) : a);\n\t\t\t\tvar apiSelector = api.selector;\n\t\t\t\tapiSelector.rows = selector.rows;\n\t\t\t\tapiSelector.cols = selector.cols;\n\t\t\t\tapiSelector.opts = selector.opts;\n\t\t\t\treturn api;\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\n\t\tlastIndexOf: __arrayProto.lastIndexOf || function(obj, start) {\n\t\t\t// Bit cheeky...\n\t\t\treturn this.indexOf.apply(this.toArray.reverse(), arguments);\n\t\t},\n\n\n\t\tlength:  0,\n\n\n\t\tmap: function(fn) {\n\t\t\tvar a = [];\n\n\t\t\tif (__arrayProto.map) {\n\t\t\t\ta = __arrayProto.map.call(this, fn, this);\n\t\t\t} else {\n\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\tfor (var i = 0, ien = this.length; i < ien; i++) {\n\t\t\t\t\ta.push(fn.call(this, this[i], i));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new _Api(this.context, a);\n\t\t},\n\n\n\t\tpluck: function(prop) {\n\t\t\tlet fn = DataTable.util.get(prop);\n\n\t\t\treturn this.map(function(el) {\n\t\t\t\treturn fn(el);\n\t\t\t});\n\t\t},\n\n\t\tpop:     __arrayProto.pop,\n\n\n\t\tpush:    __arrayProto.push,\n\n\n\t\t// Does not return an API instance\n\t\treduce: __arrayProto.reduce || function(fn, init) {\n\t\t\treturn _fnReduce(this, fn, init, 0, this.length, 1);\n\t\t},\n\n\n\t\treduceRight: __arrayProto.reduceRight || function(fn, init) {\n\t\t\treturn _fnReduce(this, fn, init, this.length - 1, -1, -1);\n\t\t},\n\n\n\t\treverse: __arrayProto.reverse,\n\n\n\t\t// Object with rows, columns and opts\n\t\tselector: null,\n\n\n\t\tshift:   __arrayProto.shift,\n\n\n\t\tslice: function() {\n\t\t\treturn new _Api(this.context, this);\n\t\t},\n\n\n\t\tsort:    __arrayProto.sort, // ? name - order?\n\n\n\t\tsplice:  __arrayProto.splice,\n\n\n\t\ttoArray: function() {\n\t\t\treturn __arrayProto.slice.call(this);\n\t\t},\n\n\n\t\tto$: function() {\n\t\t\treturn $(this);\n\t\t},\n\n\n\t\ttoJQuery: function() {\n\t\t\treturn $(this);\n\t\t},\n\n\n\t\tunique: function() {\n\t\t\treturn new _Api(this.context, _unique(this));\n\t\t},\n\n\n\t\tunshift: __arrayProto.unshift\n\t});\n\n\n\t_Api.extend = function(scope, obj, ext) {\n\t\t// Only extend API instances and static properties of the API\n\t\tif (!ext.length || !obj || (!(obj instanceof _Api) && !obj.__dt_wrapper)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar\n\t\t\ti, ien,\n\t\t\tstruct,\n\t\t\tmethodScoping = function(scope, fn, struc) {\n\t\t\t\treturn function() {\n\t\t\t\t\tvar ret = fn.apply(scope, arguments);\n\n\t\t\t\t\t// Method extension\n\t\t\t\t\t_Api.extend(ret, ret, struc.methodExt);\n\t\t\t\t\treturn ret;\n\t\t\t\t};\n\t\t\t};\n\n\t\tfor (i = 0, ien = ext.length; i < ien; i++) {\n\t\t\tstruct = ext[i];\n\n\t\t\t// Value\n\t\t\tobj[ struct.name ] = struct.type === 'function' ?\n\t\t\t\tmethodScoping(scope, struct.val, struct) :\n\t\t\t\tstruct.type === 'object' ?\n\t\t\t\t\t{} :\n\t\t\t\t\tstruct.val;\n\n\t\t\tobj[ struct.name ].__dt_wrapper = true;\n\n\t\t\t// Property extension\n\t\t\t_Api.extend(scope, obj[ struct.name ], struct.propExt);\n\t\t}\n\t};\n\n\n\t// @todo - Is there need for an augment function?\n\t// _Api.augment = function ( inst, name )\n\t// {\n\t// \t// Find src object in the structure from the name\n\t// \tvar parts = name.split('.');\n\n\t// \t_Api.extend( inst, obj );\n\t// };\n\n\n\t//     [\n\t//       {\n\t//         name:      'data'                -- string   - Property name\n\t//         val:       function () {},       -- function - Api method (or undefined if just an object\n\t//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t//       },\n\t//       {\n\t//         name:     'row'\n\t//         val:       {},\n\t//         methodExt: [ ... ],\n\t//         propExt:   [\n\t//           {\n\t//             name:      'data'\n\t//             val:       function () {},\n\t//             methodExt: [ ... ],\n\t//             propExt:   [ ... ]\n\t//           },\n\t//           ...\n\t//         ]\n\t//       }\n\t//     ]\n\n\t_Api.register = _api_register = function(name, val) {\n\t\tif (Array.isArray(name)) {\n\t\t\tfor (var j = 0, jen = name.length; j < jen; j++) {\n\t\t\t\t_Api.register(name[j], val);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tvar\n\t\t\ti, ien,\n\t\t\their = name.split('.'),\n\t\t\tstruct = __apiStruct,\n\t\t\tkey, method;\n\n\t\tvar find = function(src, name) {\n\t\t\tfor (var i = 0, ien = src.length; i < ien; i++) {\n\t\t\t\tif (src[i].name === name) {\n\t\t\t\t\treturn src[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tfor (i = 0, ien = heir.length; i < ien; i++) {\n\t\t\tmethod = heir[i].indexOf('()') !== -1;\n\t\t\tkey = method ?\n\t\t\t\their[i].replace('()', '') :\n\t\t\t\their[i];\n\n\t\t\tvar src = find(struct, key);\n\t\t\tif (!src) {\n\t\t\t\tsrc = {\n\t\t\t\t\tname:      key,\n\t\t\t\t\tval:       {},\n\t\t\t\t\tmethodExt: [],\n\t\t\t\t\tpropExt:   [],\n\t\t\t\t\ttype:      'object'\n\t\t\t\t};\n\t\t\t\tstruct.push(src);\n\t\t\t}\n\n\t\t\tif (i === ien - 1) {\n\t\t\t\tsrc.val = val;\n\t\t\t\tsrc.type = typeof val === 'function' ?\n\t\t\t\t\t'function' :\n\t\t\t\t\t$.isPlainObject(val) ?\n\t\t\t\t\t\t'object' :\n\t\t\t\t\t\t'other';\n\t\t\t} else {\n\t\t\t\tstruct = method ?\n\t\t\t\t\tsrc.methodExt :\n\t\t\t\t\tsrc.propExt;\n\t\t\t}\n\t\t}\n\t};\n\n\t_Api.registerPlural = _api_registerPlural = function(pluralName, singularName, val) {\n\t\t_Api.register(pluralName, val);\n\n\t\t_Api.register(singularName, function() {\n\t\t\tvar ret = val.apply(this, arguments);\n\n\t\t\tif (ret === this) {\n\t\t\t\t// Returned item is the API instance that was passed in, return it\n\t\t\t\treturn this;\n\t\t\t} else if (ret instanceof _Api) {\n\t\t\t\t// New API instance returned, want the value from the first item\n\t\t\t\t// in the returned array for the singular result.\n\t\t\t\treturn ret.length ?\n\t\t\t\t\tArray.isArray(ret[0]) ?\n\t\t\t\t\t\tnew _Api(ret.context, ret[0]) : // Array results are 'enhanced'\n\t\t\t\t\t\tret[0] :\n\t\t\t\t\tundefined;\n\t\t\t}\n\n\t\t\t// Non-API return - just fire it back\n\t\t\treturn ret;\n\t\t});\n\t};\n\n\n\t/**\n\t * Selector for HTML tables. Apply the given selector to the give array of\n\t * DataTables settings objects.\n\t *\n\t * @param {string|integer} [selector] jQuery selector string or integer\n\t * @param  {array} Array of DataTables settings objects to be filtered\n\t * @return {array}\n\t * @ignore\n\t */\n\tvar __table_selector = function(selector, a) {\n\t\tif (Array.isArray(selector)) {\n\t\t\treturn $.map(selector, function(item) {\n\t\t\t\treturn __table_selector(item, a);\n\t\t\t});\n\t\t}\n\n\t\t// Integer is used to pick out a table by index\n\t\tif (typeof selector === 'number') {\n\t\t\treturn [a[ selector ]];\n\t\t}\n\n\t\t// Perform a jQuery selector on the table nodes\n\t\tvar nodes = $.map(a, function(el, i) {\n\t\t\treturn el.nTable;\n\t\t});\n\n\t\treturn $(nodes)\n\t\t\t.filter(selector)\n\t\t\t.map(function(i) {\n\t\t\t\t// Need to translate back from the table node to the settings\n\t\t\t\tvar idx = $.inArray(this, nodes);\n\t\t\t\treturn a[ idx ];\n\t\t\t})\n\t\t\t.toArray();\n\t};\n\n\n\t/**\n\t * Context selector for the API's context (i.e. the tables the API instance\n\t * refers to.\n\t *\n\t * @name    DataTable.Api#tables\n\t * @param {string|integer} [selector] Selector to pick which tables the iterator\n\t *   should operate on. If not given, all tables in the current context are\n\t *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n\t *   select multiple tables or as an integer to select a single table.\n\t * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n\t */\n\t_api_register('tables()', function(selector) {\n\t\t// A new instance is created if there was a selector specified\n\t\treturn selector !== undefined && selector !== null ?\n\t\t\tnew _Api(__table_selector(selector, this.context)) :\n\t\t\tthis;\n\t});\n\n\n\t_api_register('table()', function(selector) {\n\t\tvar tables = this.tables(selector);\n\t\tvar ctx = tables.context;\n\n\t\t// Truncate to the first matched table\n\t\treturn ctx.length ?\n\t\t\tnew _Api(ctx[0]) :\n\t\t\ttables;\n\t});\n\n\n\t_api_registerPlural('tables().nodes()', 'table().node()', function() {\n\t\treturn this.iterator('table', function(ctx) {\n\t\t\treturn ctx.nTable;\n\t\t}, 1);\n\t});\n\n\n\t_api_registerPlural('tables().body()', 'table().body()', function() {\n\t\treturn this.iterator('table', function(ctx) {\n\t\t\treturn ctx.nTBody;\n\t\t}, 1);\n\t});\n\n\n\t_api_registerPlural('tables().header()', 'table().header()', function() {\n\t\treturn this.iterator('table', function(ctx) {\n\t\t\treturn ctx.nTHead;\n\t\t}, 1);\n\t});\n\n\n\t_api_registerPlural('tables().footer()', 'table().footer()', function() {\n\t\treturn this.iterator('table', function(ctx) {\n\t\t\treturn ctx.nTFoot;\n\t\t}, 1);\n\t});\n\n\n\t_api_registerPlural('tables().containers()', 'table().container()', function() {\n\t\treturn this.iterator('table', function(ctx) {\n\t\t\treturn ctx.nTableWrapper;\n\t\t}, 1);\n\t});\n\n\n\t/**\n\t * Redraw the tables in the current context.\n\t */\n\t_api_register('draw()', function(paging) {\n\t\treturn this.iterator('table', function(settings) {\n\t\t\tif (paging === 'page') {\n\t\t\t\t_fnDraw(settings);\n\t\t\t} else {\n\t\t\t\tif (typeof paging === 'string') {\n\t\t\t\t\tpaging = paging === 'full-hold' ?\n\t\t\t\t\t\tfalse :\n\t\t\t\t\t\ttrue;\n\t\t\t\t}\n\n\t\t\t\t_fnReDraw(settings, paging === false);\n\t\t\t}\n\t\t});\n\t});\n\n\n\t/**\n\t * Get the current page index.\n\t *\n\t * @return {integer} Current page index (zero based)\n\t *//**\n\t\t\t\t * Set the current page.\n\t\t\t\t *\n\t\t\t\t * Note that if you attempt to show a page which does not exist, DataTables will\n\t\t\t\t * not throw an error, but rather reset the paging.\n\t\t\t\t *\n\t\t\t\t * @param {integer|string} action The paging action to take. This can be one of:\n\t\t\t\t *  * `integer` - The page index to jump to\n\t\t\t\t *  * `string` - An action to take:\n\t\t\t\t *    * `first` - Jump to first page.\n\t\t\t\t *    * `next` - Jump to the next page\n\t\t\t\t *    * `previous` - Jump to previous page\n\t\t\t\t *    * `last` - Jump to the last page.\n\t\t\t\t * @returns {DataTables.Api} this\n\t\t\t\t */\n\t_api_register('page()', function(action) {\n\t\tif (action === undefined) {\n\t\t\treturn this.page.info().page; // Not an expensive call\n\t\t}\n\n\t\t// Else, have an action to take on all tables\n\t\treturn this.iterator('table', function(settings) {\n\t\t\t_fnPageChange(settings, action);\n\t\t});\n\t});\n\n\n\t/**\n\t * Paging information for the first table in the current context.\n\t *\n\t * If you require paging information for another table, use the `table()` method\n\t * with a suitable selector.\n\t *\n\t * @return {object} Object with the following properties set:\n\t *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n\t *  * `pages` - Total number of pages\n\t *  * `start` - Display index for the first record shown on the current page\n\t *  * `end` - Display index for the last record shown on the current page\n\t *  * `length` - Display length (number of records). Note that generally `start\n\t *    + length = end`, but this is not always true, for example if there are\n\t *    only 2 records to show on the final page, with a length of 10.\n\t *  * `recordsTotal` - Full data set length\n\t *  * `recordsDisplay` - Data set length once the current filtering criterion\n\t *    are applied.\n\t */\n\t_api_register('page.info()', function(action) {\n\t\tif (this.context.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tvar\n\t\t\tsettings = this.context[0],\n\t\t\tstart = settings._iDisplayStart,\n\t\t\tlen = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\tall = len === -1;\n\n\t\treturn {\n\t\t\t\"page\":           all ? 0 : Math.floor(start / len),\n\t\t\t\"pages\":          all ? 1 : Math.ceil(visRecords / len),\n\t\t\t\"start\":          start,\n\t\t\t\"end\":            settings.fnDisplayEnd(),\n\t\t\t\"length\":         len,\n\t\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\n\t\t\t\"recordsDisplay\": visRecords,\n\t\t\t\"serverSide\":     _fnDataSource(settings) === 'ssp'\n\t\t};\n\t});\n\n\n\t/**\n\t * Get the current page length.\n\t *\n\t * @return {integer} Current page length. Note `-1` indicates that all records\n\t *   are to be shown.\n\t *//**\n\t\t\t\t * Set the current page length.\n\t\t\t\t *\n\t\t\t\t * @param {integer} Page length to set. Use `-1` to show all records.\n\t\t\t\t * @returns {DataTables.Api} this\n\t\t\t\t */\n\t_api_register('page.len()', function(len) {\n\t\t// Note that we can't call this function 'length()' because `length`\n\t\t// is a Javascript property of functions which defines how many arguments\n\t\t// the function expects.\n\t\tif (len === undefined) {\n\t\t\treturn this.context.length !== 0 ?\n\t\t\t\tthis.context[0]._iDisplayLength :\n\t\t\t\tundefined;\n\t\t}\n\n\t\t// Else, set the page length\n\t\treturn this.iterator('table', function(settings) {\n\t\t\t_fnLengthChange(settings, len);\n\t\t});\n\t});\n\n\n\tvar __reload = function(settings, holdPosition, callback) {\n\t\t// Use the draw event to trigger a callback\n\t\tif (callback) {\n\t\t\tvar api = new _Api(settings);\n\n\t\t\tapi.one('draw', function() {\n\t\t\t\tcallback(api.ajax.json());\n\t\t\t});\n\t\t}\n\n\t\tif (_fnDataSource(settings) == 'ssp') {\n\t\t\t_fnReDraw(settings, holdPosition);\n\t\t} else {\n\t\t\t_fnProcessingDisplay(settings, true);\n\n\t\t\t// Cancel an existing request\n\t\t\tvar xhr = settings.jqXHR;\n\t\t\tif (xhr && xhr.readyState !== 4) {\n\t\t\t\txhr.abort();\n\t\t\t}\n\n\t\t\t// Trigger xhr\n\t\t\t_fnBuildAjax(settings, [], function(json) {\n\t\t\t\t_fnClearTable(settings);\n\n\t\t\t\tvar data = _fnAjaxDataSrc(settings, json);\n\t\t\t\tfor (var i = 0, ien = data.length; i < ien; i++) {\n\t\t\t\t\t_fnAddData(settings, data[i]);\n\t\t\t\t}\n\n\t\t\t\t_fnReDraw(settings, holdPosition);\n\t\t\t\t_fnProcessingDisplay(settings, false);\n\t\t\t});\n\t\t}\n\t};\n\n\n\t/**\n\t * Get the JSON response from the last Ajax request that DataTables made to the\n\t * server. Note that this returns the JSON from the first table in the current\n\t * context.\n\t *\n\t * @return {object} JSON received from the server.\n\t */\n\t_api_register('ajax.json()', function() {\n\t\tvar ctx = this.context;\n\n\t\tif (ctx.length > 0) {\n\t\t\treturn ctx[0].json;\n\t\t}\n\n\t\t// Else return undefined;\n\t});\n\n\n\t/**\n\t * Get the data submitted in the last Ajax request\n\t */\n\t_api_register('ajax.params()', function() {\n\t\tvar ctx = this.context;\n\n\t\tif (ctx.length > 0) {\n\t\t\treturn ctx[0].oAjaxData;\n\t\t}\n\n\t\t// Else return undefined;\n\t});\n\n\n\t/**\n\t * Reload tables from the Ajax data source. Note that this function will\n\t * automatically re-draw the table when the remote data has been loaded.\n\t *\n\t * @param {boolean} [reset=true] Reset (default) or hold the current paging\n\t *   position. A full re-sort and re-filter is performed when this method is\n\t *   called, which is why the pagination reset is the default action.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register('ajax.reload()', function(callback, resetPaging) {\n\t\treturn this.iterator('table', function(settings) {\n\t\t\t__reload(settings, resetPaging === false, callback);\n\t\t});\n\t});\n\n\n\t/**\n\t * Get the current Ajax URL. Note that this returns the URL from the first\n\t * table in the current context.\n\t *\n\t * @return {string} Current Ajax source URL\n\t *//**\n\t\t\t\t * Set the Ajax URL. Note that this will set the URL for all tables in the\n\t\t\t\t * current context.\n\t\t\t\t *\n\t\t\t\t * @param {string} url URL to set.\n\t\t\t\t * @returns {DataTables.Api} this\n\t\t\t\t */\n\t_api_register('ajax.url()', function(url) {\n\t\tvar ctx = this.context;\n\n\t\tif (url === undefined) {\n\t\t\t// Get\n\t\t\tif (ctx.length === 0) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tctx = ctx[0];\n\n\t\t\treturn ctx.ajax ?\n\t\t\t\t$.isPlainObject(ctx.ajax) ?\n\t\t\t\t\tctx.ajax.url :\n\t\t\t\t\tctx.ajax :\n\t\t\t\tctx.sAjaxSource;\n\t\t}\n\n\t\t// Set\n\t\treturn this.iterator('table', function(settings) {\n\t\t\tif ($.isPlainObject(settings.ajax)) {\n\t\t\t\tsettings.ajax.url = url;\n\t\t\t} else {\n\t\t\t\tsettings.ajax = url;\n\t\t\t}\n\t\t\t// No need to consider sAjaxSource here since DataTables gives priority\n\t\t\t// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\n\t\t\t// value of `sAjaxSource` redundant.\n\t\t});\n\t});\n\n\n\t/**\n\t * Load data from the newly set Ajax URL. Note that this method is only\n\t * available when `ajax.url()` is used to set a URL. Additionally, this method\n\t * has the same effect as calling `ajax.reload()` but is provided for\n\t * convenience when setting a new URL. Like `ajax.reload()` it will\n\t * automatically redraw the table once the remote data has been loaded.\n\t *\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register('ajax.url().load()', function(callback, resetPaging) {\n\t\t// Same as a reload, but makes sense to present it for easy access after a\n\t\t// url change\n\t\treturn this.iterator('table', function(ctx) {\n\t\t\t__reload(ctx, resetPaging === false, callback);\n\t\t});\n\t});\n\n\n\tvar _selector_run = function(type, selector, selectFn, settings, opts) {\n\t\tvar\n\t\t\tout = [],\nres,\n\t\t\ta, i, ien, j, jen,\n\t\t\tselectorType = typeof selector;\n\n\t\t// Can't just check for isArray here, as an API or jQuery instance might be\n\t\t// given with their array like look\n\t\tif (!selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined) {\n\t\t\tselector = [selector];\n\t\t}\n\n\t\tfor (i = 0, ien = selector.length; i < ien; i++) {\n\t\t\t// Only split on simple strings - complex expressions will be jQuery selectors\n\t\t\ta = selector[i] && selector[i].split && !selector[i].match(/[\\[\\(:]/) ?\n\t\t\t\tselector[i].split(',') :\n\t\t\t\t[selector[i]];\n\n\t\t\tfor (j = 0, jen = a.length; j < jen; j++) {\n\t\t\t\tres = selectFn(typeof a[j] === 'string' ? (a[j]).trim() : a[j]);\n\n\t\t\t\tif (res && res.length) {\n\t\t\t\t\tout = out.concat(res);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Selector extensions\n\t\tvar ext = _ext.selector[ type ];\n\t\tif (ext.length) {\n\t\t\tfor (i = 0, ien = ext.length; i < ien; i++) {\n\t\t\t\tout = ext[i](settings, opts, out);\n\t\t\t}\n\t\t}\n\n\t\treturn _unique(out);\n\t};\n\n\n\tvar _selector_opts = function(opts) {\n\t\tif (!opts) {\n\t\t\topts = {};\n\t\t}\n\n\t\t// Backwards compatibility for 1.9- which used the terminology filter rather\n\t\t// than search\n\t\tif (opts.filter && opts.search === undefined) {\n\t\t\topts.search = opts.filter;\n\t\t}\n\n\t\treturn $.extend({\n\t\t\tsearch: 'none',\n\t\t\torder: 'current',\n\t\t\tpage: 'all'\n\t\t}, opts);\n\t};\n\n\n\tvar _selector_first = function(inst) {\n\t\t// Reduce the API instance to the first item found\n\t\tfor (var i = 0, ien = inst.length; i < ien; i++) {\n\t\t\tif (inst[i].length > 0) {\n\t\t\t\t// Assign the first element to the first item in the instance\n\t\t\t\t// and truncate the instance and context\n\t\t\t\tinst[0] = inst[i];\n\t\t\t\tinst[0].length = 1;\n\t\t\t\tinst.length = 1;\n\t\t\t\tinst.context = [inst.context[i]];\n\n\t\t\t\treturn inst;\n\t\t\t}\n\t\t}\n\n\t\t// Not found - return an empty instance\n\t\tinst.length = 0;\n\t\treturn inst;\n\t};\n\n\n\tvar _selector_row_indexes = function(settings, opts) {\n\t\tvar\n\t\t\ti, ien, tmp,\na = [],\n\t\t\tdisplayFiltered = settings.aiDisplay,\n\t\t\tdisplayMaster = settings.aiDisplayMaster;\n\n\t\tvar\n\t\t\tsearch = opts.search, // None, applied, removed\n\t\t\torder = opts.order, // Applied, current, index (original - compatibility with 1.9)\n\t\t\tpage = opts.page; // All, current\n\n\t\tif (_fnDataSource(settings) == 'ssp') {\n\t\t\t// In server-side processing mode, most options are irrelevant since\n\t\t\t// rows not shown don't exist and the index order is the applied order\n\t\t\t// Removed is a special case - for consistency just return an empty\n\t\t\t// array\n\t\t\treturn search === 'removed' ?\n\t\t\t\t[] :\n\t\t\t\t_range(0, displayMaster.length);\n\t\t} else if (page == 'current') {\n\t\t\t// Current page implies that order=current and filter=applied, since it is\n\t\t\t// fairly senseless otherwise, regardless of what order and search actually\n\t\t\t// are\n\t\t\tfor (i = settings._iDisplayStart, ien = settings.fnDisplayEnd(); i < ien; i++) {\n\t\t\t\ta.push(displayFiltered[i]);\n\t\t\t}\n\t\t} else if (order == 'current' || order == 'applied') {\n\t\t\tif (search == 'none') {\n\t\t\t\ta = displayMaster.slice();\n\t\t\t} else if (search == 'applied') {\n\t\t\t\ta = displayFiltered.slice();\n\t\t\t} else if (search == 'removed') {\n\t\t\t\t// O(n+m) solution by creating a hash map\n\t\t\t\tvar displayFilteredMap = {};\n\n\t\t\t\tfor (var i = 0, ien = displayFiltered.length; i < ien; i++) {\n\t\t\t\t\tdisplayFilteredMap[displayFiltered[i]] = null;\n\t\t\t\t}\n\n\t\t\t\ta = $.map(displayMaster, function(el) {\n\t\t\t\t\treturn !displayFilteredMap.hasOwnProperty(el) ?\n\t\t\t\t\t\tel :\n\t\t\t\t\t\tnull;\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (order == 'index' || order == 'original') {\n\t\t\tfor (i = 0, ien = settings.aoData.length; i < ien; i++) {\n\t\t\t\tif (search == 'none') {\n\t\t\t\t\ta.push(i);\n\t\t\t\t} else { // Applied | removed\n\t\t\t\t\ttmp = $.inArray(i, displayFiltered);\n\n\t\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t\t(tmp >= 0 && search == 'applied')) {\n\t\t\t\t\t\ta.push(i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn a;\n\t};\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Rows\n\t *\n\t * {}          - no selector - use all available rows\n\t * {integer}   - row aoData index\n\t * {node}      - TR node\n\t * {string}    - jQuery selector to apply to the TR elements\n\t * {array}     - jQuery array of nodes, or simply an array of TR nodes\n\t *\n\t */\n\tvar __row_selector = function(settings, selector, opts) {\n\t\tvar rows;\n\t\tvar run = function(sel) {\n\t\t\tvar selInt = _intVal(sel);\n\t\t\tvar i, ien;\n\t\t\tvar aoData = settings.aoData;\n\n\t\t\t// Short cut - selector is a number and no options provided (default is\n\t\t\t// all records, so no need to check if the index is in there, since it\n\t\t\t// must be - dev error if the index doesn't exist).\n\t\t\tif (selInt !== null && !opts) {\n\t\t\t\treturn [selInt];\n\t\t\t}\n\n\t\t\tif (!rows) {\n\t\t\t\trows = _selector_row_indexes(settings, opts);\n\t\t\t}\n\n\t\t\tif (selInt !== null && $.inArray(selInt, rows) !== -1) {\n\t\t\t\t// Selector - integer\n\t\t\t\treturn [selInt];\n\t\t\t} else if (sel === null || sel === undefined || sel === '') {\n\t\t\t\t// Selector - none\n\t\t\t\treturn rows;\n\t\t\t}\n\n\t\t\t// Selector - function\n\t\t\tif (typeof sel === 'function') {\n\t\t\t\treturn $.map(rows, function(idx) {\n\t\t\t\t\tvar row = aoData[ idx ];\n\t\t\t\t\treturn sel(idx, row._aData, row.nTr) ? idx : null;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Selector - node\n\t\t\tif (sel.nodeName) {\n\t\t\t\tvar rowIdx = sel._DT_RowIndex; // Property added by DT for fast lookup\n\t\t\t\tvar cellIdx = sel._DT_CellIndex;\n\n\t\t\t\tif (rowIdx !== undefined) {\n\t\t\t\t\t// Make sure that the row is actually still present in the table\n\t\t\t\t\treturn aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?\n\t\t\t\t\t\t[rowIdx] :\n\t\t\t\t\t\t[];\n\t\t\t\t} else if (cellIdx) {\n\t\t\t\t\treturn aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel.parentNode ?\n\t\t\t\t\t\t[cellIdx.row] :\n\t\t\t\t\t\t[];\n\t\t\t\t} else {\n\t\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\n\t\t\t\t\treturn host.length ?\n\t\t\t\t\t\t[host.data('dt-row')] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ID selector. Want to always be able to select rows by id, regardless\n\t\t\t// of if the tr element has been created or not, so can't rely upon\n\t\t\t// jQuery here - hence a custom implementation. This does not match\n\t\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n\t\t\t// but to select it using a CSS selector engine (like Sizzle or\n\t\t\t// querySelect) it would need to need to be escaped for some characters.\n\t\t\t// DataTables simplifies this for row selectors since you can select\n\t\t\t// only a row. A # indicates an id any anything that follows is the id -\n\t\t\t// unescaped.\n\t\t\tif (typeof sel === 'string' && sel.charAt(0) === '#') {\n\t\t\t\t// Get row index from id\n\t\t\t\tvar rowObj = settings.aIds[ sel.replace(/^#/, '') ];\n\t\t\t\tif (rowObj !== undefined) {\n\t\t\t\t\treturn [rowObj.idx];\n\t\t\t\t}\n\n\t\t\t\t// Need to fall through to jQuery in case there is DOM id that\n\t\t\t\t// matches\n\t\t\t}\n\n\t\t\t// Get nodes in the order from the `rows` array with null values removed\n\t\t\tvar nodes = _removeEmpty(\n\t\t\t\t_pluck_order(settings.aoData, rows, 'nTr')\n\t\t\t);\n\n\t\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\n\t\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\n\t\t\t// it also allows arrays, so this will cope with all three options\n\t\t\treturn $(nodes)\n\t\t\t\t.filter(sel)\n\t\t\t\t.map(function() {\n\t\t\t\t\treturn this._DT_RowIndex;\n\t\t\t\t})\n\t\t\t\t.toArray();\n\t\t};\n\n\t\treturn _selector_run('row', selector, run, settings, opts);\n\t};\n\n\n\t_api_register('rows()', function(selector, opts) {\n\t\t// Argument shifting\n\t\tif (selector === undefined) {\n\t\t\tselector = '';\n\t\t} else if ($.isPlainObject(selector)) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\n\t\topts = _selector_opts(opts);\n\n\t\tvar inst = this.iterator('table', function(settings) {\n\t\t\treturn __row_selector(settings, selector, opts);\n\t\t}, 1);\n\n\t\t// Want argument shifting here and in __row_selector?\n\t\tinst.selector.rows = selector;\n\t\tinst.selector.opts = opts;\n\n\t\treturn inst;\n\t});\n\n\t_api_register('rows().nodes()', function() {\n\t\treturn this.iterator('row', function(settings, row) {\n\t\t\treturn settings.aoData[ row ].nTr || undefined;\n\t\t}, 1);\n\t});\n\n\t_api_register('rows().data()', function() {\n\t\treturn this.iterator(true, 'rows', function(settings, rows) {\n\t\t\treturn _pluck_order(settings.aoData, rows, '_aData');\n\t\t}, 1);\n\t});\n\n\t_api_registerPlural('rows().cache()', 'row().cache()', function(type) {\n\t\treturn this.iterator('row', function(settings, row) {\n\t\t\tvar r = settings.aoData[ row ];\n\t\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\n\t\t}, 1);\n\t});\n\n\t_api_registerPlural('rows().invalidate()', 'row().invalidate()', function(src) {\n\t\treturn this.iterator('row', function(settings, row) {\n\t\t\t_fnInvalidate(settings, row, src);\n\t\t});\n\t});\n\n\t_api_registerPlural('rows().indexes()', 'row().index()', function() {\n\t\treturn this.iterator('row', function(settings, row) {\n\t\t\treturn row;\n\t\t}, 1);\n\t});\n\n\t_api_registerPlural('rows().ids()', 'row().id()', function(hash) {\n\t\tvar a = [];\n\t\tvar context = this.context;\n\n\t\t// `iterator` will drop undefined values, but in this case we want them\n\t\tfor (var i = 0, ien = context.length; i < ien; i++) {\n\t\t\tfor (var j = 0, jen = this[i].length; j < jen; j++) {\n\t\t\t\tvar id = context[i].rowIdFn(context[i].aoData[ this[i][j] ]._aData);\n\t\t\t\ta.push((hash === true ? '#' : '') + id);\n\t\t\t}\n\t\t}\n\n\t\treturn new _Api(context, a);\n\t});\n\n\t_api_registerPlural('rows().remove()', 'row().remove()', function() {\n\t\tvar that = this;\n\n\t\tthis.iterator('row', function(settings, row, thatIdx) {\n\t\t\tvar data = settings.aoData;\n\t\t\tvar rowData = data[ row ];\n\t\t\tvar i, ien, j, jen;\n\t\t\tvar loopRow, loopCells;\n\n\t\t\tdata.splice(row, 1);\n\n\t\t\t// Update the cached indexes\n\t\t\tfor (i = 0, ien = data.length; i < ien; i++) {\n\t\t\t\tloopRow = data[i];\n\t\t\t\tloopCells = loopRow.anCells;\n\n\t\t\t\t// Rows\n\t\t\t\tif (loopRow.nTr !== null) {\n\t\t\t\t\tloopRow.nTr._DT_RowIndex = i;\n\t\t\t\t}\n\n\t\t\t\t// Cells\n\t\t\t\tif (loopCells !== null) {\n\t\t\t\t\tfor (j = 0, jen = loopCells.length; j < jen; j++) {\n\t\t\t\t\t\tloopCells[j]._DT_CellIndex.row = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Delete from the display arrays\n\t\t\t_fnDeleteIndex(settings.aiDisplayMaster, row);\n\t\t\t_fnDeleteIndex(settings.aiDisplay, row);\n\t\t\t_fnDeleteIndex(that[ thatIdx ], row, false); // Maintain local indexes\n\n\t\t\t// For server-side processing tables - subtract the deleted row from the count\n\t\t\tif (settings._iRecordsDisplay > 0) {\n\t\t\t\tsettings._iRecordsDisplay--;\n\t\t\t}\n\n\t\t\t// Check for an 'overflow' they case for displaying the table\n\t\t\t_fnLengthOverflow(settings);\n\n\t\t\t// Remove the row's ID reference if there is one\n\t\t\tvar id = settings.rowIdFn(rowData._aData);\n\t\t\tif (id !== undefined) {\n\t\t\t\tdelete settings.aIds[ id ];\n\t\t\t}\n\t\t});\n\n\t\tthis.iterator('table', function(settings) {\n\t\t\tfor (var i = 0, ien = settings.aoData.length; i < ien; i++) {\n\t\t\t\tsettings.aoData[i].idx = i;\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t});\n\n\n\t_api_register('rows.add()', function(rows) {\n\t\tvar newRows = this.iterator('table', function(settings) {\n\t\t\t\tvar row, i, ien;\n\t\t\t\tvar out = [];\n\n\t\t\t\tfor (i = 0, ien = rows.length; i < ien; i++) {\n\t\t\t\t\trow = rows[i];\n\n\t\t\t\t\tif (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n\t\t\t\t\t\tout.push(_fnAddTr(settings, row)[0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tout.push(_fnAddData(settings, row));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn out;\n\t\t\t}, 1);\n\n\t\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\t\tvar modRows = this.rows(-1);\n\t\tmodRows.pop();\n\t\t$.merge(modRows, newRows);\n\n\t\treturn modRows;\n\t});\n\n\n\t/**\n\t *\n\t */\n\t_api_register('row()', function(selector, opts) {\n\t\treturn _selector_first(this.rows(selector, opts));\n\t});\n\n\n\t_api_register('row().data()', function(data) {\n\t\tvar ctx = this.context;\n\n\t\tif (data === undefined) {\n\t\t\t// Get\n\t\t\treturn ctx.length && this.length ?\n\t\t\t\tctx[0].aoData[ this[0] ]._aData :\n\t\t\t\tundefined;\n\t\t}\n\n\t\t// Set\n\t\tvar row = ctx[0].aoData[ this[0] ];\n\t\trow._aData = data;\n\n\t\t// If the DOM has an id, and the data source is an array\n\t\tif (Array.isArray(data) && row.nTr && row.nTr.id) {\n\t\t\t_fnSetObjectDataFn(ctx[0].rowId)(data, row.nTr.id);\n\t\t}\n\n\t\t// Automatically invalidate\n\t\t_fnInvalidate(ctx[0], this[0], 'data');\n\n\t\treturn this;\n\t});\n\n\n\t_api_register('row().node()', function() {\n\t\tvar ctx = this.context;\n\n\t\treturn ctx.length && this.length ?\n\t\t\tctx[0].aoData[ this[0] ].nTr || null :\n\t\t\tnull;\n\t});\n\n\n\t_api_register('row.add()', function(row) {\n\t\t// Allow a jQuery object to be passed in - only a single row is added from\n\t\t// it though - the first element in the set\n\t\tif (row instanceof $ && row.length) {\n\t\t\trow = row[0];\n\t\t}\n\n\t\tvar rows = this.iterator('table', function(settings) {\n\t\t\tif (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n\t\t\t\treturn _fnAddTr(settings, row)[0];\n\t\t\t}\n\t\t\treturn _fnAddData(settings, row);\n\t\t});\n\n\t\t// Return an Api.rows() extended instance, with the newly added row selected\n\t\treturn this.row(rows[0]);\n\t});\n\n\n\t$(document).on('plugin-init.dt', function(e, context) {\n\t\tvar api = new _Api(context);\n\n\t\tapi.on('stateSaveParams', function(e, settings, d) {\n\t\t\t// This could be more compact with the API, but it is a lot faster as a simple\n\t\t\t// internal loop\n\t\t\tvar idFn = settings.rowIdFn;\n\t\t\tvar data = settings.aoData;\n\t\t\tvar ids = [];\n\n\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\tif (data[i]._detailsShow) {\n\t\t\t\t\tids.push('#' + idFn(data[i]._aData));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\td.childRows = ids;\n\t\t});\n\n\t\tvar loaded = api.state.loaded();\n\n\t\tif (loaded && loaded.childRows) {\n\t\t\tapi\n\t\t\t\t.rows($.map(loaded.childRows, function(id) {\n\t\t\t\t\treturn id.replace(/:/g, '\\\\:');\n\t\t\t\t}))\n\t\t\t\t.every(function() {\n\t\t\t\t\t_fnCallbackFire(context, null, 'requestChild', [this]);\n\t\t\t\t});\n\t\t}\n\t});\n\n\tvar __details_add = function(ctx, row, data, klass) {\n\t\t// Convert to array of TR elements\n\t\tvar rows = [];\n\t\tvar addRow = function(r, k) {\n\t\t\t// Recursion to allow for arrays of jQuery objects\n\t\t\tif (Array.isArray(r) || r instanceof $) {\n\t\t\t\tfor (var i = 0, ien = r.length; i < ien; i++) {\n\t\t\t\t\taddRow(r[i], k);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If we get a TR element, then just add it directly - up to the dev\n\t\t\t// to add the correct number of columns etc\n\t\t\tif (r.nodeName && r.nodeName.toLowerCase() === 'tr') {\n\t\t\t\trows.push(r);\n\t\t\t} else {\n\t\t\t\t// Otherwise create a row with a wrapper\n\t\t\t\tvar created = $('<tr><td></td></tr>').addClass(k);\n\t\t\t\t$('td', created)\n\t\t\t\t\t.addClass(k)\n\t\t\t\t\t.html(r)\n\t\t\t\t\t[0].colSpan = _fnVisbleColumns(ctx);\n\n\t\t\t\trows.push(created[0]);\n\t\t\t}\n\t\t};\n\n\t\taddRow(data, klass);\n\n\t\tif (row._details) {\n\t\t\trow._details.detach();\n\t\t}\n\n\t\trow._details = $(rows);\n\n\t\t// If the children were already shown, that state should be retained\n\t\tif (row._detailsShow) {\n\t\t\trow._details.insertAfter(row.nTr);\n\t\t}\n\t};\n\n\n\t// Make state saving of child row details async to allow them to be batch processed\n\tvar __details_state = DataTable.util.throttle(\n\t\tfunction(ctx) {\n\t\t\t_fnSaveState(ctx[0]);\n\t\t},\n\t\t500\n\t);\n\n\n\tvar __details_remove = function(api, idx) {\n\t\tvar ctx = api.context;\n\n\t\tif (ctx.length) {\n\t\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\n\n\t\t\tif (row && row._details) {\n\t\t\t\trow._details.remove();\n\n\t\t\t\trow._detailsShow = undefined;\n\t\t\t\trow._details = undefined;\n\t\t\t\t$(row.nTr).removeClass('dt-hasChild');\n\t\t\t\t__details_state(ctx);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tvar __details_display = function(api, show) {\n\t\tvar ctx = api.context;\n\n\t\tif (ctx.length && api.length) {\n\t\t\tvar row = ctx[0].aoData[ api[0] ];\n\n\t\t\tif (row._details) {\n\t\t\t\trow._detailsShow = show;\n\n\t\t\t\tif (show) {\n\t\t\t\t\trow._details.insertAfter(row.nTr);\n\t\t\t\t\t$(row.nTr).addClass('dt-hasChild');\n\t\t\t\t} else {\n\t\t\t\t\trow._details.detach();\n\t\t\t\t\t$(row.nTr).removeClass('dt-hasChild');\n\t\t\t\t}\n\n\t\t\t\t_fnCallbackFire(ctx[0], null, 'childRow', [show, api.row(api[0])]);\n\n\t\t\t\t__details_events(ctx[0]);\n\t\t\t\t__details_state(ctx);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tvar __details_events = function(settings) {\n\t\tvar api = new _Api(settings);\n\t\tvar namespace = '.dt.DT_details';\n\t\tvar drawEvent = 'draw' + namespace;\n\t\tvar colvisEvent = 'column-sizing' + namespace;\n\t\tvar destroyEvent = 'destroy' + namespace;\n\t\tvar data = settings.aoData;\n\n\t\tapi.off(drawEvent + ' ' + colvisEvent + ' ' + destroyEvent);\n\n\t\tif (_pluck(data, '_details').length > 0) {\n\t\t\t// On each draw, insert the required elements into the document\n\t\t\tapi.on(drawEvent, function(e, ctx) {\n\t\t\t\tif (settings !== ctx) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tapi.rows({page: 'current'}).eq(0).each(function(idx) {\n\t\t\t\t\t// Internal data grab\n\t\t\t\t\tvar row = data[ idx ];\n\n\t\t\t\t\tif (row._detailsShow) {\n\t\t\t\t\t\trow._details.insertAfter(row.nTr);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Column visibility change - update the colspan\n\t\t\tapi.on(colvisEvent, function(e, ctx, idx, vis) {\n\t\t\t\tif (settings !== ctx) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Update the colspan for the details rows (note, only if it already has\n\t\t\t\t// a colspan)\n\t\t\t\tvar row,\nvisible = _fnVisbleColumns(ctx);\n\n\t\t\t\tfor (var i = 0, ien = data.length; i < ien; i++) {\n\t\t\t\t\trow = data[i];\n\n\t\t\t\t\tif (row._details) {\n\t\t\t\t\t\trow._details.children('td[colspan]').attr('colspan', visible);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Table destroyed - nuke any child rows\n\t\t\tapi.on(destroyEvent, function(e, ctx) {\n\t\t\t\tif (settings !== ctx) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, ien = data.length; i < ien; i++) {\n\t\t\t\t\tif (data[i]._details) {\n\t\t\t\t\t\t__details_remove(api, i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\t// Strings for the method names to help minification\n\tvar _emp = '';\n\tvar _child_obj = _emp + 'row().child';\n\tvar _child_mth = _child_obj + '()';\n\n\t// Data can be:\n\t//  tr\n\t//  string\n\t//  jQuery or array of any of the above\n\t_api_register(_child_mth, function(data, klass) {\n\t\tvar ctx = this.context;\n\n\t\tif (data === undefined) {\n\t\t\t// Get\n\t\t\treturn ctx.length && this.length ?\n\t\t\t\tctx[0].aoData[ this[0] ]._details :\n\t\t\t\tundefined;\n\t\t} else if (data === true) {\n\t\t\t// Show\n\t\t\tthis.child.show();\n\t\t} else if (data === false) {\n\t\t\t// Remove\n\t\t\t__details_remove(this);\n\t\t} else if (ctx.length && this.length) {\n\t\t\t// Set\n\t\t\t__details_add(ctx[0], ctx[0].aoData[ this[0] ], data, klass);\n\t\t}\n\n\t\treturn this;\n\t});\n\n\n\t_api_register([\n\t\t_child_obj + '.show()',\n\t\t_child_mth + '.show()' // Only when `child()` was called with parameters (without\n\t], function(show) { // It returns an object and this method is not executed)\n\t\t__details_display(this, true);\n\t\treturn this;\n\t});\n\n\n\t_api_register([\n\t\t_child_obj + '.hide()',\n\t\t_child_mth + '.hide()' // Only when `child()` was called with parameters (without\n\t], function() { // It returns an object and this method is not executed)\n\t\t__details_display(this, false);\n\t\treturn this;\n\t});\n\n\n\t_api_register([\n\t\t_child_obj + '.remove()',\n\t\t_child_mth + '.remove()' // Only when `child()` was called with parameters (without\n\t], function() { // It returns an object and this method is not executed)\n\t\t__details_remove(this);\n\t\treturn this;\n\t});\n\n\n\t_api_register(_child_obj + '.isShown()', function() {\n\t\tvar ctx = this.context;\n\n\t\tif (ctx.length && this.length) {\n\t\t\t// _detailsShown as false or undefined will fall through to return false\n\t\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\n\t\t}\n\t\treturn false;\n\t});\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Columns\n\t *\n\t * {integer}           - column index (>=0 count from left, <0 count from right)\n\t * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n\t * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n\t * \"{string}:name\"     - column name\n\t * \"{string}\"          - jQuery selector on column header nodes\n\t *\n\t */\n\n\t// can be an array of these items, comma separated list, or an array of comma\n\t// separated lists\n\n\tvar __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;\n\n\n\t// R1 and r2 are redundant - but it means that the parameters match for the\n\t// iterator callback in columns().data()\n\tvar __columnData = function(settings, column, r1, r2, rows) {\n\t\tvar a = [];\n\t\tfor (var row = 0, ien = rows.length; row < ien; row++) {\n\t\t\ta.push(_fnGetCellData(settings, rows[row], column));\n\t\t}\n\t\treturn a;\n\t};\n\n\n\tvar __column_selector = function(settings, selector, opts) {\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tnames = _pluck(columns, 'sName'),\n\t\t\tnodes = _pluck(columns, 'nTh');\n\n\t\tvar run = function(s) {\n\t\t\tvar selInt = _intVal(s);\n\n\t\t\t// Selector - all\n\t\t\tif (s === '') {\n\t\t\t\treturn _range(columns.length);\n\t\t\t}\n\n\t\t\t// Selector - index\n\t\t\tif (selInt !== null) {\n\t\t\t\treturn [selInt >= 0 ?\n\t\t\t\t\tselInt : // Count from left\n\t\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t// Selector = function\n\t\t\tif (typeof s === 'function') {\n\t\t\t\tvar rows = _selector_row_indexes(settings, opts);\n\n\t\t\t\treturn $.map(columns, function(col, idx) {\n\t\t\t\t\treturn s(\n\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t__columnData(settings, idx, 0, 0, rows),\n\t\t\t\t\t\t\tnodes[ idx ]\n\t\t\t\t\t\t) ? idx : null;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// JQuery or string selector\n\t\t\tvar match = typeof s === 'string' ?\n\t\t\t\ts.match(__re_column_selector) :\n\t\t\t\t'';\n\n\t\t\tif (match) {\n\t\t\t\tswitch (match[2]) {\n\t\t\t\t\tcase 'visIdx':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\tvar idx = parseInt(match[1], 10);\n\t\t\t\t\t\t// Visible index given, convert to column index\n\t\t\t\t\t\tif (idx < 0) {\n\t\t\t\t\t\t\t// Counting from the right\n\t\t\t\t\t\t\tvar visColumns = $.map(columns, function(col, i) {\n\t\t\t\t\t\t\t\treturn col.bVisible ? i : null;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn [visColumns[ visColumns.length + idx ]];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Counting from the left\n\t\t\t\t\t\treturn [_fnVisibleToColumnIndex(settings, idx)];\n\n\t\t\t\t\tcase 'name':\n\t\t\t\t\t\t// Match by name. `names` is column index complete and in order\n\t\t\t\t\t\treturn $.map(names, function(name, i) {\n\t\t\t\t\t\t\treturn name === match[1] ? i : null;\n\t\t\t\t\t\t});\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cell in the table body\n\t\t\tif (s.nodeName && s._DT_CellIndex) {\n\t\t\t\treturn [s._DT_CellIndex.column];\n\t\t\t}\n\n\t\t\t// JQuery selector on the TH elements for the columns\n\t\t\tvar jqResult = $(nodes)\n\t\t\t\t.filter(s)\n\t\t\t\t.map(function() {\n\t\t\t\t\treturn $.inArray(this, nodes); // `nodes` is column index complete and in order\n\t\t\t\t})\n\t\t\t\t.toArray();\n\n\t\t\tif (jqResult.length || !s.nodeName) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\n\t\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\n\t\t\t// a child or such an element\n\t\t\tvar host = $(s).closest('*[data-dt-column]');\n\t\t\treturn host.length ?\n\t\t\t\t[host.data('dt-column')] :\n\t\t\t\t[];\n\t\t};\n\n\t\treturn _selector_run('column', selector, run, settings, opts);\n\t};\n\n\n\tvar __setColumnVis = function(settings, column, vis) {\n\t\tvar\n\t\t\tcols = settings.aoColumns,\n\t\t\tcol = cols[ column ],\n\t\t\tdata = settings.aoData,\n\t\t\trow, cells, i, ien, tr;\n\n\t\t// Get\n\t\tif (vis === undefined) {\n\t\t\treturn col.bVisible;\n\t\t}\n\n\t\t// Set\n\t\t// No change\n\t\tif (col.bVisible === vis) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (vis) {\n\t\t\t// Insert column\n\t\t\t// Need to decide if we should use appendChild or insertBefore\n\t\t\tvar insertBefore = $.inArray(true, _pluck(cols, 'bVisible'), column + 1);\n\n\t\t\tfor (i = 0, ien = data.length; i < ien; i++) {\n\t\t\t\ttr = data[i].nTr;\n\t\t\t\tcells = data[i].anCells;\n\n\t\t\t\tif (tr) {\n\t\t\t\t\t// InsertBefore can act like appendChild if 2nd arg is null\n\t\t\t\t\ttr.insertBefore(cells[ column ], cells[ insertBefore ] || null);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Remove column\n\t\t\t$(_pluck(settings.aoData, 'anCells', column)).detach();\n\t\t}\n\n\t\t// Common actions\n\t\tcol.bVisible = vis;\n\t};\n\n\n\t_api_register('columns()', function(selector, opts) {\n\t\t// Argument shifting\n\t\tif (selector === undefined) {\n\t\t\tselector = '';\n\t\t} else if ($.isPlainObject(selector)) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\n\t\topts = _selector_opts(opts);\n\n\t\tvar inst = this.iterator('table', function(settings) {\n\t\t\treturn __column_selector(settings, selector, opts);\n\t\t}, 1);\n\n\t\t// Want argument shifting here and in _row_selector?\n\t\tinst.selector.cols = selector;\n\t\tinst.selector.opts = opts;\n\n\t\treturn inst;\n\t});\n\n\t_api_registerPlural('columns().header()', 'column().header()', function(selector, opts) {\n\t\treturn this.iterator('column', function(settings, column) {\n\t\t\treturn settings.aoColumns[column].nTh;\n\t\t}, 1);\n\t});\n\n\t_api_registerPlural('columns().footer()', 'column().footer()', function(selector, opts) {\n\t\treturn this.iterator('column', function(settings, column) {\n\t\t\treturn settings.aoColumns[column].nTf;\n\t\t}, 1);\n\t});\n\n\t_api_registerPlural('columns().data()', 'column().data()', function() {\n\t\treturn this.iterator('column-rows', __columnData, 1);\n\t});\n\n\t_api_registerPlural('columns().dataSrc()', 'column().dataSrc()', function() {\n\t\treturn this.iterator('column', function(settings, column) {\n\t\t\treturn settings.aoColumns[column].mData;\n\t\t}, 1);\n\t});\n\n\t_api_registerPlural('columns().cache()', 'column().cache()', function(type) {\n\t\treturn this.iterator('column-rows', function(settings, column, i, j, rows) {\n\t\t\treturn _pluck_order(settings.aoData, rows,\n\t\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\n\t\t\t);\n\t\t}, 1);\n\t});\n\n\t_api_registerPlural('columns().nodes()', 'column().nodes()', function() {\n\t\treturn this.iterator('column-rows', function(settings, column, i, j, rows) {\n\t\t\treturn _pluck_order(settings.aoData, rows, 'anCells', column);\n\t\t}, 1);\n\t});\n\n\t_api_registerPlural('columns().visible()', 'column().visible()', function(vis, calc) {\n\t\tvar that = this;\n\t\tvar ret = this.iterator('column', function(settings, column) {\n\t\t\tif (vis === undefined) {\n\t\t\t\treturn settings.aoColumns[ column ].bVisible;\n\t\t\t} // Else\n\t\t\t__setColumnVis(settings, column, vis);\n\t\t});\n\n\t\t// Group the column visibility changes\n\t\tif (vis !== undefined) {\n\t\t\tthis.iterator('table', function(settings) {\n\t\t\t\t// Redraw the header after changes\n\t\t\t\t_fnDrawHead(settings, settings.aoHeader);\n\t\t\t\t_fnDrawHead(settings, settings.aoFooter);\n\n\t\t\t\t// Update colspan for no records display. Child rows and extensions will use their own\n\t\t\t\t// listeners to do this - only need to update the empty table item here\n\t\t\t\tif (!settings.aiDisplay.length) {\n\t\t\t\t\t$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n\t\t\t\t}\n\n\t\t\t\t_fnSaveState(settings);\n\n\t\t\t\t// Second loop once the first is done for events\n\t\t\t\tthat.iterator('column', function(settings, column) {\n\t\t\t\t\t_fnCallbackFire(settings, null, 'column-visibility', [settings, column, vis, calc]);\n\t\t\t\t});\n\n\t\t\t\tif (calc === undefined || calc) {\n\t\t\t\t\tthat.columns.adjust();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn ret;\n\t});\n\n\t_api_registerPlural('columns().indexes()', 'column().index()', function(type) {\n\t\treturn this.iterator('column', function(settings, column) {\n\t\t\treturn type === 'visible' ?\n\t\t\t\t_fnColumnIndexToVisible(settings, column) :\n\t\t\t\tcolumn;\n\t\t}, 1);\n\t});\n\n\t_api_register('columns.adjust()', function() {\n\t\treturn this.iterator('table', function(settings) {\n\t\t\t_fnAdjustColumnSizing(settings);\n\t\t}, 1);\n\t});\n\n\t_api_register('column.index()', function(type, idx) {\n\t\tif (this.context.length !== 0) {\n\t\t\tvar ctx = this.context[0];\n\n\t\t\tif (type === 'fromVisible' || type === 'toData') {\n\t\t\t\treturn _fnVisibleToColumnIndex(ctx, idx);\n\t\t\t} else if (type === 'fromData' || type === 'toVisible') {\n\t\t\t\treturn _fnColumnIndexToVisible(ctx, idx);\n\t\t\t}\n\t\t}\n\t});\n\n\t_api_register('column()', function(selector, opts) {\n\t\treturn _selector_first(this.columns(selector, opts));\n\t});\n\n\tvar __cell_selector = function(settings, selector, opts) {\n\t\tvar data = settings.aoData;\n\t\tvar rows = _selector_row_indexes(settings, opts);\n\t\tvar cells = _removeEmpty(_pluck_order(data, rows, 'anCells'));\n\t\tvar allCells = $(_flatten([], cells));\n\t\tvar row;\n\t\tvar columns = settings.aoColumns.length;\n\t\tvar a, i, ien, j, o, host;\n\n\t\tvar run = function(s) {\n\t\t\tvar fnSelector = typeof s === 'function';\n\n\t\t\tif (s === null || s === undefined || fnSelector) {\n\t\t\t\t// All cells and function selectors\n\t\t\t\ta = [];\n\n\t\t\t\tfor (i = 0, ien = rows.length; i < ien; i++) {\n\t\t\t\t\trow = rows[i];\n\n\t\t\t\t\tfor (j = 0; j < columns; j++) {\n\t\t\t\t\t\to = {\n\t\t\t\t\t\t\trow: row,\n\t\t\t\t\t\t\tcolumn: j\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (fnSelector) {\n\t\t\t\t\t\t\t// Selector - function\n\t\t\t\t\t\t\thost = data[ row ];\n\n\t\t\t\t\t\t\tif (s(o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null)) {\n\t\t\t\t\t\t\t\ta.push(o);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Selector - all\n\t\t\t\t\t\t\ta.push(o);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn a;\n\t\t\t}\n\n\t\t\t// Selector - index\n\t\t\tif ($.isPlainObject(s)) {\n\t\t\t\t// Valid cell index and its in the array of selectable rows\n\t\t\t\treturn s.column !== undefined && s.row !== undefined && $.inArray(s.row, rows) !== -1 ?\n\t\t\t\t\t[s] :\n\t\t\t\t\t[];\n\t\t\t}\n\n\t\t\t// Selector - jQuery filtered cells\n\t\t\tvar jqResult = allCells\n\t\t\t\t.filter(s)\n\t\t\t\t.map(function(i, el) {\n\t\t\t\t\treturn { // Use a new object, in case someone changes the values\n\t\t\t\t\t\trow:    el._DT_CellIndex.row,\n\t\t\t\t\t\tcolumn: el._DT_CellIndex.column\n\t \t\t\t\t};\n\t\t\t\t})\n\t\t\t\t.toArray();\n\n\t\t\tif (jqResult.length || !s.nodeName) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\n\t\t\t// Otherwise the selector is a node, and there is one last option - the\n\t\t\t// element might be a child of an element which has dt-row and dt-column\n\t\t\t// data attributes\n\t\t\thost = $(s).closest('*[data-dt-row]');\n\t\t\treturn host.length ?\n\t\t\t\t[{\n\t\t\t\t\trow: host.data('dt-row'),\n\t\t\t\t\tcolumn: host.data('dt-column')\n\t\t\t\t}] :\n\t\t\t\t[];\n\t\t};\n\n\t\treturn _selector_run('cell', selector, run, settings, opts);\n\t};\n\n\n\t_api_register('cells()', function(rowSelector, columnSelector, opts) {\n\t\t// Argument shifting\n\t\tif ($.isPlainObject(rowSelector)) {\n\t\t\t// Indexes\n\t\t\tif (rowSelector.row === undefined) {\n\t\t\t\t// Selector options in first parameter\n\t\t\t\topts = rowSelector;\n\t\t\t\trowSelector = null;\n\t\t\t} else {\n\t\t\t\t// Cell index objects in first parameter\n\t\t\t\topts = columnSelector;\n\t\t\t\tcolumnSelector = null;\n\t\t\t}\n\t\t}\n\t\tif ($.isPlainObject(columnSelector)) {\n\t\t\topts = columnSelector;\n\t\t\tcolumnSelector = null;\n\t\t}\n\n\t\t// Cell selector\n\t\tif (columnSelector === null || columnSelector === undefined) {\n\t\t\treturn this.iterator('table', function(settings) {\n\t\t\t\treturn __cell_selector(settings, rowSelector, _selector_opts(opts));\n\t\t\t});\n\t\t}\n\n\t\t// The default built in options need to apply to row and columns\n\t\tvar internalOpts = opts ? {\n\t\t\tpage: opts.page,\n\t\t\torder: opts.order,\n\t\t\tsearch: opts.search\n\t\t} : {};\n\n\t\t// Row + column selector\n\t\tvar columns = this.columns(columnSelector, internalOpts);\n\t\tvar rows = this.rows(rowSelector, internalOpts);\n\t\tvar i, ien, j, jen;\n\n\t\tvar cellsNoOpts = this.iterator('table', function(settings, idx) {\n\t\t\tvar a = [];\n\n\t\t\tfor (i = 0, ien = rows[idx].length; i < ien; i++) {\n\t\t\t\tfor (j = 0, jen = columns[idx].length; j < jen; j++) {\n\t\t\t\t\ta.push({\n\t\t\t\t\t\trow:    rows[idx][i],\n\t\t\t\t\t\tcolumn: columns[idx][j]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn a;\n\t\t}, 1);\n\n\t\t// There is currently only one extension which uses a cell selector extension\n\t\t// It is a _major_ performance drag to run this if it isn't needed, so this is\n\t\t// an extension specific check at the moment\n\t\tvar cells = opts && opts.selected ?\n\t\t\tthis.cells(cellsNoOpts, opts) :\n\t\t\tcellsNoOpts;\n\n\t\t$.extend(cells.selector, {\n\t\t\tcols: columnSelector,\n\t\t\trows: rowSelector,\n\t\t\topts: opts\n\t\t});\n\n\t\treturn cells;\n\t});\n\n\n\t_api_registerPlural('cells().nodes()', 'cell().node()', function() {\n\t\treturn this.iterator('cell', function(settings, row, column) {\n\t\t\tvar data = settings.aoData[ row ];\n\n\t\t\treturn data && data.anCells ?\n\t\t\t\tdata.anCells[ column ] :\n\t\t\t\tundefined;\n\t\t}, 1);\n\t});\n\n\n\t_api_register('cells().data()', function() {\n\t\treturn this.iterator('cell', function(settings, row, column) {\n\t\t\treturn _fnGetCellData(settings, row, column);\n\t\t}, 1);\n\t});\n\n\n\t_api_registerPlural('cells().cache()', 'cell().cache()', function(type) {\n\t\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\n\n\t\treturn this.iterator('cell', function(settings, row, column) {\n\t\t\treturn settings.aoData[ row ][ type ][ column ];\n\t\t}, 1);\n\t});\n\n\n\t_api_registerPlural('cells().render()', 'cell().render()', function(type) {\n\t\treturn this.iterator('cell', function(settings, row, column) {\n\t\t\treturn _fnGetCellData(settings, row, column, type);\n\t\t}, 1);\n\t});\n\n\n\t_api_registerPlural('cells().indexes()', 'cell().index()', function() {\n\t\treturn this.iterator('cell', function(settings, row, column) {\n\t\t\treturn {\n\t\t\t\trow: row,\n\t\t\t\tcolumn: column,\n\t\t\t\tcolumnVisible: _fnColumnIndexToVisible(settings, column)\n\t\t\t};\n\t\t}, 1);\n\t});\n\n\n\t_api_registerPlural('cells().invalidate()', 'cell().invalidate()', function(src) {\n\t\treturn this.iterator('cell', function(settings, row, column) {\n\t\t\t_fnInvalidate(settings, row, src, column);\n\t\t});\n\t});\n\n\n\t_api_register('cell()', function(rowSelector, columnSelector, opts) {\n\t\treturn _selector_first(this.cells(rowSelector, columnSelector, opts));\n\t});\n\n\n\t_api_register('cell().data()', function(data) {\n\t\tvar ctx = this.context;\n\t\tvar cell = this[0];\n\n\t\tif (data === undefined) {\n\t\t\t// Get\n\t\t\treturn ctx.length && cell.length ?\n\t\t\t\t_fnGetCellData(ctx[0], cell[0].row, cell[0].column) :\n\t\t\t\tundefined;\n\t\t}\n\n\t\t// Set\n\t\t_fnSetCellData(ctx[0], cell[0].row, cell[0].column, data);\n\t\t_fnInvalidate(ctx[0], cell[0].row, 'data', cell[0].column);\n\n\t\treturn this;\n\t});\n\n\n\t/**\n\t * Get current ordering (sorting) that has been applied to the table.\n\t *\n\t * @returns {array} 2D array containing the sorting information for the first\n\t *   table in the current context. Each element in the parent array represents\n\t *   a column being sorted upon (i.e. multi-sorting with two columns would have\n\t *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n\t *   the column index that the sorting condition applies to, the second is the\n\t *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n\t *   index of the sorting order from the `column.sorting` initialisation array.\n\t *//**\n\t\t\t\t * Set the ordering for the table.\n\t\t\t\t *\n\t\t\t\t * @param {integer} order Column index to sort upon.\n\t\t\t\t * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n\t\t\t\t * @returns {DataTables.Api} this\n\t\t\t\t *//**\n\t\t\t\t\t\t\t * Set the ordering for the table.\n\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t * @param {array} order 1D array of sorting information to be applied.\n\t\t\t\t\t\t\t * @param {array} [...] Optional additional sorting conditions\n\t\t\t\t\t\t\t * @returns {DataTables.Api} this\n\t\t\t\t\t\t\t *//**\n\t\t\t\t\t\t\t\t\t\t * Set the ordering for the table.\n\t\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t\t * @param {array} order 2D array of sorting information to be applied.\n\t\t\t\t\t\t\t\t\t\t * @returns {DataTables.Api} this\n\t\t\t\t\t\t\t\t\t\t */\n\t_api_register('order()', function(order, dir) {\n\t\tvar ctx = this.context;\n\n\t\tif (order === undefined) {\n\t\t\t// Get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].aaSorting :\n\t\t\t\tundefined;\n\t\t}\n\n\t\t// Set\n\t\tif (typeof order === 'number') {\n\t\t\t// Simple column / direction passed in\n\t\t\torder = [[order, dir]];\n\t\t} else if (order.length && !Array.isArray(order[0])) {\n\t\t\t// Arguments passed in (list of 1D arrays)\n\t\t\torder = Array.prototype.slice.call(arguments);\n\t\t}\n\t\t// Otherwise a 2D array was passed in\n\n\t\treturn this.iterator('table', function(settings) {\n\t\t\tsettings.aaSorting = order.slice();\n\t\t});\n\t});\n\n\n\t/**\n\t * Attach a sort listener to an element for a given column\n\t *\n\t * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n\t *   listener to. This can take the form of a single DOM node, a jQuery\n\t *   collection of nodes or a jQuery selector which will identify the node(s).\n\t * @param {integer} column the column that a click on this node will sort on\n\t * @param {function} [callback] callback function when sort is run\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register('order.listener()', function(node, column, callback) {\n\t\treturn this.iterator('table', function(settings) {\n\t\t\t_fnSortAttachListener(settings, node, column, callback);\n\t\t});\n\t});\n\n\n\t_api_register('order.fixed()', function(set) {\n\t\tif (!set) {\n\t\t\tvar ctx = this.context;\n\t\t\tvar fixed = ctx.length ?\n\t\t\t\tctx[0].aaSortingFixed :\n\t\t\t\tundefined;\n\n\t\t\treturn Array.isArray(fixed) ?\n\t\t\t\t{pre: fixed} :\n\t\t\t\tfixed;\n\t\t}\n\n\t\treturn this.iterator('table', function(settings) {\n\t\t\tsettings.aaSortingFixed = $.extend(true, {}, set);\n\t\t});\n\t});\n\n\n\t// Order by the selected column(s)\n\t_api_register([\n\t\t'columns().order()',\n\t\t'column().order()'\n\t], function(dir) {\n\t\tvar that = this;\n\n\t\treturn this.iterator('table', function(settings, i) {\n\t\t\tvar sort = [];\n\n\t\t\t$.each(that[i], function(j, col) {\n\t\t\t\tsort.push([col, dir]);\n\t\t\t});\n\n\t\t\tsettings.aaSorting = sort;\n\t\t});\n\t});\n\n\n\t_api_register('search()', function(input, regex, smart, caseInsen) {\n\t\tvar ctx = this.context;\n\n\t\tif (input === undefined) {\n\t\t\t// Get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].oPreviousSearch.sSearch :\n\t\t\t\tundefined;\n\t\t}\n\n\t\t// Set\n\t\treturn this.iterator('table', function(settings) {\n\t\t\tif (!settings.oFeatures.bFilter) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_fnFilterComplete(settings, $.extend({}, settings.oPreviousSearch, {\n\t\t\t\t\"sSearch\": input + \"\",\n\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\"bSmart\":  smart === null ? true : smart,\n\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t}), 1);\n\t\t});\n\t});\n\n\n\t_api_registerPlural(\n\t\t'columns().search()',\n\t\t'column().search()',\n\t\tfunction(input, regex, smart, caseInsen) {\n\t\t\treturn this.iterator('column', function(settings, column) {\n\t\t\t\tvar preSearch = settings.aoPreSearchCols;\n\n\t\t\t\tif (input === undefined) {\n\t\t\t\t\t// Get\n\t\t\t\t\treturn preSearch[ column ].sSearch;\n\t\t\t\t}\n\n\t\t\t\t// Set\n\t\t\t\tif (!settings.oFeatures.bFilter) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$.extend(preSearch[ column ], {\n\t\t\t\t\t\"sSearch\": input + \"\",\n\t\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\t\"bSmart\":  smart === null ? true : smart,\n\t\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t\t});\n\n\t\t\t\t_fnFilterComplete(settings, settings.oPreviousSearch, 1);\n\t\t\t});\n\t\t}\n\t);\n\n\t/*\n\t * State API methods\n\t */\n\n\t_api_register('state()', function() {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oSavedState :\n\t\t\tnull;\n\t});\n\n\n\t_api_register('state.clear()', function() {\n\t\treturn this.iterator('table', function(settings) {\n\t\t\t// Save an empty object\n\t\t\tsettings.fnStateSaveCallback.call(settings.oInstance, settings, {});\n\t\t});\n\t});\n\n\n\t_api_register('state.loaded()', function() {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oLoadedState :\n\t\t\tnull;\n\t});\n\n\n\t_api_register('state.save()', function() {\n\t\treturn this.iterator('table', function(settings) {\n\t\t\t_fnSaveState(settings);\n\t\t});\n\t});\n\n\n\t/**\n\t * Provide a common method for plug-ins to check the version of DataTables being\n\t * used, in order to ensure compatibility.\n\t *\n\t *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n\t *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n\t *  @returns {boolean} true if this version of DataTables is greater or equal to\n\t *    the required version, or false if this version of DataTales is not\n\t *    suitable\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n\t */\n\tDataTable.versionCheck = DataTable.fnVersionCheck = function(version) {\n\t\tvar aThis = DataTable.version.split('.');\n\t\tvar aThat = version.split('.');\n\t\tvar iThis, iThat;\n\n\t\tfor (var i = 0, iLen = aThat.length; i < iLen; i++) {\n\t\t\tiThis = parseInt(aThis[i], 10) || 0;\n\t\t\tiThat = parseInt(aThat[i], 10) || 0;\n\n\t\t\t// Parts are the same, keep comparing\n\t\t\tif (iThis === iThat) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Parts are different, return immediately\n\t\t\treturn iThis > iThat;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\n\t/**\n\t * Check if a `<table>` node is a DataTable table already or not.\n\t *\n\t *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n\t *      selector for the table to test. Note that if more than more than one\n\t *      table is passed on, only the first will be checked\n\t *  @returns {boolean} true the table given is a DataTable, or false otherwise\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n\t *      $('#example').dataTable();\n\t *    }\n\t */\n\tDataTable.isDataTable = DataTable.fnIsDataTable = function(table) {\n\t\tvar t = $(table).get(0);\n\t\tvar is = false;\n\n\t\tif (table instanceof DataTable.Api) {\n\t\t\treturn true;\n\t\t}\n\n\t\t$.each(DataTable.settings, function(i, o) {\n\t\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n\t\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\n\t\t\tif (o.nTable === t || head === t || foot === t) {\n\t\t\t\tis = true;\n\t\t\t}\n\t\t});\n\n\t\treturn is;\n\t};\n\n\n\t/**\n\t * Get all DataTable tables that have been initialised - optionally you can\n\t * select to get only currently visible tables.\n\t *\n\t *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n\t *    or visible tables only.\n\t *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n\t *    DataTables\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    $.each( $.fn.dataTable.tables(true), function () {\n\t *      $(table).DataTable().columns.adjust();\n\t *    } );\n\t */\n\tDataTable.tables = DataTable.fnTables = function(visible) {\n\t\tvar api = false;\n\n\t\tif ($.isPlainObject(visible)) {\n\t\t\tapi = visible.api;\n\t\t\tvisible = visible.visible;\n\t\t}\n\n\t\tvar a = $.map(DataTable.settings, function(o) {\n\t\t\tif (!visible || (visible && $(o.nTable).is(':visible'))) {\n\t\t\t\treturn o.nTable;\n\t\t\t}\n\t\t});\n\n\t\treturn api ?\n\t\t\tnew _Api(a) :\n\t\t\ta;\n\t};\n\n\n\t/**\n\t * Convert from camel case parameters to Hungarian notation. This is made public\n\t * for the extensions to provide the same ability as DataTables core to accept\n\t * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n\t * parameters.\n\t *\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t */\n\tDataTable.camelToHungarian = _fnCamelToHungarian;\n\n\n\t/**\n\t *\n\t */\n\t_api_register('$()', function(selector, opts) {\n\t\tvar\n\t\t\trows = this.rows(opts).nodes(), // Get all rows\n\t\t\tjqRows = $(rows);\n\n\t\treturn $([].concat(\n\t\t\tjqRows.filter(selector).toArray(),\n\t\t\tjqRows.find(selector).toArray()\n\t\t));\n\t});\n\n\n\t// JQuery functions to operate on the tables\n\t$.each(['on', 'one', 'off'], function(i, key) {\n\t\t_api_register(key + '()', function(/* Event, handler */) {\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\n\t\t\t// Add the `dt` namespace automatically if it isn't already present\n\t\t\targs[0] = $.map(args[0].split(/\\s/), function(e) {\n\t\t\t\treturn !e.match(/\\.dt\\b/) ?\n\t\t\t\t\te + '.dt' :\n\t\t\t\t\te;\n\t\t\t\t}).join(' ');\n\n\t\t\tvar inst = $(this.tables().nodes());\n\t\t\tinst[key].apply(inst, args);\n\t\t\treturn this;\n\t\t});\n\t});\n\n\n\t_api_register('clear()', function() {\n\t\treturn this.iterator('table', function(settings) {\n\t\t\t_fnClearTable(settings);\n\t\t});\n\t});\n\n\n\t_api_register('settings()', function() {\n\t\treturn new _Api(this.context, this.context);\n\t});\n\n\n\t_api_register('init()', function() {\n\t\tvar ctx = this.context;\n\t\treturn ctx.length ? ctx[0].oInit : null;\n\t});\n\n\n\t_api_register('data()', function() {\n\t\treturn this.iterator('table', function(settings) {\n\t\t\treturn _pluck(settings.aoData, '_aData');\n\t\t}).flatten();\n\t});\n\n\n\t_api_register('destroy()', function(remove) {\n\t\tremove = remove || false;\n\n\t\treturn this.iterator('table', function(settings) {\n\t\t\tvar classes = settings.oClasses;\n\t\t\tvar table = settings.nTable;\n\t\t\tvar tbody = settings.nTBody;\n\t\t\tvar thead = settings.nTHead;\n\t\t\tvar tfoot = settings.nTFoot;\n\t\t\tvar jqTable = $(table);\n\t\t\tvar jqTbody = $(tbody);\n\t\t\tvar jqWrapper = $(settings.nTableWrapper);\n\t\t\tvar rows = $.map(settings.aoData, function(r) {\n return r.nTr;\n});\n\t\t\tvar i, ien;\n\n\t\t\t// Flag to note that the table is currently being destroyed - no action\n\t\t\t// should be taken\n\t\t\tsettings.bDestroying = true;\n\n\t\t\t// Fire off the destroy callbacks for plug-ins etc\n\t\t\t_fnCallbackFire(settings, \"aoDestroyCallback\", \"destroy\", [settings]);\n\n\t\t\t// If not being removed from the document, make all columns visible\n\t\t\tif (!remove) {\n\t\t\t\tnew _Api(settings).columns().visible(true);\n\t\t\t}\n\n\t\t\t// Blitz all `DT` namespaced events (these are internal events, the\n\t\t\t// lowercase, `dt` events are user subscribed and they are responsible\n\t\t\t// for removing them\n\t\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n\t\t\t$(window).off('.DT-' + settings.sInstance);\n\n\t\t\t// When scrolling we had to break the table up - restore it\n\t\t\tif (table != thead.parentNode) {\n\t\t\t\tjqTable.children('thead').detach();\n\t\t\t\tjqTable.append(thead);\n\t\t\t}\n\n\t\t\tif (tfoot && table != tfoot.parentNode) {\n\t\t\t\tjqTable.children('tfoot').detach();\n\t\t\t\tjqTable.append(tfoot);\n\t\t\t}\n\n\t\t\tsettings.aaSorting = [];\n\t\t\tsettings.aaSortingFixed = [];\n\t\t\t_fnSortingClasses(settings);\n\n\t\t\t$(rows).removeClass(settings.asStripeClasses.join(' '));\n\n\t\t\t$('th, td', thead).removeClass(classes.sSortable + ' ' +\n\t\t\t\tclasses.sSortableAsc + ' ' + classes.sSortableDesc + ' ' + classes.sSortableNone\n\t\t\t);\n\n\t\t\t// Add the TR elements back into the table in their original order\n\t\t\tjqTbody.children().detach();\n\t\t\tjqTbody.append(rows);\n\n\t\t\tvar orig = settings.nTableWrapper.parentNode;\n\n\t\t\t// Remove the DataTables generated nodes, events and classes\n\t\t\tvar removedMethod = remove ? 'remove' : 'detach';\n\t\t\tjqTable[ removedMethod ]();\n\t\t\tjqWrapper[ removedMethod ]();\n\n\t\t\t// If we need to reattach the table to the document\n\t\t\tif (!remove && orig) {\n\t\t\t\t// InsertBefore acts like appendChild if !arg[1]\n\t\t\t\torig.insertBefore(table, settings.nTableReinsertBefore);\n\n\t\t\t\t// Restore the width of the original table - was read from the style property,\n\t\t\t\t// so we can restore directly to that\n\t\t\t\tjqTable\n\t\t\t\t\t.css('width', settings.sDestroyWidth)\n\t\t\t\t\t.removeClass(classes.sTable);\n\n\t\t\t\t// If the were originally stripe classes - then we add them back here.\n\t\t\t\t// Note this is not fool proof (for example if not all rows had stripe\n\t\t\t\t// classes - but it's a good effort without getting carried away\n\t\t\t\tien = settings.asDestroyStripes.length;\n\n\t\t\t\tif (ien) {\n\t\t\t\t\tjqTbody.children().each(function(i) {\n\t\t\t\t\t\t$(this).addClass(settings.asDestroyStripes[i % ien]);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Remove the settings object from the settings array */\n\t\t\tvar idx = $.inArray(settings, DataTable.settings);\n\t\t\tif (idx !== -1) {\n\t\t\t\tDataTable.settings.splice(idx, 1);\n\t\t\t}\n\t\t});\n\t});\n\n\n\t// Add the `every()` method for rows, columns and cells in a compact form\n\t$.each(['column', 'row', 'cell'], function(i, type) {\n\t\t_api_register(type + 's().every()', function(fn) {\n\t\t\tvar opts = this.selector.opts;\n\t\t\tvar api = this;\n\n\t\t\treturn this.iterator(type, function(settings, arg1, arg2, arg3, arg4) {\n\t\t\t\t// Rows and columns:\n\t\t\t\t//  arg1 - index\n\t\t\t\t//  arg2 - table counter\n\t\t\t\t//  arg3 - loop counter\n\t\t\t\t//  arg4 - undefined\n\t\t\t\t// Cells:\n\t\t\t\t//  arg1 - row index\n\t\t\t\t//  arg2 - column index\n\t\t\t\t//  arg3 - table counter\n\t\t\t\t//  arg4 - loop counter\n\t\t\t\tfn.call(\n\t\t\t\t\tapi[ type ](\n\t\t\t\t\t\targ1,\n\t\t\t\t\t\ttype === 'cell' ? arg2 : opts,\n\t\t\t\t\t\ttype === 'cell' ? opts : undefined\n\t\t\t\t\t),\n\t\t\t\t\targ1, arg2, arg3, arg4\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t});\n\n\n\t// I18n method for extensions to be able to use the language object from the\n\t// DataTable\n\t_api_register('i18n()', function(token, def, plural) {\n\t\tvar ctx = this.context[0];\n\t\tvar resolved = _fnGetObjectDataFn(token)(ctx.oLanguage);\n\n\t\tif (resolved === undefined) {\n\t\t\tresolved = def;\n\t\t}\n\n\t\tif (plural !== undefined && $.isPlainObject(resolved)) {\n\t\t\tresolved = resolved[ plural ] !== undefined ?\n\t\t\t\tresolved[ plural ] :\n\t\t\t\tresolved._;\n\t\t}\n\n\t\treturn resolved.replace('%d', plural); // Nb: plural might be undefined,\n\t});\n\t/**\n\t * Version string for plug-ins to check compatibility. Allowed format is\n\t * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n\t * only for non-release builds. See http://semver.org/ for more information.\n\t *  @member\n\t *  @type string\n\t *  @default Version number\n\t */\n\tDataTable.version = \"1.12.1\";\n\n\t/**\n\t * Private data store, containing all of the settings objects that are\n\t * created for the tables on a given page.\n\t *\n\t * Note that the `DataTable.settings` object is aliased to\n\t * `jQuery.fn.dataTableExt` through which it may be accessed and\n\t * manipulated, or `jQuery.fn.dataTable.settings`.\n\t *  @member\n\t *  @type array\n\t *  @default []\n\t *  @private\n\t */\n\tDataTable.settings = [];\n\n\t/**\n\t * Object models container, for the various models that DataTables has\n\t * available to it. These models define the objects that are used to hold\n\t * the active state and configuration of the table.\n\t *  @namespace\n\t */\n\tDataTable.models = {};\n\n\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * search information for the global filter and individual column filters.\n\t *  @namespace\n\t */\n\tDataTable.models.oSearch = {\n\t\t/**\n\t\t * Flag to indicate if the filtering should be case insensitive or not\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bCaseInsensitive\": true,\n\n\t\t/**\n\t\t * Applied search term\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sSearch\": \"\",\n\n\t\t/**\n\t\t * Flag to indicate if the search term should be interpreted as a\n\t\t * regular expression (true) or not (false) and therefore and special\n\t\t * regex characters escaped.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bRegex\": false,\n\n\t\t/**\n\t\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bSmart\": true,\n\n\t\t/**\n\t\t * Flag to indicate if DataTables should only trigger a search when\n\t\t * the return key is pressed.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"return\": false\n\t};\n\n\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * each individual row. This is the object format used for the settings\n\t * aoData array.\n\t *  @namespace\n\t */\n\tDataTable.models.oRow = {\n\t\t/**\n\t\t * TR element for the row\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTr\": null,\n\n\t\t/**\n\t\t * Array of TD elements for each row. This is null until the row has been\n\t\t * created.\n\t\t *  @type array nodes\n\t\t *  @default []\n\t\t */\n\t\t\"anCells\": null,\n\n\t\t/**\n\t\t * Data object from the original data source for the row. This is either\n\t\t * an array if using the traditional form of DataTables, or an object if\n\t\t * using mData options. The exact type will depend on the passed in\n\t\t * data from the data source, or will be an array if using DOM a data\n\t\t * source.\n\t\t *  @type array|object\n\t\t *  @default []\n\t\t */\n\t\t\"_aData\": [],\n\n\t\t/**\n\t\t * Sorting data cache - this array is ostensibly the same length as the\n\t\t * number of columns (although each index is generated only as it is\n\t\t * needed), and holds the data that is used for sorting each column in the\n\t\t * row. We do this cache generation at the start of the sort in order that\n\t\t * the formatting of the sort data need be done only once for each cell\n\t\t * per sort. This array should not be read from or written to by anything\n\t\t * other than the master sorting methods.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_aSortData\": null,\n\n\t\t/**\n\t\t * Per cell filtering data cache. As per the sort data cache, used to\n\t\t * increase the performance of the filtering in DataTables\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_aFilterData\": null,\n\n\t\t/**\n\t\t * Filtering data cache. This is the same as the cell filtering cache, but\n\t\t * in this case a string rather than an array. This is easily computed with\n\t\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\n\t\t * needed on every search (memory traded for performance)\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_sFilterRow\": null,\n\n\t\t/**\n\t\t * Cache of the class name that DataTables has applied to the row, so we\n\t\t * can quickly look at this variable rather than needing to do a DOM check\n\t\t * on className for the nTr property.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *  @private\n\t\t */\n\t\t\"_sRowStripe\": \"\",\n\n\t\t/**\n\t\t * Denote if the original data source was from the DOM, or the data source\n\t\t * object. This is used for invalidating data, so DataTables can\n\t\t * automatically read data from the original source, unless uninstructed\n\t\t * otherwise.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"src\": null,\n\n\t\t/**\n\t\t * Index in the aoData array. This saves an indexOf lookup when we have the\n\t\t * object, but want to know the index\n\t\t *  @type integer\n\t\t *  @default -1\n\t\t *  @private\n\t\t */\n\t\t\"idx\": -1\n\t};\n\n\n\t/**\n\t * Template object for the column information object in DataTables. This object\n\t * is held in the settings aoColumns array and contains all the information that\n\t * DataTables needs about each individual column.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults.column}\n\t * but this one is the internal data store for DataTables's cache of columns.\n\t * It should NOT be manipulated outside of DataTables. Any configuration should\n\t * be done through the initialisation options.\n\t *  @namespace\n\t */\n\tDataTable.models.oColumn = {\n\t\t/**\n\t\t * Column index. This could be worked out on-the-fly with $.inArray, but it\n\t\t * is faster to just hold it as a variable\n\t\t *  @type integer\n\t\t *  @default null\n\t\t */\n\t\t\"idx\": null,\n\n\t\t/**\n\t\t * A list of the columns that sorting should occur on when this column\n\t\t * is sorted. That this property is an array allows multi-column sorting\n\t\t * to be defined for a column (for example first name / last name columns\n\t\t * would benefit from this). The values are integers pointing to the\n\t\t * columns to be sorted on (typically it will be a single integer pointing\n\t\t * at itself, but that doesn't need to be the case).\n\t\t *  @type array\n\t\t */\n\t\t\"aDataSort\": null,\n\n\t\t/**\n\t\t * Define the sorting directions that are applied to the column, in sequence\n\t\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t\t * as the sorting direction when the column if first sorted (clicked on).\n\t\t * Sort it again (click again) and it will move on to the next index.\n\t\t * Repeat until loop.\n\t\t *  @type array\n\t\t */\n\t\t\"asSorting\": null,\n\n\t\t/**\n\t\t * Flag to indicate if the column is searchable, and thus should be included\n\t\t * in the filtering or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSearchable\": null,\n\n\t\t/**\n\t\t * Flag to indicate if the column is sortable or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortable\": null,\n\n\t\t/**\n\t\t * Flag to indicate if the column is currently visible in the table or not\n\t\t *  @type boolean\n\t\t */\n\t\t\"bVisible\": null,\n\n\t\t/**\n\t\t * Store for manual type assignment using the `column.type` option. This\n\t\t * is held in store so we can manipulate the column's `sType` property.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_sManualType\": null,\n\n\t\t/**\n\t\t * Flag to indicate if HTML5 data attributes should be used as the data\n\t\t * source for filtering or sorting. True is either are.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @private\n\t\t */\n\t\t\"_bAttrSrc\": false,\n\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} nTd The TD node that has been created\n\t\t *  @param {*} sData The Data for the cell\n\t\t *  @param {array|object} oData The data for the whole row\n\t\t *  @param {int} iRow The row index for the aoData data store\n\t\t *  @default null\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\n\t\t/**\n\t\t * Function to get data from a cell in a column. You should <b>never</b>\n\t\t * access data directly through _aData internally in DataTables - always use\n\t\t * the method attached to this property. It allows mData to function as\n\t\t * required. This function is automatically assigned by the column\n\t\t * initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array\n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {string} sSpecific The specific data type you want to get -\n\t\t *    'display', 'type' 'filter' 'sort'\n\t\t *  @returns {*} The data for the cell from the given row's data\n\t\t *  @default null\n\t\t */\n\t\t\"fnGetData\": null,\n\n\t\t/**\n\t\t * Function to set data for a cell in the column. You should <b>never</b>\n\t\t * set the data directly to _aData internally in DataTables - always use\n\t\t * this method. It allows mData to function as required. This function\n\t\t * is automatically assigned by the column initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array\n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {*} sValue Value to set\n\t\t *  @default null\n\t\t */\n\t\t\"fnSetData\": null,\n\n\t\t/**\n\t\t * Property to read the value for the cells in the column from the data\n\t\t * source array / object. If null, then the default content is used, if a\n\t\t * function is given then the return from the function is used.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mData\": null,\n\n\t\t/**\n\t\t * Partner property to mData which is used (only when defined) to get\n\t\t * the data - i.e. it is basically the same as mData, but without the\n\t\t * 'set' option, and also the data fed to it is the result from mData.\n\t\t * This is the rendering method to match the data method of mData.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mRender\": null,\n\n\t\t/**\n\t\t * Unique header TH/TD element for this column - this is what the sorting\n\t\t * listener is attached to (if sorting is enabled.)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTh\": null,\n\n\t\t/**\n\t\t * Unique footer TH/TD element for this column (if there is one). Not used\n\t\t * in DataTables as such, but can be used for plug-ins to reference the\n\t\t * footer for each column.\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTf\": null,\n\n\t\t/**\n\t\t * The class to apply to all TD elements in the table's TBODY for the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sClass\": null,\n\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t *  @type string\n\t\t */\n\t\t\"sContentPadding\": null,\n\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because mData\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDefaultContent\": null,\n\n\t\t/**\n\t\t * Name for the column, allowing reference to the column by name as well as\n\t\t * by index (needs a lookup to work by name).\n\t\t *  @type string\n\t\t */\n\t\t\"sName\": null,\n\n\t\t/**\n\t\t * Custom sorting data type - defines which of the available plug-ins in\n\t\t * afnSortData the custom sorting will use - if any is defined.\n\t\t *  @type string\n\t\t *  @default std\n\t\t */\n\t\t\"sSortDataType\": 'std',\n\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClass\": null,\n\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column -\n\t\t * when jQuery UI theming is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClassJUI\": null,\n\n\t\t/**\n\t\t * Title of the column - what is seen in the TH element (nTh).\n\t\t *  @type string\n\t\t */\n\t\t\"sTitle\": null,\n\n\t\t/**\n\t\t * Column sorting and filtering type\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sType\": null,\n\n\t\t/**\n\t\t * Width of the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidth\": null,\n\n\t\t/**\n\t\t * Width of the column when it was first \"encountered\"\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidthOrig\": null\n\t};\n\n\n\t/*\n\t * Developer note: The properties of the object below are given in Hungarian\n\t * notation, that was used as the interface for DataTables prior to v1.10, however\n\t * from v1.10 onwards the primary interface is camel case. In order to avoid\n\t * breaking backwards compatibility utterly with this change, the Hungarian\n\t * version is still, internally the primary interface, but is is not documented\n\t * - hence the @name tags in each doc comment. This allows a Javascript function\n\t * to create a map from Hungarian notation to camel case (going the other direction\n\t * would require each property to be listed, which would add around 3K to the size\n\t * of DataTables, while this method is about a 0.5K hit).\n\t *\n\t * Ultimately this does pave the way for Hungarian notation to be dropped\n\t * completely, but that is a massive amount of work and will break current\n\t * installs (therefore is on-hold until v2).\n\t */\n\n\t/**\n\t * Initialisation options that can be given to DataTables at initialisation\n\t * time.\n\t *  @namespace\n\t */\n\tDataTable.defaults = {\n\t\t/**\n\t\t * An array of data to use for the table, passed in at initialisation which\n\t\t * will be used in preference to any data which is already in the DOM. This is\n\t\t * particularly useful for constructing tables purely in Javascript, for\n\t\t * example with a custom Ajax call.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.data\n\t\t *\n\t\t *  @example\n\t\t *    // Using a 2D array data source\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n\t\t *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\" },\n\t\t *          { \"title\": \"Browser\" },\n\t\t *          { \"title\": \"Platform\" },\n\t\t *          { \"title\": \"Version\" },\n\t\t *          { \"title\": \"Grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using an array of objects as a data source (`data`)\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 4.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  4,\n\t\t *            \"grade\":    \"X\"\n\t\t *          },\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 5.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  5,\n\t\t *            \"grade\":    \"C\"\n\t\t *          }\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\",   \"data\": \"engine\" },\n\t\t *          { \"title\": \"Browser\",  \"data\": \"browser\" },\n\t\t *          { \"title\": \"Platform\", \"data\": \"platform\" },\n\t\t *          { \"title\": \"Version\",  \"data\": \"version\" },\n\t\t *          { \"title\": \"Grade\",    \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaData\": null,\n\n\n\t\t/**\n\t\t * If ordering is enabled, then DataTables will perform a first pass sort on\n\t\t * initialisation. You can define which column(s) the sort is performed\n\t\t * upon, and the sorting direction, with this variable. The `sorting` array\n\t\t * should contain an array for each column to be sorted initially containing\n\t\t * the column's index and a direction string ('asc' or 'desc').\n\t\t *  @type array\n\t\t *  @default [[0,'asc']]\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.order\n\t\t *\n\t\t *  @example\n\t\t *    // Sort by 3rd column first, and then 4th column\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": [[2,'asc'], [3,'desc']]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *    // No initial sorting\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": []\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaSorting\": [[0, 'asc']],\n\n\n\t\t/**\n\t\t * This parameter is basically identical to the `sorting` parameter, but\n\t\t * cannot be overridden by user interaction with the table. What this means\n\t\t * is that you could have a column (visible or hidden) which the sorting\n\t\t * will always be forced on first - any sorting after that (from the user)\n\t\t * will then be performed as required. This can be useful for grouping rows\n\t\t * together.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.orderFixed\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderFixed\": [[0,'asc']]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\n\n\t\t/**\n\t\t * DataTables can be instructed to load data to display in the table from a\n\t\t * Ajax source. This option defines how that Ajax call is made and where to.\n\t\t *\n\t\t * The `ajax` property has three different modes of operation, depending on\n\t\t * how it is defined. These are:\n\t\t *\n\t\t * * `string` - Set the URL from where the data should be loaded from.\n\t\t * * `object` - Define properties for `jQuery.ajax`.\n\t\t * * `function` - Custom data get function\n\t\t *\n\t\t * `string`\n\t\t * --------\n\t\t *\n\t\t * As a string, the `ajax` property simply defines the URL from which\n\t\t * DataTables will load data.\n\t\t *\n\t\t * `object`\n\t\t * --------\n\t\t *\n\t\t * As an object, the parameters in the object are passed to\n\t\t * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\n\t\t * of the Ajax request. DataTables has a number of default parameters which\n\t\t * you can override using this option. Please refer to the jQuery\n\t\t * documentation for a full description of the options available, although\n\t\t * the following parameters provide additional options in DataTables or\n\t\t * require special consideration:\n\t\t *\n\t\t * * `data` - As with jQuery, `data` can be provided as an object, but it\n\t\t *   can also be used as a function to manipulate the data DataTables sends\n\t\t *   to the server. The function takes a single parameter, an object of\n\t\t *   parameters with the values that DataTables has readied for sending. An\n\t\t *   object may be returned which will be merged into the DataTables\n\t\t *   defaults, or you can add the items to the object that was passed in and\n\t\t *   not return anything from the function. This supersedes `fnServerParams`\n\t\t *   from DataTables 1.9-.\n\t\t *\n\t\t * * `dataSrc` - By default DataTables will look for the property `data` (or\n\t\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n\t\t *   from an Ajax source or for server-side processing - this parameter\n\t\t *   allows that property to be changed. You can use Javascript dotted\n\t\t *   object notation to get a data source for multiple levels of nesting, or\n\t\t *   it my be used as a function. As a function it takes a single parameter,\n\t\t *   the JSON returned from the server, which can be manipulated as\n\t\t *   required, with the returned value being that used by DataTables as the\n\t\t *   data source for the table. This supersedes `sAjaxDataProp` from\n\t\t *   DataTables 1.9-.\n\t\t *\n\t\t * * `success` - Should not be overridden it is used internally in\n\t\t *   DataTables. To manipulate / transform the data returned by the server\n\t\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n\t\t *\n\t\t * `function`\n\t\t * ----------\n\t\t *\n\t\t * As a function, making the Ajax call is left up to yourself allowing\n\t\t * complete control of the Ajax request. Indeed, if desired, a method other\n\t\t * than Ajax could be used to obtain the required data, such as Web storage\n\t\t * or an AIR database.\n\t\t *\n\t\t * The function is given four parameters and no return is required. The\n\t\t * parameters are:\n\t\t *\n\t\t * 1. _object_ - Data to send to the server\n\t\t * 2. _function_ - Callback function that must be executed when the required\n\t\t *    data has been obtained. That data should be passed into the callback\n\t\t *    as the only parameter\n\t\t * 3. _object_ - DataTables settings object for the table\n\t\t *\n\t\t * Note that this supersedes `fnServerData` from DataTables 1.9-.\n\t\t *\n\t\t *  @type string|object|function\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.ajax\n\t\t *  @since 1.10.0\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax.\n\t\t *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": \"data.json\"\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to change\n\t\t *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"tableData\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\n\t\t *   // from a plain array rather than an array in an object\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Manipulate the data returned from the server - add a link to data\n\t\t *   // (note this can, should, be done using `render` for the column - this\n\t\t *   // is just a simple example of how the data can be manipulated).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": function ( json ) {\n\t\t *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\n\t\t *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\n\t\t *         }\n\t\t *         return json;\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Add data to the request\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"data\": function ( d ) {\n\t\t *         return {\n\t\t *           \"extra_search\": $('#extra').val()\n\t\t *         };\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Send request as POST\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"type\": \"POST\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get the data from localStorage (could interface with a form for\n\t\t *   // adding, editing and removing rows).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": function (data, callback, settings) {\n\t\t *       callback(\n\t\t *         JSON.parse( localStorage.getItem('dataTablesData') )\n\t\t *       );\n\t\t *     }\n\t\t *   } );\n\t\t */\n\t\t\"ajax\": null,\n\n\n\t\t/**\n\t\t * This parameter allows you to readily specify the entries in the length drop\n\t\t * down menu that DataTables shows when pagination is enabled. It can be\n\t\t * either a 1D array of options which will be used for both the displayed\n\t\t * option and the value, or a 2D array which will use the array in the first\n\t\t * position as the value, and the array in the second position as the\n\t\t * displayed options (useful for language strings such as 'All').\n\t\t *\n\t\t * Note that the `pageLength` property will be automatically set to the\n\t\t * first value given in this array, unless `pageLength` is also provided.\n\t\t *  @type array\n\t\t *  @default [ 10, 25, 50, 100 ]\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.lengthMenu\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aLengthMenu\": [10, 25, 50, 100],\n\n\n\t\t/**\n\t\t * The `columns` option in the initialisation parameter allows you to define\n\t\t * details about the way individual columns behave. For a full list of\n\t\t * column options that can be set, please see\n\t\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\n\t\t * define your columns, you must have an entry in the array for every single\n\t\t * column that you have in your table (these can be null if you don't which\n\t\t * to specify any options).\n\t\t *  @member\n\t\t *\n\t\t *  @name DataTable.defaults.column\n\t\t */\n\t\t\"aoColumns\": null,\n\n\t\t/**\n\t\t * Very similar to `columns`, `columnDefs` allows you to target a specific\n\t\t * column, multiple columns, or all columns, using the `targets` property of\n\t\t * each object in the array. This allows great flexibility when creating\n\t\t * tables, as the `columnDefs` arrays can be of any length, targeting the\n\t\t * columns you specifically want. `columnDefs` may use any of the column\n\t\t * options available: {@link DataTable.defaults.column}, but it _must_\n\t\t * have `targets` defined in each object in the array. Values in the `targets`\n\t\t * array may be:\n\t\t *   <ul>\n\t\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t\t *     <li>a negative integer - column index counting from the right</li>\n\t\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t\t *   </ul>\n\t\t *  @member\n\t\t *\n\t\t *  @name DataTable.defaults.columnDefs\n\t\t */\n\t\t\"aoColumnDefs\": null,\n\n\n\t\t/**\n\t\t * Basically the same as `search`, this parameter defines the individual column\n\t\t * filtering state at initialisation time. The array must be of the same size\n\t\t * as the number of columns, and each element be an object with the parameters\n\t\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\n\t\t * accepted and the default will be used.\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.searchCols\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchCols\": [\n\t\t *          null,\n\t\t *          { \"search\": \"My filter\" },\n\t\t *          null,\n\t\t *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aoSearchCols\": [],\n\n\n\t\t/**\n\t\t * An array of CSS classes that should be applied to displayed rows. This\n\t\t * array may be of any length, and DataTables will apply each class\n\t\t * sequentially, looping when required.\n\t\t *  @type array\n\t\t *  @default null <i>Will take the values determined by the `oClasses.stripe*`\n\t\t *    options</i>\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.stripeClasses\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"asStripeClasses\": null,\n\n\n\t\t/**\n\t\t * Enable or disable automatic column width calculation. This can be disabled\n\t\t * as an optimisation (it takes some time to calculate the widths) if the\n\t\t * tables widths are passed in using `columns`.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.autoWidth\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"autoWidth\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bAutoWidth\": true,\n\n\n\t\t/**\n\t\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t\t * are using an Ajax or JS data source for the table. This option, when set to\n\t\t * true, will cause DataTables to defer the creation of the table elements for\n\t\t * each row until they are needed for a draw - saving a significant amount of\n\t\t * time.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.deferRender\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajax\": \"sources/arrays.txt\",\n\t\t *        \"deferRender\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDeferRender\": false,\n\n\n\t\t/**\n\t\t * Replace a DataTable which matches the given selector and replace it with\n\t\t * one which has the properties of the new initialisation object passed. If no\n\t\t * table matches the selector, then the new DataTable will be constructed as\n\t\t * per normal.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.destroy\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"srollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      // Some time later....\n\t\t *      $('#example').dataTable( {\n\t\t *        \"filter\": false,\n\t\t *        \"destroy\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDestroy\": false,\n\n\n\t\t/**\n\t\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t\t * that it allows the end user to input multiple words (space separated) and\n\t\t * will match a row containing those words, even if not in the order that was\n\t\t * specified (this allow matching across multiple columns). Note that if you\n\t\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t\t * default filtering input box and retain filtering abilities, please use\n\t\t * {@link DataTable.defaults.dom}.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.searching\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searching\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bFilter\": true,\n\n\n\t\t/**\n\t\t * Enable or disable the table information display. This shows information\n\t\t * about the data that is currently visible on the page, including information\n\t\t * about filtered data if that action is being performed.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.info\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"info\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bInfo\": true,\n\n\n\t\t/**\n\t\t * Allows the end user to select the size of a formatted page from a select\n\t\t * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.lengthChange\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthChange\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bLengthChange\": true,\n\n\n\t\t/**\n\t\t * Enable or disable pagination.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.paging\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"paging\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bPaginate\": true,\n\n\n\t\t/**\n\t\t * Enable or disable the display of a 'processing' indicator when the table is\n\t\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t\t * large amounts of data where it can take a noticeable amount of time to sort\n\t\t * the entries.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.processing\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"processing\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bProcessing\": false,\n\n\n\t\t/**\n\t\t * Retrieve the DataTables object for the given selector. Note that if the\n\t\t * table has already been initialised, this parameter will cause DataTables\n\t\t * to simply return the object that has already been set up - it will not take\n\t\t * account of any changes you might have made to the initialisation object\n\t\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t\t * that you understand this). `destroy` can be used to reinitialise a table if\n\t\t * you need.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.retrieve\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      initTable();\n\t\t *      tableActions();\n\t\t *    } );\n\t\t *\n\t\t *    function initTable ()\n\t\t *    {\n\t\t *      return $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false,\n\t\t *        \"retrieve\": true\n\t\t *      } );\n\t\t *    }\n\t\t *\n\t\t *    function tableActions ()\n\t\t *    {\n\t\t *      var table = initTable();\n\t\t *      // perform API operations with oTable\n\t\t *    }\n\t\t */\n\t\t\"bRetrieve\": false,\n\n\n\t\t/**\n\t\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t\t * the table's viewport to the given height at all times (useful for layout).\n\t\t * However, this can look odd when filtering data down to a small data set,\n\t\t * and the footer is left \"floating\" further down. This parameter (when\n\t\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t\t * the result set will fit within the given Y height.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.scrollCollapse\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200\",\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bScrollCollapse\": false,\n\n\n\t\t/**\n\t\t * Configure DataTables to use server-side processing. Note that the\n\t\t * `ajax` parameter must also be given in order to give DataTables a\n\t\t * source to obtain the required data for each draw.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverSide\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"xhr.php\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bServerSide\": false,\n\n\n\t\t/**\n\t\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t\t * disabled by the `sortable` option for each column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.ordering\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ordering\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSort\": true,\n\n\n\t\t/**\n\t\t * Enable or display DataTables' ability to sort multiple columns at the\n\t\t * same time (activated by shift-click by the user).\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.orderMulti\n\t\t *\n\t\t *  @example\n\t\t *    // Disable multiple column sorting ability\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderMulti\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortMulti\": true,\n\n\n\t\t/**\n\t\t * Allows control over whether DataTables should use the top (true) unique\n\t\t * cell that is found for a single column, or the bottom (false - default).\n\t\t * This is useful when using complex headers.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.orderCellsTop\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderCellsTop\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortCellsTop\": false,\n\n\n\t\t/**\n\t\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n\t\t * `sorting\\_3` to the columns which are currently being sorted on. This is\n\t\t * presented as a feature switch as it can increase processing time (while\n\t\t * classes are removed and added) so for large data sets you might want to\n\t\t * turn this off.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.orderClasses\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderClasses\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortClasses\": true,\n\n\n\t\t/**\n\t\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n\t\t * used to save table display information such as pagination information,\n\t\t * display length, filtering and sorting. As such when the end user reloads\n\t\t * the page the display display will match what thy had previously set up.\n\t\t *\n\t\t * Due to the use of `localStorage` the default state saving is not supported\n\t\t * in IE6 or 7. If state saving is required in those browsers, use\n\t\t * `stateSaveCallback` to provide a storage solution such as cookies.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.stateSave\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bStateSave\": false,\n\n\n\t\t/**\n\t\t * This function is called when a TR element is created (and all TD child\n\t\t * elements have been inserted), or registered if using a DOM source, allowing\n\t\t * manipulation of the TR element (adding classes etc).\n\t\t *  @type function\n\t\t *  @param {node} row \"TR\" element for the current row\n\t\t *  @param {array} data Raw data array for this row\n\t\t *  @param {int} dataIndex The index of this row in the internal aoData array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.createdRow\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"createdRow\": function( row, data, dataIndex ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" )\n\t\t *          {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedRow\": null,\n\n\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify any aspect you want about the created DOM.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.drawCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"drawCallback\": function( settings ) {\n\t\t *          alert( 'DataTables has redrawn the table' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnDrawCallback\": null,\n\n\n\t\t/**\n\t\t * Identical to fnHeaderCallback() but for the table footer this function\n\t\t * allows you to modify the table footer on every 'draw' event.\n\t\t *  @type function\n\t\t *  @param {node} foot \"TR\" element for the footer\n\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t *  @param {int} start Index for the current display starting point in the\n\t\t *    display array\n\t\t *  @param {int} end Index for the current display ending point in the\n\t\t *    display array\n\t\t *  @param {array int} display Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.footerCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"footerCallback\": function( tfoot, data, start, end, display ) {\n\t\t *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnFooterCallback\": null,\n\n\n\t\t/**\n\t\t * When rendering large numbers in the information element for the table\n\t\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t\t * function will override the default method DataTables uses.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {int} toFormat number to be formatted\n\t\t *  @returns {string} formatted string for DataTables to show the number\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.formatNumber\n\t\t *\n\t\t *  @example\n\t\t *    // Format a number using a single quote for the separator (note that\n\t\t *    // this can also be done with the language.thousands option)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"formatNumber\": function ( toFormat ) {\n\t\t *          return toFormat.toString().replace(\n\t\t *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\n\t\t *          );\n\t\t *        };\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnFormatNumber\": function(toFormat) {\n\t\t\treturn toFormat.toString().replace(\n\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\n\t\t\t\tthis.oLanguage.sThousands\n\t\t\t);\n\t\t},\n\n\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify the header row. This can be used to calculate and\n\t\t * display useful information about the table.\n\t\t *  @type function\n\t\t *  @param {node} head \"TR\" element for the header\n\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t *  @param {int} start Index for the current display starting point in the\n\t\t *    display array\n\t\t *  @param {int} end Index for the current display ending point in the\n\t\t *    display array\n\t\t *  @param {array int} display Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.headerCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"fheaderCallback\": function( head, data, start, end, display ) {\n\t\t *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnHeaderCallback\": null,\n\n\n\t\t/**\n\t\t * The information element can be used to convey information about the current\n\t\t * state of the table. Although the internationalisation options presented by\n\t\t * DataTables are quite capable of dealing with most customisations, there may\n\t\t * be times where you wish to customise the string further. This callback\n\t\t * allows you to do exactly that.\n\t\t *  @type function\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @param {int} start Starting position in data for the draw\n\t\t *  @param {int} end End position in data for the draw\n\t\t *  @param {int} max Total number of rows in the table (regardless of\n\t\t *    filtering)\n\t\t *  @param {int} total Total number of rows in the data set, after filtering\n\t\t *  @param {string} pre The string that DataTables has formatted using it's\n\t\t *    own rules\n\t\t *  @returns {string} The string to be displayed in the information element.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.infoCallback\n\t\t *\n\t\t *  @example\n\t\t *    $('#example').dataTable( {\n\t\t *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\n\t\t *        return start +\" to \"+ end;\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\t\"fnInfoCallback\": null,\n\n\n\t\t/**\n\t\t * Called when the table has been initialised. Normally DataTables will\n\t\t * initialise sequentially and there will be no need for this function,\n\t\t * however, this does not hold true when using external language information\n\t\t * since that is obtained using an async XHR call.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} json The JSON object request from the server - only\n\t\t *    present if client-side Ajax sourced data is used\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.initComplete\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"initComplete\": function(settings, json) {\n\t\t *          alert( 'DataTables has finished its initialisation.' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnInitComplete\": null,\n\n\n\t\t/**\n\t\t * Called at the very start of each table draw and can be used to cancel the\n\t\t * draw by returning false, any other return (including undefined) results in\n\t\t * the full draw occurring).\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @returns {boolean} False will cancel the draw, anything else (including no\n\t\t *    return) will allow it to complete.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.preDrawCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"preDrawCallback\": function( settings ) {\n\t\t *          if ( $('#test').val() == 1 ) {\n\t\t *            return false;\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnPreDrawCallback\": null,\n\n\n\t\t/**\n\t\t * This function allows you to 'post process' each row after it have been\n\t\t * generated for each table draw, but before it is rendered on screen. This\n\t\t * function might be used for setting the row class name etc.\n\t\t *  @type function\n\t\t *  @param {node} row \"TR\" element for the current row\n\t\t *  @param {array} data Raw data array for this row\n\t\t *  @param {int} displayIndex The display index for the current table draw\n\t\t *  @param {int} displayIndexFull The index of the data in the full list of\n\t\t *    rows (after filtering)\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.rowCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" ) {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnRowCallback\": null,\n\n\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * This parameter allows you to override the default function which obtains\n\t\t * the data from the server so something more suitable for your application.\n\t\t * For example you could use POST data, or pull information from a Gears or\n\t\t * AIR database.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {string} source HTTP source to obtain the data from (`ajax`)\n\t\t *  @param {array} data A key/value pair object containing the data to send\n\t\t *    to the server\n\t\t *  @param {function} callback to be called on completion of the data get\n\t\t *    process that will draw the data on the page.\n\t\t *  @param {object} settings DataTables settings object\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverData\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"fnServerData\": null,\n\n\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t *  It is often useful to send extra data to the server when making an Ajax\n\t\t * request - for example custom filtering information, and this callback\n\t\t * function makes it trivial to send extra information to the server. The\n\t\t * passed in parameter is the data set that has been constructed by\n\t\t * DataTables, and you can add to this or modify it as you require.\n\t\t *  @type function\n\t\t *  @param {array} data Data array (array of objects which are name/value\n\t\t *    pairs) that has been constructed by DataTables and will be sent to the\n\t\t *    server. In the case of Ajax sourced data with server-side processing\n\t\t *    this will be an empty array, for server-side processing there will be a\n\t\t *    significant number of parameters!\n\t\t *  @returns {undefined} Ensure that you modify the data array passed in,\n\t\t *    as this is passed by reference.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverParams\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"fnServerParams\": null,\n\n\n\t\t/**\n\t\t * Load the table state. With this function you can define from where, and how, the\n\t\t * state of a table is loaded. By default DataTables will load from `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} callback Callback that can be executed when done. It\n\t\t *    should be passed the loaded state object.\n\t\t *  @return {object} The DataTables state object to be loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoadCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadCallback\": function (settings, callback) {\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_load\",\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"success\": function (json) {\n\t\t *              callback( json );\n\t\t *            }\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoadCallback\": function(settings) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(\n\t\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n\t\t\t\t\t\t'DataTables_' + settings.sInstance + '_' + location.pathname\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} catch (e) {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Callback which allows modification of the saved state prior to loading that state.\n\t\t * This callback is called when the table is loading state from the stored data, but\n\t\t * prior to the settings object being modified by the saved state. Note that for\n\t\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n\t\t * a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object that is to be loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoadParams\n\t\t *\n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never loaded\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Disallow state loading by returning false\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          return false;\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoadParams\": null,\n\n\n\t\t/**\n\t\t * Callback that is called when the state has been loaded from the state saving method\n\t\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object that was loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoaded\n\t\t *\n\t\t *  @example\n\t\t *    // Show an alert with the filtering value that was saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoaded\": function (settings, data) {\n\t\t *          alert( 'Saved filter was: '+data.oSearch.sSearch );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoaded\": null,\n\n\n\t\t/**\n\t\t * Save the table state. This function allows you to define where and how the state\n\t\t * information for the table is stored By default DataTables will use `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object to be saved\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateSaveCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveCallback\": function (settings, data) {\n\t\t *          // Send an Ajax request to the server with the state object\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_save\",\n\t\t *            \"data\": data,\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"method\": \"POST\"\n\t\t *            \"success\": function () {}\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSaveCallback\": function(settings, data) {\n\t\t\ttry {\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n\t\t\t\t\t'DataTables_' + settings.sInstance + '_' + location.pathname,\n\t\t\t\t\tJSON.stringify(data)\n\t\t\t\t);\n\t\t\t} catch (e) {}\n\t\t},\n\n\n\t\t/**\n\t\t * Callback which allows modification of the state to be saved. Called when the table\n\t\t * has changed state a new state save is required. This method allows modification of\n\t\t * the state saving object prior to actually doing the save, including addition or\n\t\t * other state properties or modification. Note that for plug-in authors, you should\n\t\t * use the `stateSaveParams` event to save parameters for a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object to be saved\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateSaveParams\n\t\t *\n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSaveParams\": null,\n\n\n\t\t/**\n\t\t * Duration for which the saved state information is considered valid. After this period\n\t\t * has elapsed the state will be returned to the default.\n\t\t * Value is given in seconds.\n\t\t *  @type int\n\t\t *  @default 7200 <i>(2 hours)</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.stateDuration\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateDuration\": 60*60*24; // 1 day\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iStateDuration\": 7200,\n\n\n\t\t/**\n\t\t * When enabled DataTables will not make a request to the server for the first\n\t\t * page draw - rather it will use the data already on the page (no sorting etc\n\t\t * will be applied to it), thus saving on an XHR at load time. `deferLoading`\n\t\t * is used to indicate that deferred loading is required, but it is also used\n\t\t * to tell DataTables how many records there are in the full table (allowing\n\t\t * the information element and pagination to be displayed correctly). In the case\n\t\t * where a filtering is applied to the table on initial load, this can be\n\t\t * indicated by giving the parameter as an array, where the first element is\n\t\t * the number of records available after filtering and the second element is the\n\t\t * number of records without filtering (allowing the table information element\n\t\t * to be shown correctly).\n\t\t *  @type int | array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.deferLoading\n\t\t *\n\t\t *  @example\n\t\t *    // 57 records available in the table, no filtering applied\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": 57\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": [ 57, 100 ],\n\t\t *        \"search\": {\n\t\t *          \"search\": \"my_filter\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iDeferLoading\": null,\n\n\n\t\t/**\n\t\t * Number of rows to display on a single page when using pagination. If\n\t\t * feature enabled (`lengthChange`) then the end user will be able to override\n\t\t * this to a custom setting using a pop-up menu.\n\t\t *  @type int\n\t\t *  @default 10\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.pageLength\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pageLength\": 50\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayLength\": 10,\n\n\n\t\t/**\n\t\t * Define the starting point for data display when using DataTables with\n\t\t * pagination. Note that this parameter is the number of records, rather than\n\t\t * the page number, so if you have 10 records per page and want to start on\n\t\t * the third page, it should be \"20\".\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.displayStart\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"displayStart\": 20\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayStart\": 0,\n\n\n\t\t/**\n\t\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t\t * and filtering) by adding a `tabindex` attribute to the required elements. This\n\t\t * allows you to tab through the controls and press the enter key to activate them.\n\t\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t\t * disable built-in keyboard navigation.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.tabIndex\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"tabIndex\": 1\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iTabIndex\": 0,\n\n\n\t\t/**\n\t\t * Classes that DataTables assigns to the various components and features\n\t\t * that it adds to the HTML table. This allows classes to be configured\n\t\t * during initialisation in addition to through the static\n\t\t * {@link DataTable.ext.oStdClasses} object).\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.classes\n\t\t */\n\t\t\"oClasses\": {},\n\n\n\t\t/**\n\t\t * All strings that DataTables uses in the user interface that it creates\n\t\t * are defined in this object, allowing you to modified them individually or\n\t\t * completely replace them all as required.\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.language\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t\t * must be internationalised as well).\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.language.aria\n\t\t\t */\n\t\t\t\"oAria\": {\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted ascending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.aria.sortAscending\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortAscending\": \" - click/return to sort ascending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortAscending\": \": activate to sort column ascending\",\n\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted descending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.aria.sortDescending\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortDescending\": \" - click/return to sort descending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortDescending\": \": activate to sort column descending\"\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Pagination string used by DataTables for the built-in pagination\n\t\t\t * control types.\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.language.paginate\n\t\t\t */\n\t\t\t\"oPaginate\": {\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the first page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default First\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.first\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"first\": \"First page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sFirst\": \"First\",\n\n\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the last page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Last\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.last\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"last\": \"Last page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sLast\": \"Last\",\n\n\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'next' pagination button (to take the user to the\n\t\t\t\t * next page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Next\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.next\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"next\": \"Next page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sNext\": \"Next\",\n\n\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'previous' pagination button (to take the user to\n\t\t\t\t * the previous page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Previous\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.previous\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"previous\": \"Previous page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sPrevious\": \"Previous\"\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * This string is shown in preference to `zeroRecords` when the table is\n\t\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\n\t\t\t * instead (either the default or given value).\n\t\t\t *  @type string\n\t\t\t *  @default No data available in table\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.emptyTable\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"emptyTable\": \"No data available in table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sEmptyTable\": \"No data available in table\",\n\n\n\t\t\t/**\n\t\t\t * This string gives information to the end user about the information\n\t\t\t * that is current on display on the page. The following tokens can be\n\t\t\t * used in the string and will be dynamically replaced as the table\n\t\t\t * display updates. This tokens can be placed anywhere in the string, or\n\t\t\t * removed as needed by the language requires:\n\t\t\t *\n\t\t\t * * `\\_START\\_` - Display index of the first record on the current page\n\t\t\t * * `\\_END\\_` - Display index of the last record on the current page\n\t\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\n\t\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\n\t\t\t * * `\\_PAGE\\_` - Current page number\n\t\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\n\t\t\t *\n\t\t\t *  @type string\n\t\t\t *  @default Showing _START_ to _END_ of _TOTAL_ entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.info\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n\n\n\t\t\t/**\n\t\t\t * Display information string for when the table is empty. Typically the\n\t\t\t * format of this string should match `info`.\n\t\t\t *  @type string\n\t\t\t *  @default Showing 0 to 0 of 0 entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoEmpty\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoEmpty\": \"No entries to show\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n\n\n\t\t\t/**\n\t\t\t * When a user filters the information in a table, this string is appended\n\t\t\t * to the information (`info`) to give an idea of how strong the filtering\n\t\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t\t *  @type string\n\t\t\t *  @default (filtered from _MAX_ total entries)\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoFiltered\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoFiltered\": \" - filtering from _MAX_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n\n\n\t\t\t/**\n\t\t\t * If can be useful to append extra information to the info string at times,\n\t\t\t * and this variable does exactly that. This information will be appended to\n\t\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n\t\t\t * being used) at all times.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string</i>\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoPostFix\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoPostFix\": \"All records shown are derived from real information.\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoPostFix\": \"\",\n\n\n\t\t\t/**\n\t\t\t * This decimal place operator is a little different from the other\n\t\t\t * language options since DataTables doesn't output floating point\n\t\t\t * numbers, so it won't ever use this for display of a number. Rather,\n\t\t\t * what this parameter does is modify the sort methods of the table so\n\t\t\t * that numbers which are in a format which has a character other than\n\t\t\t * a period (`.`) as a decimal place will be sorted numerically.\n\t\t\t *\n\t\t\t * Note that numbers with different decimal places cannot be shown in\n\t\t\t * the same table and still be sortable, the table must be consistent.\n\t\t\t * However, multiple different tables on the page can use different\n\t\t\t * decimal place characters.\n\t\t\t *  @type string\n\t\t\t *  @default\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.decimal\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"decimal\": \",\"\n\t\t\t *          \"thousands\": \".\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sDecimal\": \"\",\n\n\n\t\t\t/**\n\t\t\t * DataTables has a build in number formatter (`formatNumber`) which is\n\t\t\t * used to format large numbers that are used in the table information.\n\t\t\t * By default a comma is used, but this can be trivially changed to any\n\t\t\t * character you wish with this parameter.\n\t\t\t *  @type string\n\t\t\t *  @default ,\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.thousands\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"thousands\": \"'\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sThousands\": \",\",\n\n\n\t\t\t/**\n\t\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t\t * with a custom select box if required.\n\t\t\t *  @type string\n\t\t\t *  @default Show _MENU_ entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.lengthMenu\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Language change only\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": \"Display _MENU_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Language and options change\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": 'Display <select>'+\n\t\t\t *            '<option value=\"10\">10</option>'+\n\t\t\t *            '<option value=\"20\">20</option>'+\n\t\t\t *            '<option value=\"30\">30</option>'+\n\t\t\t *            '<option value=\"40\">40</option>'+\n\t\t\t *            '<option value=\"50\">50</option>'+\n\t\t\t *            '<option value=\"-1\">All</option>'+\n\t\t\t *            '</select> records'\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLengthMenu\": \"Show _MENU_ entries\",\n\n\n\t\t\t/**\n\t\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t\t * parameter is not used when loading data by server-side processing, just\n\t\t\t * Ajax sourced data with client-side processing.\n\t\t\t *  @type string\n\t\t\t *  @default Loading...\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.loadingRecords\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"loadingRecords\": \"Please wait - loading...\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLoadingRecords\": \"Loading...\",\n\n\n\t\t\t/**\n\t\t\t * Text which is displayed when the table is processing a user action\n\t\t\t * (usually a sort command or similar).\n\t\t\t *  @type string\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.processing\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"processing\": \"DataTables is currently busy\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sProcessing\": \"\",\n\n\n\t\t\t/**\n\t\t\t * Details the actions that will be taken when the user types into the\n\t\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t\t * then the input box is appended to the string automatically.\n\t\t\t *  @type string\n\t\t\t *  @default Search:\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.search\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Input text box will be appended at the end automatically\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Filter records:\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Specify where the filter should appear\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Apply filter _INPUT_ to table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sSearch\": \"Search:\",\n\n\n\t\t\t/**\n\t\t\t * Assign a `placeholder` attribute to the search `input` element\n\t\t\t *  @type string\n\t\t\t *  @default\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.searchPlaceholder\n\t\t\t */\n\t\t\t\"sSearchPlaceholder\": \"\",\n\n\n\t\t\t/**\n\t\t\t * All of the language information can be stored in a file on the\n\t\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t\t * and the object has the same properties as the oLanguage object in the\n\t\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t\t * the example language files to see how this works in action.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string - i.e. disabled</i>\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.url\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sUrl\": \"\",\n\n\n\t\t\t/**\n\t\t\t * Text shown inside the table records when the is no information to be\n\t\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\n\t\t\t * information in the table at all (regardless of filtering).\n\t\t\t *  @type string\n\t\t\t *  @default No matching records found\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.zeroRecords\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"zeroRecords\": \"No records to display\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sZeroRecords\": \"No matching records found\"\n\t\t},\n\n\n\t\t/**\n\t\t * This parameter allows you to have define the global filtering state at\n\t\t * initialisation time. As an object the `search` parameter must be\n\t\t * defined, but all other parameters are optional. When `regex` is true,\n\t\t * the search string will be treated as a regular expression, when false\n\t\t * (default) it will be treated as a straight string. When `smart`\n\t\t * DataTables will use it's smart filtering methods (to word match at\n\t\t * any point in the data), when false this will not be done.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.search\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"search\": {\"search\": \"Initial search\"}\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"oSearch\": $.extend({}, DataTable.models.oSearch),\n\n\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * By default DataTables will look for the property `data` (or `aaData` for\n\t\t * compatibility with DataTables 1.9-) when obtaining data from an Ajax\n\t\t * source or for server-side processing - this parameter allows that\n\t\t * property to be changed. You can use Javascript dotted object notation to\n\t\t * get a data source for multiple levels of nesting.\n\t\t *  @type string\n\t\t *  @default data\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.ajaxDataProp\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sAjaxDataProp\": \"data\",\n\n\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * You can instruct DataTables to load data from an external\n\t\t * source using this parameter (use aData if you want to pass data in you\n\t\t * already have). Simply provide a url a JSON object can be obtained from.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.ajaxSource\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sAjaxSource\": null,\n\n\n\t\t/**\n\t\t * This initialisation variable allows you to specify exactly where in the\n\t\t * DOM you want DataTables to inject the various controls it adds to the page\n\t\t * (for example you might want the pagination controls at the top of the\n\t\t * table). DIV elements (with or without a custom class) can also be added to\n\t\t * aid styling. The follow syntax is used:\n\t\t *   <ul>\n\t\t *     <li>The following options are allowed:\n\t\t *       <ul>\n\t\t *         <li>'l' - Length changing</li>\n\t\t *         <li>'f' - Filtering input</li>\n\t\t *         <li>'t' - The table!</li>\n\t\t *         <li>'i' - Information</li>\n\t\t *         <li>'p' - Pagination</li>\n\t\t *         <li>'r' - pRocessing</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following constants are allowed:\n\t\t *       <ul>\n\t\t *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n\t\t *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following syntax is expected:\n\t\t *       <ul>\n\t\t *         <li>'&lt;' and '&gt;' - div elements</li>\n\t\t *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n\t\t *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>Examples:\n\t\t *       <ul>\n\t\t *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n\t\t *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *   </ul>\n\t\t *  @type string\n\t\t *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\n\t\t *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.dom\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDom\": \"lfrtip\",\n\n\n\t\t/**\n\t\t * Search delay option. This will throttle full table searches that use the\n\t\t * DataTables provided search input element (it does not effect calls to\n\t\t * `dt-api search()`, providing a delay before the search is made.\n\t\t *  @type integer\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.searchDelay\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchDelay\": 200\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"searchDelay\": null,\n\n\n\t\t/**\n\t\t * DataTables features six different built-in options for the buttons to\n\t\t * display for pagination control:\n\t\t *\n\t\t * * `numbers` - Page number buttons only\n\t\t * * `simple` - 'Previous' and 'Next' buttons only\n\t\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n\t\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n\t\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n\t\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n\t\t *\n\t\t * Further methods can be added using {@link DataTable.ext.oPagination}.\n\t\t *  @type string\n\t\t *  @default simple_numbers\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.pagingType\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pagingType\": \"full_numbers\"\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"sPaginationType\": \"simple_numbers\",\n\n\n\t\t/**\n\t\t * Enable horizontal scrolling. When a table is too wide to fit into a\n\t\t * certain layout, or you have a large number of columns in the table, you\n\t\t * can enable x-scrolling to show the table in a viewport, which can be\n\t\t * scrolled. This property can be `true` which will allow the table to\n\t\t * scroll horizontally when needed, or any CSS unit, or a number (in which\n\t\t * case it will be treated as a pixel measurement). Setting as simply `true`\n\t\t * is recommended.\n\t\t *  @type boolean|string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.scrollX\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": true,\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollX\": \"\",\n\n\n\t\t/**\n\t\t * This property can be used to force a DataTable to use more width than it\n\t\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t\t * table which requires to be well spaced, this parameter is useful for\n\t\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t\t * measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.scrollXInner\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": \"100%\",\n\t\t *        \"scrollXInner\": \"110%\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollXInner\": \"\",\n\n\n\t\t/**\n\t\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t\t * to the given height, and enable scrolling for any data which overflows the\n\t\t * current viewport. This can be used as an alternative to paging to display\n\t\t * a lot of data in a small area (although paging and scrolling can both be\n\t\t * enabled at the same time). This property can be any CSS unit, or a number\n\t\t * (in which case it will be treated as a pixel measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.scrollY\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollY\": \"\",\n\n\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t\t * processing or Ajax sourced data.\n\t\t *  @type string\n\t\t *  @default GET\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverMethod\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sServerMethod\": \"GET\",\n\n\n\t\t/**\n\t\t * DataTables makes use of renderers when displaying HTML elements for\n\t\t * a table. These renderers can be added or modified by plug-ins to\n\t\t * generate suitable mark-up for a site. For example the Bootstrap\n\t\t * integration plug-in for DataTables uses a paging button renderer to\n\t\t * display pagination buttons in the mark-up required by Bootstrap.\n\t\t *\n\t\t * For further information about the renderers available see\n\t\t * DataTable.ext.renderer\n\t\t *  @type string|object\n\t\t *  @default null\n\t\t *\n\t\t *  @name DataTable.defaults.renderer\n\t\t *\n\t\t */\n\t\t\"renderer\": null,\n\n\n\t\t/**\n\t\t * Set the data property name that DataTables should use to get a row's id\n\t\t * to set as the `id` property in the node.\n\t\t *  @type string\n\t\t *  @default DT_RowId\n\t\t *\n\t\t *  @name DataTable.defaults.rowId\n\t\t */\n\t\t\"rowId\": \"DT_RowId\"\n\t};\n\n\t_fnHungarianMap(DataTable.defaults);\n\n\n\t/*\n\t * Developer note - See note in model.defaults.js about the use of Hungarian\n\t * notation and camel case.\n\t */\n\n\t/**\n\t * Column options that can be given to DataTables at initialisation time.\n\t *  @namespace\n\t */\n\tDataTable.defaults.column = {\n\t\t/**\n\t\t * Define which column(s) an order will occur on for this column. This\n\t\t * allows a column's ordering to take multiple columns into account when\n\t\t * doing a sort or use the data from a different column. For example first\n\t\t * name / last name columns make sense to do a multi-column sort over the\n\t\t * two columns.\n\t\t *  @type array|int\n\t\t *  @default null <i>Takes the value of the column index automatically</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderData\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\n\t\t *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\n\t\t *          { \"orderData\": 2, \"targets\": [ 2 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderData\": [ 0, 1 ] },\n\t\t *          { \"orderData\": [ 1, 0 ] },\n\t\t *          { \"orderData\": 2 },\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aDataSort\": null,\n\t\t\"iDataSort\": -1,\n\n\n\t\t/**\n\t\t * You can control the default ordering direction, and even alter the\n\t\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n\t\t * using this parameter.\n\t\t *  @type array\n\t\t *  @default [ 'asc', 'desc' ]\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderSequence\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          { \"orderSequence\": [ \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ] },\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"asSorting\": ['asc', 'desc'],\n\n\n\t\t/**\n\t\t * Enable or disable filtering on the data in this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.searchable\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"searchable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"searchable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSearchable\": true,\n\n\n\t\t/**\n\t\t * Enable or disable ordering on this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderable\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortable\": true,\n\n\n\t\t/**\n\t\t * Enable or disable the display of this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.visible\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"visible\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"visible\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bVisible\": true,\n\n\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} td The TD node that has been created\n\t\t *  @param {*} cellData The Data for the cell\n\t\t *  @param {array|object} rowData The data for the whole row\n\t\t *  @param {int} row The row index for the aoData data store\n\t\t *  @param {int} col The column index for aoColumns\n\t\t *\n\t\t *  @name DataTable.defaults.column.createdCell\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [3],\n\t\t *          \"createdCell\": function (td, cellData, rowData, row, col) {\n\t\t *            if ( cellData == \"1.7\" ) {\n\t\t *              $(td).css('color', 'blue')\n\t\t *            }\n\t\t *          }\n\t\t *        } ]\n\t\t *      });\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\n\n\t\t/**\n\t\t * This parameter has been replaced by `data` in DataTables to ensure naming\n\t\t * consistency. `dataProp` can still be used, as there is backwards\n\t\t * compatibility in DataTables for this option, but it is strongly\n\t\t * recommended that you use `data` in preference to `dataProp`.\n\t\t *  @name DataTable.defaults.column.dataProp\n\t\t */\n\n\n\t\t/**\n\t\t * This property can be used to read data from any data source property,\n\t\t * including deeply nested objects / properties. `data` can be given in a\n\t\t * number of different ways which effect its behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object. Note that\n\t\t *      function notation is recommended for use in `render` rather than\n\t\t *      `data` as it is much simpler to use as a renderer.\n\t\t * * `null` - use the original data source for the row rather than plucking\n\t\t *   data directly from it. This action has effects on two other\n\t\t *   initialisation options:\n\t\t *    * `defaultContent` - When null is given as the `data` option and\n\t\t *      `defaultContent` is specified for the column, the value defined by\n\t\t *      `defaultContent` will be used for the cell.\n\t\t *    * `render` - When null is used for the `data` option and the `render`\n\t\t *      option is specified for the column, the whole data source for the\n\t\t *      row is used for the renderer.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * `{array|object}` The data source for the row\n\t\t *      * `{string}` The type call data requested - this will be 'set' when\n\t\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n\t\t *        when gathering data. Note that when `undefined` is given for the\n\t\t *        type DataTables expects to get the raw data for the object back<\n\t\t *      * `{*}` Data to set when the second parameter is 'set'.\n\t\t *    * Return:\n\t\t *      * The return value from the function is not required when 'set' is\n\t\t *        the type of call, but otherwise the return is what will be used\n\t\t *        for the data requested.\n\t\t *\n\t\t * Note that `data` is a getter and setter option. If you just require\n\t\t * formatting of data for output, you will likely want to use `render` which\n\t\t * is simply a getter and thus simpler to use.\n\t\t *\n\t\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n\t\t * name change reflects the flexibility of this property and is consistent\n\t\t * with the naming of mRender. If 'mDataProp' is given, then it will still\n\t\t * be used by DataTables, as it automatically maps the old name to the new\n\t\t * if required.\n\t\t *\n\t\t *  @type string|int|function|null\n\t\t *  @default null <i>Use automatically calculated column index</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.data\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Read table data from objects\n\t\t *    // JSON structure for each row:\n\t\t *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {value},\n\t\t *    //      \"version\": {value},\n\t\t *    //      \"grade\": {value}\n\t\t *    //   }\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/objects.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform\" },\n\t\t *          { \"data\": \"version\" },\n\t\t *          { \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Read information from deeply nested objects\n\t\t *    // JSON structure for each row:\n\t\t *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {\n\t\t *    //         \"inner\": {value}\n\t\t *    //      },\n\t\t *    //      \"details\": [\n\t\t *    //         {value}, {value}\n\t\t *    //      ]\n\t\t *    //   }\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform.inner\" },\n\t\t *          { \"data\": \"details.0\" },\n\t\t *          { \"data\": \"details.1\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `data` as a function to provide different information for\n\t\t *    // sorting, filtering and display. In this case, currency (price)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": function ( source, type, val ) {\n\t\t *            if (type === 'set') {\n\t\t *              source.price = val;\n\t\t *              // Store the computed display and filter values for efficiency\n\t\t *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n\t\t *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n\t\t *              return;\n\t\t *            }\n\t\t *            else if (type === 'display') {\n\t\t *              return source.price_display;\n\t\t *            }\n\t\t *            else if (type === 'filter') {\n\t\t *              return source.price_filter;\n\t\t *            }\n\t\t *            // 'sort', 'type' and undefined all just use the integer\n\t\t *            return source.price;\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using default content\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null,\n\t\t *          \"defaultContent\": \"Click to edit\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using array notation - outputting a list from an array\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"name[, ]\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t */\n\t\t\"mData\": null,\n\n\n\t\t/**\n\t\t * This property is the rendering partner to `data` and it is suggested that\n\t\t * when you want to manipulate data for display (including filtering,\n\t\t * sorting etc) without altering the underlying data for the table, use this\n\t\t * property. `render` can be considered to be the the read only companion to\n\t\t * `data` which is read / write (then as such more complex). Like `data`\n\t\t * this option can be given in a number of different ways to effect its\n\t\t * behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object.\n\t\t * * `object` - use different data for the different data types requested by\n\t\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n\t\t *   of the object is the data type the property refers to and the value can\n\t\t *   defined using an integer, string or function using the same rules as\n\t\t *   `render` normally does. Note that an `_` option _must_ be specified.\n\t\t *   This is the default value to use if you haven't specified a value for\n\t\t *   the data type requested by DataTables.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * {array|object} The data source for the row (based on `data`)\n\t\t *      * {string} The type call data requested - this will be 'filter',\n\t\t *        'display', 'type' or 'sort'.\n\t\t *      * {array|object} The full data source for the row (not based on\n\t\t *        `data`)\n\t\t *    * Return:\n\t\t *      * The return value from the function is what will be used for the\n\t\t *        data requested.\n\t\t *\n\t\t *  @type string|int|function|object|null\n\t\t *  @default null Use the data source value.\n\t\t *\n\t\t *  @name DataTable.defaults.column.render\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Create a comma separated list from an array of objects\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          {\n\t\t *            \"data\": \"platform\",\n\t\t *            \"render\": \"[, ].name\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Execute a function to obtain data\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": \"browserName()\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // As an object, extracting different data for the different types\n\t\t *    // This would be used with a data source such as:\n\t\t *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\n\t\t *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\n\t\t *    // (which has both forms) is used for filtering for if a user inputs either format, while\n\t\t *    // the formatted phone number is the one that is shown in the table.\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": {\n\t\t *            \"_\": \"phone\",\n\t\t *            \"filter\": \"phone_filter\",\n\t\t *            \"display\": \"phone_display\"\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Use as a function to create a link from the data source\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"download_link\",\n\t\t *          \"render\": function ( data, type, full ) {\n\t\t *            return '<a href=\"'+data+'\">Download</a>';\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"mRender\": null,\n\n\n\t\t/**\n\t\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t\t *  @type string\n\t\t *  @default td\n\t\t *\n\t\t *  @name DataTable.defaults.column.cellType\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Make the first column use TH cells\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"cellType\": \"th\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sCellType\": \"td\",\n\n\n\t\t/**\n\t\t * Class to give to each cell in this column.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.class\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"class\": \"my_class\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sClass\": \"\",\n\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t * Generally you shouldn't need this!\n\t\t *  @type string\n\t\t *  @default <i>Empty string<i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.contentPadding\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"contentPadding\": \"mmm\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sContentPadding\": \"\",\n\n\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because `data`\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t *\n\t\t *  @name DataTable.defaults.column.defaultContent\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\",\n\t\t *            \"targets\": [ -1 ]\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDefaultContent\": null,\n\n\n\t\t/**\n\t\t * This parameter is only used in DataTables' server-side processing. It can\n\t\t * be exceptionally useful to know what columns are being displayed on the\n\t\t * client side, and to map these to database fields. When defined, the names\n\t\t * also allow DataTables to reorder information from the server if it comes\n\t\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t\t * client-side, your server-side code does not also need updating).\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.name\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"name\": \"engine\", \"targets\": [ 0 ] },\n\t\t *          { \"name\": \"browser\", \"targets\": [ 1 ] },\n\t\t *          { \"name\": \"platform\", \"targets\": [ 2 ] },\n\t\t *          { \"name\": \"version\", \"targets\": [ 3 ] },\n\t\t *          { \"name\": \"grade\", \"targets\": [ 4 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"name\": \"engine\" },\n\t\t *          { \"name\": \"browser\" },\n\t\t *          { \"name\": \"platform\" },\n\t\t *          { \"name\": \"version\" },\n\t\t *          { \"name\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sName\": \"\",\n\n\n\t\t/**\n\t\t * Defines a data source type for the ordering which can be used to read\n\t\t * real-time information from the table (updating the internally cached\n\t\t * version) prior to ordering. This allows ordering to occur on user\n\t\t * editable elements such as form inputs.\n\t\t *  @type string\n\t\t *  @default std\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderDataType\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\n\t\t *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\n\t\t *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\n\t\t *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          { \"orderDataType\": \"dom-text\" },\n\t\t *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\n\t\t *          { \"orderDataType\": \"dom-select\" },\n\t\t *          { \"orderDataType\": \"dom-checkbox\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sSortDataType\": \"std\",\n\n\n\t\t/**\n\t\t * The title of this column.\n\t\t *  @type string\n\t\t *  @default null <i>Derived from the 'TH' value for this column in the\n\t\t *    original HTML table.</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.title\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"My column title\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sTitle\": null,\n\n\n\t\t/**\n\t\t * The type allows you to specify how the data for this column will be\n\t\t * ordered. Four types (string, numeric, date and html (which will strip\n\t\t * HTML tags before ordering)) are currently available. Note that only date\n\t\t * formats understood by Javascript's Date() object will be accepted as type\n\t\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n\t\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\n\t\t * through plug-ins.\n\t\t *  @type string\n\t\t *  @default null <i>Auto-detected from raw data</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.type\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"type\": \"html\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"type\": \"html\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sType\": null,\n\n\n\t\t/**\n\t\t * Defining the width of the column, this parameter may take any CSS value\n\t\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n\t\t * been given a specific width through this interface ensuring that the table\n\t\t * remains readable.\n\t\t *  @type string\n\t\t *  @default null <i>Automatic</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.width\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"width\": \"20%\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"width\": \"20%\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sWidth\": null\n\t};\n\n\t_fnHungarianMap(DataTable.defaults.column);\n\n\n\t/**\n\t * DataTables settings object - this holds all the information needed for a\n\t * given table, including configuration, data and current application of the\n\t * table options. DataTables does not have a single instance for each DataTable\n\t * with the settings attached to that instance, but rather instances of the\n\t * DataTable \"class\" are created on-the-fly as needed (typically by a\n\t * $().dataTable() call) and the settings object is then applied to that\n\t * instance.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults} but this\n\t * one is the internal data store for DataTables's cache of columns. It should\n\t * NOT be manipulated outside of DataTables. Any configuration should be done\n\t * through the initialisation options.\n\t *  @namespace\n\t *  @todo Really should attach the settings object to individual instances so we\n\t *    don't need to create new instances on each $().dataTable() call (if the\n\t *    table already exists). It would also save passing oSettings around and\n\t *    into every single function. However, this is a very significant\n\t *    architecture change for DataTables and will almost certainly break\n\t *    backwards compatibility with older installations. This is something that\n\t *    will be done in 2.0.\n\t */\n\tDataTable.models.oSettings = {\n\t\t/**\n\t\t * Primary features of DataTables and their enablement state.\n\t\t *  @namespace\n\t\t */\n\t\t\"oFeatures\": {\n\n\t\t\t/**\n\t\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t\t * optimum table and columns widths (true) or not (false).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bAutoWidth\": null,\n\n\t\t\t/**\n\t\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t\t * needed by a driven page draw. This can give a significant speed\n\t\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t\t * difference at all for DOM and server-side processing tables.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bDeferRender\": null,\n\n\t\t\t/**\n\t\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bFilter\": null,\n\n\t\t\t/**\n\t\t\t * Table information element (the 'Showing x of y records' div) enable\n\t\t\t * flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bInfo\": null,\n\n\t\t\t/**\n\t\t\t * Present a user control allowing the end user to change the page size\n\t\t\t * when pagination is enabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bLengthChange\": null,\n\n\t\t\t/**\n\t\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t\t * changing must also be disabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bPaginate\": null,\n\n\t\t\t/**\n\t\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t\t * user request - typically an Ajax request for server-side processing.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bProcessing\": null,\n\n\t\t\t/**\n\t\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t\t * get all data from the server for every draw - there is no filtering,\n\t\t\t * sorting or paging done on the client-side.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bServerSide\": null,\n\n\t\t\t/**\n\t\t\t * Sorting enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSort\": null,\n\n\t\t\t/**\n\t\t\t * Multi-column sorting\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortMulti\": null,\n\n\t\t\t/**\n\t\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t\t * there is a lot of DOM interaction.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortClasses\": null,\n\n\t\t\t/**\n\t\t\t * State saving enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bStateSave\": null\n\t\t},\n\n\n\t\t/**\n\t\t * Scrolling settings for a table.\n\t\t *  @namespace\n\t\t */\n\t\t\"oScroll\": {\n\t\t\t/**\n\t\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t\t * table container down to the height of the table (when true).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bCollapse\": null,\n\n\t\t\t/**\n\t\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t\t * during table initialisation.\n\t\t\t *  @type int\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"iBarWidth\": 0,\n\n\t\t\t/**\n\t\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\n\t\t\t * disabled if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sX\": null,\n\n\t\t\t/**\n\t\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t\t * should not need to use this.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t *  @deprecated\n\t\t\t */\n\t\t\t\"sXInner\": null,\n\n\t\t\t/**\n\t\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t\t * if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sY\": null\n\t\t},\n\n\t\t/**\n\t\t * Language information for the table.\n\t\t *  @namespace\n\t\t *  @extends DataTable.defaults.oLanguage\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Information callback function. See\n\t\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t\t *  @type function\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"fnInfoCallback\": null\n\t\t},\n\n\t\t/**\n\t\t * Browser support parameters\n\t\t *  @namespace\n\t\t */\n\t\t\"oBrowser\": {\n\t\t\t/**\n\t\t\t * Indicate if the browser incorrectly calculates width:100% inside a\n\t\t\t * scrolling element (IE6/7)\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bScrollOversize\": false,\n\n\t\t\t/**\n\t\t\t * Determine if the vertical scrollbar is on the right or left of the\n\t\t\t * scrolling container - needed for rtl language layout, although not\n\t\t\t * all browsers move the scrollbar (Safari).\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bScrollbarLeft\": false,\n\n\t\t\t/**\n\t\t\t * Flag for if `getBoundingClientRect` is fully supported or not\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bBounding\": false,\n\n\t\t\t/**\n\t\t\t * Browser scrollbar width\n\t\t\t *  @type integer\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"barWidth\": 0\n\t\t},\n\n\n\t\t\"ajax\": null,\n\n\n\t\t/**\n\t\t * Array referencing the nodes which are used for the features. The\n\t\t * parameters of this object match what is allowed by sDom - i.e.\n\t\t *   <ul>\n\t\t *     <li>'l' - Length changing</li>\n\t\t *     <li>'f' - Filtering input</li>\n\t\t *     <li>'t' - The table!</li>\n\t\t *     <li>'i' - Information</li>\n\t\t *     <li>'p' - Pagination</li>\n\t\t *     <li>'r' - pRocessing</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aanFeatures\": [],\n\n\t\t/**\n\t\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t\t * information.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoData\": [],\n\n\t\t/**\n\t\t * Array of indexes which are in the current display (after filtering etc)\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplay\": [],\n\n\t\t/**\n\t\t * Array of indexes for display - no filtering\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplayMaster\": [],\n\n\t\t/**\n\t\t * Map of row ids to data indexes\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"aIds\": {},\n\n\t\t/**\n\t\t * Store information about each column that is in use\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoColumns\": [],\n\n\t\t/**\n\t\t * Store information about the table's header\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeader\": [],\n\n\t\t/**\n\t\t * Store information about the table's footer\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooter\": [],\n\n\t\t/**\n\t\t * Store the applied global search information in case we want to force a\n\t\t * research or compare the old search to a new one.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t */\n\t\t\"oPreviousSearch\": {},\n\n\t\t/**\n\t\t * Store the applied search for each column - see\n\t\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t\t * filtering information for each column.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreSearchCols\": [],\n\n\t\t/**\n\t\t * Sorting that is applied to the table. Note that the inner arrays are\n\t\t * used in the following manner:\n\t\t * <ul>\n\t\t *   <li>Index 0 - column number</li>\n\t\t *   <li>Index 1 - current sorting direction</li>\n\t\t * </ul>\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @todo These inner arrays should really be objects\n\t\t */\n\t\t\"aaSorting\": null,\n\n\t\t/**\n\t\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t\t * aaSorting).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\n\t\t/**\n\t\t * Classes to use for the striping of a table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asStripeClasses\": null,\n\n\t\t/**\n\t\t * If restoring a table - we should restore its striping classes as well\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asDestroyStripes\": [],\n\n\t\t/**\n\t\t * If restoring a table - we should restore its width\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"sDestroyWidth\": 0,\n\n\t\t/**\n\t\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCallback\": [],\n\n\t\t/**\n\t\t * Callback functions for the header on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeaderCallback\": [],\n\n\t\t/**\n\t\t * Callback function for the footer on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooterCallback\": [],\n\n\t\t/**\n\t\t * Array of callback functions for draw callback functions\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDrawCallback\": [],\n\n\t\t/**\n\t\t * Array of callback functions for row created function\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCreatedCallback\": [],\n\n\t\t/**\n\t\t * Callback functions for just before the table is redrawn. A return of\n\t\t * false will be used to cancel the draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreDrawCallback\": [],\n\n\t\t/**\n\t\t * Callback functions for when the table has been initialised.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoInitComplete\": [],\n\n\n\t\t/**\n\t\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t\t * saving state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSaveParams\": [],\n\n\t\t/**\n\t\t * Callbacks for modifying the settings that have been stored for state saving\n\t\t * prior to using the stored values to restore the state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoadParams\": [],\n\n\t\t/**\n\t\t * Callbacks for operating on the settings object once the saved state has been\n\t\t * loaded\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoaded\": [],\n\n\t\t/**\n\t\t * Cache the table ID for quick access\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sTableId\": \"\",\n\n\t\t/**\n\t\t * The TABLE node for the main table\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTable\": null,\n\n\t\t/**\n\t\t * Permanent ref to the thead element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTHead\": null,\n\n\t\t/**\n\t\t * Permanent ref to the tfoot element - if it exists\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTFoot\": null,\n\n\t\t/**\n\t\t * Permanent ref to the tbody element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTBody\": null,\n\n\t\t/**\n\t\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTableWrapper\": null,\n\n\t\t/**\n\t\t * Indicate if when using server-side processing the loading of data\n\t\t * should be deferred until the second draw.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDeferLoading\": false,\n\n\t\t/**\n\t\t * Indicate if all required information has been read in\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bInitialised\": false,\n\n\t\t/**\n\t\t * Information about open rows. Each object in the array has the parameters\n\t\t * 'nTr' and 'nParent'\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoOpenRows\": [],\n\n\t\t/**\n\t\t * Dictate the positioning of DataTables' control elements - see\n\t\t * {@link DataTable.model.oInit.sDom}.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDom\": null,\n\n\t\t/**\n\t\t * Search delay (in mS)\n\t\t *  @type integer\n\t\t *  @default null\n\t\t */\n\t\t\"searchDelay\": null,\n\n\t\t/**\n\t\t * Which type of pagination should be used.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default two_button\n\t\t */\n\t\t\"sPaginationType\": \"two_button\",\n\n\t\t/**\n\t\t * The state duration (for `stateSave`) in seconds.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iStateDuration\": 0,\n\n\t\t/**\n\t\t * Array of callback functions for state saving. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the JSON string to save that has been thus far created. Returns\n\t\t *       a JSON string to be inserted into a json object\n\t\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSave\": [],\n\n\t\t/**\n\t\t * Array of callback functions for state loading. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the object stored. May return false to cancel state loading</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoad\": [],\n\n\t\t/**\n\t\t * State that was saved. Useful for back reference\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oSavedState\": null,\n\n\t\t/**\n\t\t * State that was loaded. Useful for back reference\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oLoadedState\": null,\n\n\t\t/**\n\t\t * Source url for AJAX data for the table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sAjaxSource\": null,\n\n\t\t/**\n\t\t * Property from a given object from which to read the table data from. This\n\t\t * can be an empty string (when not server-side processing), in which case\n\t\t * it is  assumed an an array is given directly.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sAjaxDataProp\": null,\n\n\t\t/**\n\t\t * The last jQuery XHR object that was used for server-side data gathering.\n\t\t * This can be used for working with the XHR information in one of the\n\t\t * callbacks\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"jqXHR\": null,\n\n\t\t/**\n\t\t * JSON returned from the server in the last Ajax request\n\t\t *  @type object\n\t\t *  @default undefined\n\t\t */\n\t\t\"json\": undefined,\n\n\t\t/**\n\t\t * Data submitted as part of the last Ajax request\n\t\t *  @type object\n\t\t *  @default undefined\n\t\t */\n\t\t\"oAjaxData\": undefined,\n\n\t\t/**\n\t\t * Function to get the server-side data.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnServerData\": null,\n\n\t\t/**\n\t\t * Functions which are called prior to sending an Ajax request so extra\n\t\t * parameters can easily be sent to the server\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoServerParams\": [],\n\n\t\t/**\n\t\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n\t\t * required).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sServerMethod\": null,\n\n\t\t/**\n\t\t * Format numbers for display.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnFormatNumber\": null,\n\n\t\t/**\n\t\t * List of options that can be used for the user selectable length menu.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aLengthMenu\": null,\n\n\t\t/**\n\t\t * Counter for the draws that the table does. Also used as a tracker for\n\t\t * server-side processing\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iDraw\": 0,\n\n\t\t/**\n\t\t * Indicate if a redraw is being done - useful for Ajax\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDrawing\": false,\n\n\t\t/**\n\t\t * Draw index (iDraw) of the last error when parsing the returned data\n\t\t *  @type int\n\t\t *  @default -1\n\t\t */\n\t\t\"iDrawError\": -1,\n\n\t\t/**\n\t\t * Paging display length\n\t\t *  @type int\n\t\t *  @default 10\n\t\t */\n\t\t\"_iDisplayLength\": 10,\n\n\t\t/**\n\t\t * Paging start point - aiDisplay index\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"_iDisplayStart\": 0,\n\n\t\t/**\n\t\t * Server-side processing - number of records in the result set\n\t\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsTotal\": 0,\n\n\t\t/**\n\t\t * Server-side processing - number of records in the current display set\n\t\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type boolean\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsDisplay\": 0,\n\n\t\t/**\n\t\t * The classes to use for the table\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oClasses\": {},\n\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bFiltered\": false,\n\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bSorted\": false,\n\n\t\t/**\n\t\t * Indicate that if multiple rows are in the header and there is more than\n\t\t * one unique cell per column, if the top one (true) or bottom one (false)\n\t\t * should be used for sorting / title by DataTables.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortCellsTop\": null,\n\n\t\t/**\n\t\t * Initialisation object that is used for the table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInit\": null,\n\n\t\t/**\n\t\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t\t * destroy so they can clean up markup and events.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDestroyCallback\": [],\n\n\n\t\t/**\n\t\t * Get the number of records in the current record set, before filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsTotal\": function() {\n\t\t\treturn _fnDataSource(this) == 'ssp' ?\n\t\t\t\tthis._iRecordsTotal * 1 :\n\t\t\t\tthis.aiDisplayMaster.length;\n\t\t},\n\n\t\t/**\n\t\t * Get the number of records in the current record set, after filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsDisplay\": function() {\n\t\t\treturn _fnDataSource(this) == 'ssp' ?\n\t\t\t\tthis._iRecordsDisplay * 1 :\n\t\t\t\tthis.aiDisplay.length;\n\t\t},\n\n\t\t/**\n\t\t * Get the display end point - aiDisplay index\n\t\t *  @type function\n\t\t */\n\t\t\"fnDisplayEnd\": function() {\n\t\t\tvar\n\t\t\t\tlen = this._iDisplayLength,\n\t\t\t\tstart = this._iDisplayStart,\n\t\t\t\tcalc = start + len,\n\t\t\t\trecords = this.aiDisplay.length,\n\t\t\t\tfeatures = this.oFeatures,\n\t\t\t\tpaginate = features.bPaginate;\n\n\t\t\tif (features.bServerSide) {\n\t\t\t\treturn paginate === false || len === -1 ?\n\t\t\t\t\tstart + records :\n\t\t\t\t\tMath.min(start + len, this._iRecordsDisplay);\n\t\t\t} else {\n\t\t\t\treturn !paginate || calc > records || len === -1 ?\n\t\t\t\t\trecords :\n\t\t\t\t\tcalc;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * The DataTables object for this table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInstance\": null,\n\n\t\t/**\n\t\t * Unique identifier for each instance of the DataTables object. If there\n\t\t * is an ID on the table node, then it takes that value, otherwise an\n\t\t * incrementing internal counter is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sInstance\": null,\n\n\t\t/**\n\t\t * Tabindex attribute value that is added to DataTables control elements, allowing\n\t\t * keyboard navigation of the table and its controls.\n\t\t */\n\t\t\"iTabIndex\": 0,\n\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollHead\": null,\n\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollFoot\": null,\n\n\t\t/**\n\t\t * Last applied sort\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aLastSort\": [],\n\n\t\t/**\n\t\t * Stored plug-in instances\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oPlugins\": {},\n\n\t\t/**\n\t\t * Function used to get a row's id from the row's data\n\t\t *  @type function\n\t\t *  @default null\n\t\t */\n\t\t\"rowIdFn\": null,\n\n\t\t/**\n\t\t * Data location where to store a row's id\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"rowId\": null\n\t};\n\n\t/**\n\t * Extension object for DataTables that is used to provide all extension\n\t * options.\n\t *\n\t * Note that the `DataTable.ext` object is available through\n\t * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n\t * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n\t *  @namespace\n\t *  @extends DataTable.models.ext\n\t */\n\n\n\t/**\n\t * DataTables extensions\n\t *\n\t * This namespace acts as a collection area for plug-ins that can be used to\n\t * extend DataTables capabilities. Indeed many of the build in methods\n\t * use this method to provide their own capabilities (sorting methods for\n\t * example).\n\t *\n\t * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n\t * reasons\n\t *\n\t *  @namespace\n\t */\n\tDataTable.ext = _ext = {\n\t\t/**\n\t\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t\t * defined here so other extensions can define buttons regardless of load\n\t\t * order. It is _not_ used by DataTables core.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tbuttons: {},\n\n\n\t\t/**\n\t\t * Element class names\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tclasses: {},\n\n\n\t\t/**\n\t\t * DataTables build type (expanded by the download builder)\n\t\t *\n\t\t *  @type string\n\t\t */\n\t\tbuilder: \"-source-\",\n\n\n\t\t/**\n\t\t * Error reporting.\n\t\t *\n\t\t * How should DataTables report an error. Can take the value 'alert',\n\t\t * 'throw', 'none' or a function.\n\t\t *\n\t\t *  @type string|function\n\t\t *  @default alert\n\t\t */\n\t\terrMode: \"alert\",\n\n\n\t\t/**\n\t\t * Feature plug-ins.\n\t\t *\n\t\t * This is an array of objects which describe the feature plug-ins that are\n\t\t * available to DataTables. These feature plug-ins are then available for\n\t\t * use through the `dom` initialisation option.\n\t\t *\n\t\t * Each feature plug-in is described by an object which must have the\n\t\t * following properties:\n\t\t *\n\t\t * * `fnInit` - function that is used to initialise the plug-in,\n\t\t * * `cFeature` - a character so the feature can be enabled by the `dom`\n\t\t *   instillation option. This is case sensitive.\n\t\t *\n\t\t * The `fnInit` function has the following input parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t *\n\t\t * And the following return is expected:\n\t\t *\n\t\t * * {node|null} The element which contains your feature. Note that the\n\t\t *   return may also be void if your plug-in does not require to inject any\n\t\t *   DOM elements into DataTables control (`dom`) - for example this might\n\t\t *   be useful when developing a plug-in which allows table control via\n\t\t *   keyboard entry\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTable.ext.features.push( {\n\t\t *      \"fnInit\": function( oSettings ) {\n\t\t *        return new TableTools( { \"oDTSettings\": oSettings } );\n\t\t *      },\n\t\t *      \"cFeature\": \"T\"\n\t\t *    } );\n\t\t */\n\t\tfeature: [],\n\n\n\t\t/**\n\t\t * Row searching.\n\t\t *\n\t\t * This method of searching is complimentary to the default type based\n\t\t * searching, and a lot more comprehensive as it allows you complete control\n\t\t * over the searching logic. Each element in this array is a function\n\t\t * (parameters described below) that is called for every row in the table,\n\t\t * and your logic decides if it should be included in the searching data set\n\t\t * or not.\n\t\t *\n\t\t * Searching functions have the following input parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t\t *    original format that was passed in as the data source, or an array\n\t\t *    from a DOM data source\n\t\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t\t *\n\t\t * And the following return is expected:\n\t\t *\n\t\t * * {boolean} Include the row in the searched result set (true) or not\n\t\t *   (false)\n\t\t *\n\t\t * Note that as with the main search ability in DataTables, technically this\n\t\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t\t * naming we call it searching here.\n\t\t *\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @example\n\t\t *    // The following example shows custom search being applied to the\n\t\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t\t *    // from the end-user, matching the data in a certain range.\n\t\t *    $.fn.dataTable.ext.search.push(\n\t\t *      function( settings, data, dataIndex ) {\n\t\t *        var min = document.getElementById('min').value * 1;\n\t\t *        var max = document.getElementById('max').value * 1;\n\t\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t\t *\n\t\t *        if ( min == \"\" && max == \"\" ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min == \"\" && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && \"\" == max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        return false;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\tsearch: [],\n\n\n\t\t/**\n\t\t * Selector extensions\n\t\t *\n\t\t * The `selector` option can be used to extend the options available for the\n\t\t * selector modifier options (`selector-modifier` object data type) that\n\t\t * each of the three built in selector types offer (row, column and cell +\n\t\t * their plural counterparts). For example the Select extension uses this\n\t\t * mechanism to provide an option to select only rows, columns and cells\n\t\t * that have been marked as selected by the end user (`{selected: true}`),\n\t\t * which can be used in conjunction with the existing built in selector\n\t\t * options.\n\t\t *\n\t\t * Each property is an array to which functions can be pushed. The functions\n\t\t * take three attributes:\n\t\t *\n\t\t * * Settings object for the host table\n\t\t * * Options object (`selector-modifier` object type)\n\t\t * * Array of selected item indexes\n\t\t *\n\t\t * The return is an array of the resulting item indexes after the custom\n\t\t * selector has been applied.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tselector: {\n\t\t\tcell: [],\n\t\t\tcolumn: [],\n\t\t\trow: []\n\t\t},\n\n\n\t\t/**\n\t\t * Internal functions, exposed for used in plug-ins.\n\t\t *\n\t\t * Please note that you should not need to use the internal methods for\n\t\t * anything other than a plug-in (and even then, try to avoid if possible).\n\t\t * The internal function may change between releases.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tinternal: {},\n\n\n\t\t/**\n\t\t * Legacy configuration options. Enable and disable legacy options that\n\t\t * are available in DataTables.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tlegacy: {\n\t\t\t/**\n\t\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t\t * requests\n\t\t\t *\n\t\t\t *  @type boolean\n\t\t\t *  @default null\n\t\t\t */\n\t\t\tajax: null\n\t\t},\n\n\n\t\t/**\n\t\t * Pagination plug-in methods.\n\t\t *\n\t\t * Each entry in this object is a function and defines which buttons should\n\t\t * be shown by the pagination rendering method that is used for the table:\n\t\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t\t * buttons are displayed in the document, while the functions here tell it\n\t\t * what buttons to display. This is done by returning an array of button\n\t\t * descriptions (what each button will do).\n\t\t *\n\t\t * Pagination types (the four built in options and any additional plug-in\n\t\t * options defined here) can be used through the `paginationType`\n\t\t * initialisation parameter.\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{int} page` The current page index\n\t\t * 2. `{int} pages` The number of pages in the table\n\t\t *\n\t\t * Each function is expected to return an array where each element of the\n\t\t * array can be one of:\n\t\t *\n\t\t * * `first` - Jump to first page when activated\n\t\t * * `last` - Jump to last page when activated\n\t\t * * `previous` - Show previous page when activated\n\t\t * * `next` - Show next page when activated\n\t\t * * `{int}` - Show page of the index given\n\t\t * * `{array}` - A nested array containing the above elements to add a\n\t\t *   containing 'DIV' element (might be useful for styling).\n\t\t *\n\t\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t\t * an object with two functions would be defined for each plug-in. That\n\t\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t\t * compatibility, but this option of use is now decremented and no longer\n\t\t * documented in DataTables 1.10+.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Show previous, next and current page buttons only\n\t\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t\t *      return [ 'previous', page, 'next' ];\n\t\t *    };\n\t\t */\n\t\tpager: {},\n\n\n\t\trenderer: {\n\t\t\tpageButton: {},\n\t\t\theader: {}\n\t\t},\n\n\n\t\t/**\n\t\t * Ordering plug-ins - custom data source\n\t\t *\n\t\t * The extension options for ordering of data available here is complimentary\n\t\t * to the default type based ordering that DataTables typically uses. It\n\t\t * allows much greater control over the the data that is being used to\n\t\t * order a column, but is necessarily therefore more complex.\n\t\t *\n\t\t * This type of ordering is useful if you want to do ordering based on data\n\t\t * live from the DOM (for example the contents of an 'input' element) rather\n\t\t * than just the static string that DataTables knows of.\n\t\t *\n\t\t * The way these plug-ins work is that you create an array of the values you\n\t\t * wish to be ordering for the column in question and then return that\n\t\t * array. The data in the array much be in the index order of the rows in\n\t\t * the table (not the currently ordering order!). Which order data gathering\n\t\t * function is run here depends on the `dt-init columns.orderDataType`\n\t\t * parameter that is used for the column (if any).\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{int}` Target column index\n\t\t *\n\t\t * Each function is expected to return an array:\n\t\t *\n\t\t * * `{array}` Data for the column to be ordering upon\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    // Ordering using `input` node values\n\t\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t\t *    {\n\t\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t\t *        return $('input', td).val();\n\t\t *      } );\n\t\t *    }\n\t\t */\n\t\torder: {},\n\n\n\t\t/**\n\t\t * Type based plug-ins.\n\t\t *\n\t\t * Each column in DataTables has a type assigned to it, either by automatic\n\t\t * detection or by direct assignment using the `type` option for the column.\n\t\t * The type of a column will effect how it is ordering and search (plug-ins\n\t\t * can also make use of the column type if required).\n\t\t *\n\t\t * @namespace\n\t\t */\n\t\ttype: {\n\t\t\t/**\n\t\t\t * Type detection functions.\n\t\t\t *\n\t\t\t * The functions defined in this object are used to automatically detect\n\t\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t\t * when complex data is in the table.\n\t\t\t *\n\t\t\t * The functions defined take two parameters:\n\t\t\t *\n\t\t\t *  1. `{*}` Data from the column cell to be analysed\n\t\t\t *  2. `{settings}` DataTables settings object. This can be used to\n\t\t\t *     perform context specific type detection - for example detection\n\t\t\t *     based on language settings such as using a comma for a decimal\n\t\t\t *     place. Generally speaking the options from the settings will not\n\t\t\t *     be required\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t\t *   pass it on to the other type detection functions.\n\t\t\t *\n\t\t\t *  @type array\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Currency type detection plug-in:\n\t\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t\t *      function ( data, settings ) {\n\t\t\t *        // Check the numeric part\n\t\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\n\t\t\t *          return null;\n\t\t\t *        }\n\t\t\t *\n\t\t\t *        // Check prefixed by currency\n\t\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t\t *          return 'currency';\n\t\t\t *        }\n\t\t\t *        return null;\n\t\t\t *      }\n\t\t\t *    );\n\t\t\t */\n\t\t\tdetect: [],\n\n\n\t\t\t/**\n\t\t\t * Type based search formatting.\n\t\t\t *\n\t\t\t * The type based searching functions can be used to pre-format the\n\t\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t\t *\n\t\t\t * Note that is a search is not defined for a column of a given type,\n\t\t\t * no search formatting will be performed.\n\t\t\t *\n\t\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t\t * or a type detection plug-in), you will typically be using this for\n\t\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t\t * the format that should be searched upon. This is done by adding\n\t\t\t * functions this object with a parameter name which matches the sType\n\t\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t\t * for searching data.\n\t\t\t *\n\t\t\t * The functions defined take a single parameter:\n\t\t\t *\n\t\t\t *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t\t *\n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t\t *    }\n\t\t\t */\n\t\t\tsearch: {},\n\n\n\t\t\t/**\n\t\t\t * Type based ordering.\n\t\t\t *\n\t\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t\t * is defined by the functions available in this object.\n\t\t\t *\n\t\t\t * Each ordering option can be described by three properties added to\n\t\t\t * this object:\n\t\t\t *\n\t\t\t * * `{type}-pre` - Pre-formatting function\n\t\t\t * * `{type}-asc` - Ascending order function\n\t\t\t * * `{type}-desc` - Descending order function\n\t\t\t *\n\t\t\t * All three can be used together, only `{type}-pre` or only\n\t\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t\t * implementation in terms of speed, although the others are provided\n\t\t\t * for compatibility with existing Javascript sort functions.\n\t\t\t *\n\t\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t\t *\n\t\t\t *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t\t *\n\t\t\t * And return:\n\t\t\t *\n\t\t\t * * `{*}` Data to be sorted upon\n\t\t\t *\n\t\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t\t * functions, taking two parameters:\n\t\t\t *\n\t\t\t *  1. `{*}` Data to compare to the second parameter\n\t\t\t *  2. `{*}` Data to compare to the first parameter\n\t\t\t *\n\t\t\t * And returning:\n\t\t\t *\n\t\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t\t *   parameter.\n\t\t\t *\n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t\t *      \"string-pre\": function(x) {\n\t\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t\t *        return parseFloat( a );\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t\t *      \"string-case-asc\": function(x,y) {\n\t\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t\t *      },\n\t\t\t *      \"string-case-desc\": function(x,y) {\n\t\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t */\n\t\t\torder: {}\n\t\t},\n\n\t\t/**\n\t\t * Unique DataTables instance counter\n\t\t *\n\t\t * @type int\n\t\t * @private\n\t\t */\n\t\t_unique: 0,\n\n\n\t\t//\n\t\t// Depreciated\n\t\t// The following properties are retained for backwards compatibility only.\n\t\t// The should not be used in new projects and will be removed in a future\n\t\t// version\n\t\t//\n\n\t\t/**\n\t\t * Version check function.\n\t\t *  @type function\n\t\t *  @depreciated Since 1.10\n\t\t */\n\t\tfnVersionCheck: DataTable.fnVersionCheck,\n\n\n\t\t/**\n\t\t * Index for what 'this' index API functions should use\n\t\t *  @type int\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tiApiIndex: 0,\n\n\n\t\t/**\n\t\t * JQuery UI class container\n\t\t *  @type object\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\toJUIClasses: {},\n\n\n\t\t/**\n\t\t * Software version\n\t\t *  @type string\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tsVersion: DataTable.version\n\t};\n\n\n\t//\n\t// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n\t//\n\t$.extend(_ext, {\n\t\tafnFiltering: _ext.search,\n\t\taTypes:       _ext.type.detect,\n\t\tofnSearch:    _ext.type.search,\n\t\toSort:        _ext.type.order,\n\t\tafnSortData:  _ext.order,\n\t\taoFeatures:   _ext.feature,\n\t\toApi:         _ext.internal,\n\t\toStdClasses:  _ext.classes,\n\t\toPagination:  _ext.pager\n\t});\n\n\n\t$.extend(DataTable.ext.classes, {\n\t\t\"sTable\": \"dataTable\",\n\t\t\"sNoFooter\": \"no-footer\",\n\n\t\t/* Paging buttons */\n\t\t\"sPageButton\": \"paginate_button\",\n\t\t\"sPageButtonActive\": \"current\",\n\t\t\"sPageButtonDisabled\": \"disabled\",\n\n\t\t/* Striping classes */\n\t\t\"sStripeOdd\": \"odd\",\n\t\t\"sStripeEven\": \"even\",\n\n\t\t/* Empty row */\n\t\t\"sRowEmpty\": \"dataTables_empty\",\n\n\t\t/* Features */\n\t\t\"sWrapper\": \"dataTables_wrapper\",\n\t\t\"sFilter\": \"dataTables_filter\",\n\t\t\"sInfo\": \"dataTables_info\",\n\t\t\"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\n\t\t\"sLength\": \"dataTables_length\",\n\t\t\"sProcessing\": \"dataTables_processing\",\n\n\t\t/* Sorting */\n\t\t\"sSortAsc\": \"sorting_asc\",\n\t\t\"sSortDesc\": \"sorting_desc\",\n\t\t\"sSortable\": \"sorting\", /* Sortable in both directions */\n\t\t\"sSortableAsc\": \"sorting_desc_disabled\",\n\t\t\"sSortableDesc\": \"sorting_asc_disabled\",\n\t\t\"sSortableNone\": \"sorting_disabled\",\n\t\t\"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\n\n\t\t/* Filtering */\n\t\t\"sFilterInput\": \"\",\n\n\t\t/* Page length */\n\t\t\"sLengthSelect\": \"\",\n\n\t\t/* Scrolling */\n\t\t\"sScrollWrapper\": \"dataTables_scroll\",\n\t\t\"sScrollHead\": \"dataTables_scrollHead\",\n\t\t\"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n\t\t\"sScrollBody\": \"dataTables_scrollBody\",\n\t\t\"sScrollFoot\": \"dataTables_scrollFoot\",\n\t\t\"sScrollFootInner\": \"dataTables_scrollFootInner\",\n\n\t\t/* Misc */\n\t\t\"sHeaderTH\": \"\",\n\t\t\"sFooterTH\": \"\",\n\n\t\t// Deprecated\n\t\t\"sSortJUIAsc\": \"\",\n\t\t\"sSortJUIDesc\": \"\",\n\t\t\"sSortJUI\": \"\",\n\t\t\"sSortJUIAscAllowed\": \"\",\n\t\t\"sSortJUIDescAllowed\": \"\",\n\t\t\"sSortJUIWrapper\": \"\",\n\t\t\"sSortIcon\": \"\",\n\t\t\"sJUIHeader\": \"\",\n\t\t\"sJUIFooter\": \"\"\n\t});\n\n\n\tvar extPagination = DataTable.ext.pager;\n\n\t/**\n\t * @param page\n\t * @param pages\n\t */\n\tfunction _numbers(page, pages) {\n\t\tvar\n\t\t\tnumbers = [],\n\t\t\tbuttons = extPagination.numbers_length,\n\t\t\thalf = Math.floor(buttons / 2),\n\t\t\ti = 1;\n\n\t\tif (pages <= buttons) {\n\t\t\tnumbers = _range(0, pages);\n\t\t} else if (page <= half) {\n\t\t\tnumbers = _range(0, buttons - 2);\n\t\t\tnumbers.push('ellipsis');\n\t\t\tnumbers.push(pages - 1);\n\t\t} else if (page >= pages - 1 - half) {\n\t\t\tnumbers = _range(pages - (buttons - 2), pages);\n\t\t\tnumbers.splice(0, 0, 'ellipsis'); // No unshift in ie6\n\t\t\tnumbers.splice(0, 0, 0);\n\t\t} else {\n\t\t\tnumbers = _range(page - half + 2, page + half - 1);\n\t\t\tnumbers.push('ellipsis');\n\t\t\tnumbers.push(pages - 1);\n\t\t\tnumbers.splice(0, 0, 'ellipsis');\n\t\t\tnumbers.splice(0, 0, 0);\n\t\t}\n\n\t\tnumbers.DT_el = 'span';\n\t\treturn numbers;\n\t}\n\n\n\t$.extend(extPagination, {\n\t\tsimple: function(page, pages) {\n\t\t\treturn ['previous', 'next'];\n\t\t},\n\n\t\tfull: function(page, pages) {\n\t\t\treturn ['first', 'previous', 'next', 'last'];\n\t\t},\n\n\t\tnumbers: function(page, pages) {\n\t\t\treturn [_numbers(page, pages)];\n\t\t},\n\n\t\tsimple_numbers: function(page, pages) {\n\t\t\treturn ['previous', _numbers(page, pages), 'next'];\n\t\t},\n\n\t\tfull_numbers: function(page, pages) {\n\t\t\treturn ['first', 'previous', _numbers(page, pages), 'next', 'last'];\n\t\t},\n\n\t\tfirst_last_numbers: function(page, pages) {\n\t \t\treturn ['first', _numbers(page, pages), 'last'];\n\t \t},\n\n\t\t// For testing and plug-ins to use\n\t\t_numbers: _numbers,\n\n\t\t// Number of number buttons (including ellipsis) to show. _Must be odd!_\n\t\tnumbers_length: 7\n\t});\n\n\n\t$.extend(true, DataTable.ext.renderer, {\n\t\tpageButton: {\n\t\t\t_: function(settings, host, idx, buttons, page, pages) {\n\t\t\t\tvar classes = settings.oClasses;\n\t\t\t\tvar lang = settings.oLanguage.oPaginate;\n\t\t\t\tvar aria = settings.oLanguage.oAria.paginate || {};\n\t\t\t\tvar btnDisplay, btnClass,\ncounter = 0;\n\n\t\t\t\tvar attach = function(container, buttons) {\n\t\t\t\t\tvar i, ien, node, button, tabIndex;\n\t\t\t\t\tvar disabledClass = classes.sPageButtonDisabled;\n\t\t\t\t\tvar clickHandler = function(e) {\n\t\t\t\t\t\t_fnPageChange(settings, e.data.action, true);\n\t\t\t\t\t};\n\n\t\t\t\t\tfor (i = 0, ien = buttons.length; i < ien; i++) {\n\t\t\t\t\t\tbutton = buttons[i];\n\n\t\t\t\t\t\tif (Array.isArray(button)) {\n\t\t\t\t\t\t\tvar inner = $('<' + (button.DT_el || 'div') + '/>')\n\t\t\t\t\t\t\t\t.appendTo(container);\n\t\t\t\t\t\t\tattach(inner, button);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbtnDisplay = null;\n\t\t\t\t\t\t\tbtnClass = button;\n\t\t\t\t\t\t\ttabIndex = settings.iTabIndex;\n\n\t\t\t\t\t\t\tswitch (button) {\n\t\t\t\t\t\t\t\tcase 'ellipsis':\n\t\t\t\t\t\t\t\t\tcontainer.append('<span class=\"ellipsis\">&#x2026;</span>');\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'first':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sFirst;\n\n\t\t\t\t\t\t\t\t\tif (page === 0) {\n\t\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'previous':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\n\n\t\t\t\t\t\t\t\t\tif (page === 0) {\n\t\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'next':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sNext;\n\n\t\t\t\t\t\t\t\t\tif (pages === 0 || page === pages - 1) {\n\t\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'last':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sLast;\n\n\t\t\t\t\t\t\t\t\tif (pages === 0 || page === pages - 1) {\n\t\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tbtnDisplay = settings.fnFormatNumber(button + 1);\n\t\t\t\t\t\t\t\t\tbtnClass = page === button ?\n\t\t\t\t\t\t\t\t\t\tclasses.sPageButtonActive : '';\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (btnDisplay !== null) {\n\t\t\t\t\t\t\t\tnode = $('<a>', {\n\t\t\t\t\t\t\t\t\t\t'class': classes.sPageButton + ' ' + btnClass,\n\t\t\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\n\t\t\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\n\t\t\t\t\t\t\t\t\t\t'data-dt-idx': counter,\n\t\t\t\t\t\t\t\t\t\t'tabindex': tabIndex,\n\t\t\t\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\n\t\t\t\t\t\t\t\t\t\t\tsettings.sTableId + '_' + button :\n\t\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.html(btnDisplay)\n\t\t\t\t\t\t\t\t\t.appendTo(container);\n\n\t\t\t\t\t\t\t\t_fnBindAction(\n\t\t\t\t\t\t\t\t\tnode, {action: button}, clickHandler\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t// inside an iframe or frame. Try / catch the error. Not good for\n\t\t\t\t// accessibility, but neither are frames.\n\t\t\t\tvar activeEl;\n\n\t\t\t\ttry {\n\t\t\t\t\t// Because this approach is destroying and recreating the paging\n\t\t\t\t\t// elements, focus is lost on the select button which is bad for\n\t\t\t\t\t// accessibility. So we want to restore focus once the draw has\n\t\t\t\t\t// completed\n\t\t\t\t\tactiveEl = $(host).find(document.activeElement).data('dt-idx');\n\t\t\t\t} catch (e) {}\n\n\t\t\t\tattach($(host).empty(), buttons);\n\n\t\t\t\tif (activeEl !== undefined) {\n\t\t\t\t\t$(host).find('[data-dt-idx=' + activeEl + ']').trigger('focus');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\n\t// Built in type detection. See model.ext.aTypes for information about\n\t// what is required from this methods.\n\t$.extend(DataTable.ext.type.detect, [\n\t\t// Plain numbers - first since V8 detects some plain numbers as dates\n\t\t// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\n\t\tfunction(d, settings) {\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber(d, decimal) ? 'num' + decimal : null;\n\t\t},\n\n\t\t// Dates (only those recognised by the browser's Date.parse)\n\t\tfunction(d, settings) {\n\t\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\n\t\t\t// valid, so we need to use a regex to restrict date formats. Use a\n\t\t\t// plug-in for anything other than ISO8601 style strings\n\t\t\tif (d && !(d instanceof Date) && !_re_date.test(d)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar parsed = Date.parse(d);\n\t\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\n\t\t},\n\n\t\t// Formatted numbers\n\t\tfunction(d, settings) {\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber(d, decimal, true) ? 'num-fmt' + decimal : null;\n\t\t},\n\n\t\t// HTML numeric\n\t\tfunction(d, settings) {\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric(d, decimal) ? 'html-num' + decimal : null;\n\t\t},\n\n\t\t// HTML numeric, formatted\n\t\tfunction(d, settings) {\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric(d, decimal, true) ? 'html-num-fmt' + decimal : null;\n\t\t},\n\n\t\t// HTML (this is strict checking - there must be html)\n\t\tfunction(d, settings) {\n\t\t\treturn _empty(d) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\n\t\t\t\t'html' : null;\n\t\t}\n\t]);\n\n\n\t// Filter formatting functions. See model.ext.ofnSearch for information about\n\t// what is required from these methods.\n\t//\n\t// Note that additional search methods are added for the html numbers and\n\t// html formatted numbers by `_addNumericSort()` when we know what the decimal\n\t// place is\n\n\n\t$.extend(DataTable.ext.type.search, {\n\t\thtml: function(data) {\n\t\t\treturn _empty(data) ?\n\t\t\t\tdata :\n\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\tdata\n\t\t\t\t\t\t.replace(_re_new_lines, \" \")\n\t\t\t\t\t\t.replace(_re_html, \"\") :\n\t\t\t\t\t'';\n\t\t},\n\n\t\tstring: function(data) {\n\t\t\treturn _empty(data) ?\n\t\t\t\tdata :\n\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\tdata.replace(_re_new_lines, \" \") :\n\t\t\t\t\tdata;\n\t\t}\n\t});\n\n\n\tvar __numericReplace = function(d, decimalPlace, re1, re2) {\n\t\tif (d !== 0 && (!d || d === '-')) {\n\t\t\treturn -Infinity;\n\t\t}\n\n\t\t// If a decimal place other than `.` is used, it needs to be given to the\n\t\t// function so we can detect it and replace with a `.` which is the only\n\t\t// decimal place Javascript recognises - it is not locale aware.\n\t\tif (decimalPlace) {\n\t\t\td = _numToDecimal(d, decimalPlace);\n\t\t}\n\n\t\tif (d.replace) {\n\t\t\tif (re1) {\n\t\t\t\td = d.replace(re1, '');\n\t\t\t}\n\n\t\t\tif (re2) {\n\t\t\t\td = d.replace(re2, '');\n\t\t\t}\n\t\t}\n\n\t\treturn d * 1;\n\t};\n\n\n\t// Add the numeric 'deformatting' functions for sorting and search. This is done\n\t// in a function to provide an easy ability for the language options to add\n\t// additional methods if a non-period decimal place is used.\n\t/**\n\t * @param decimalPlace\n\t */\n\tfunction _addNumericSort(decimalPlace) {\n\t\t$.each(\n\t\t\t{\n\t\t\t\t// Plain numbers\n\t\t\t\t\"num\": function(d) {\n\t\t\t\t\treturn __numericReplace(d, decimalPlace);\n\t\t\t\t},\n\n\t\t\t\t// Formatted numbers\n\t\t\t\t\"num-fmt\": function(d) {\n\t\t\t\t\treturn __numericReplace(d, decimalPlace, _re_formatted_numeric);\n\t\t\t\t},\n\n\t\t\t\t// HTML numeric\n\t\t\t\t\"html-num\": function(d) {\n\t\t\t\t\treturn __numericReplace(d, decimalPlace, _re_html);\n\t\t\t\t},\n\n\t\t\t\t// HTML numeric, formatted\n\t\t\t\t\"html-num-fmt\": function(d) {\n\t\t\t\t\treturn __numericReplace(d, decimalPlace, _re_html, _re_formatted_numeric);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction(key, fn) {\n\t\t\t\t// Add the ordering method\n\t\t\t\t_ext.type.order[ key + decimalPlace + '-pre' ] = fn;\n\n\t\t\t\t// For HTML types add a search formatter that will strip the HTML\n\t\t\t\tif (key.match(/^html\\-/)) {\n\t\t\t\t\t_ext.type.search[ key + decimalPlace ] = _ext.type.search.html;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\n\t// Default sort methods\n\t$.extend(_ext.type.order, {\n\t\t// Dates\n\t\t\"date-pre\": function(d) {\n\t\t\tvar ts = Date.parse(d);\n\t\t\treturn isNaN(ts) ? -Infinity : ts;\n\t\t},\n\n\t\t// Html\n\t\t\"html-pre\": function(a) {\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ta.replace ?\n\t\t\t\t\ta.replace(/<.*?>/g, \"\").toLowerCase() :\n\t\t\t\t\ta + '';\n\t\t},\n\n\t\t// String\n\t\t\"string-pre\": function(a) {\n\t\t\t// This is a little complex, but faster than always calling toString,\n\t\t\t// http://jsperf.com/tostring-v-check\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ttypeof a === 'string' ?\n\t\t\t\t\ta.toLowerCase() :\n\t\t\t\t\t!a.toString ?\n\t\t\t\t\t\t'' :\n\t\t\t\t\t\ta.toString();\n\t\t},\n\n\t\t// String-asc and -desc are retained only for compatibility with the old\n\t\t// sort methods\n\t\t\"string-asc\": function(x, y) {\n\t\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t},\n\n\t\t\"string-desc\": function(x, y) {\n\t\t\treturn ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t}\n\t});\n\n\n\t// Numeric sorting types - order doesn't matter here\n\t_addNumericSort('');\n\n\n\t$.extend(true, DataTable.ext.renderer, {\n\t\theader: {\n\t\t\t_: function(settings, cell, column, classes) {\n\t\t\t\t// No additional mark-up required\n\t\t\t\t// Attach a sort listener to update on sort - note that using the\n\t\t\t\t// `DT` namespace will allow the event to be removed automatically\n\t\t\t\t// on destroy, while the `dt` namespaced event is the one we are\n\t\t\t\t// listening for\n\t\t\t\t$(settings.nTable).on('order.dt.DT', function(e, ctx, sorting, columns) {\n\t\t\t\t\tif (settings !== ctx) { // Need to check this this is the host\n\t\t\t\t\t\treturn; // Table, not a nested one\n\t\t\t\t\t}\n\n\t\t\t\t\tvar colIdx = column.idx;\n\n\t\t\t\t\tcell\n\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\tclasses.sSortAsc + ' ' +\n\t\t\t\t\t\t\tclasses.sSortDesc\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.addClass(columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tjqueryui: function(settings, cell, column, classes) {\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.addClass(classes.sSortJUIWrapper)\n\t\t\t\t\t.append(cell.contents())\n\t\t\t\t\t.append($('<span/>')\n\t\t\t\t\t\t.addClass(classes.sSortIcon + ' ' + column.sSortingClassJUI)\n\t\t\t\t\t)\n\t\t\t\t\t.appendTo(cell);\n\n\t\t\t\t// Attach a sort listener to update on sort\n\t\t\t\t$(settings.nTable).on('order.dt.DT', function(e, ctx, sorting, columns) {\n\t\t\t\t\tif (settings !== ctx) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar colIdx = column.idx;\n\n\t\t\t\t\tcell\n\t\t\t\t\t\t.removeClass(classes.sSortAsc + \" \" + classes.sSortDesc)\n\t\t\t\t\t\t.addClass(columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t);\n\n\t\t\t\t\tcell\n\t\t\t\t\t\t.find('span.' + classes.sSortIcon)\n\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\tclasses.sSortJUIAsc + \" \" +\n\t\t\t\t\t\t\tclasses.sSortJUIDesc + \" \" +\n\t\t\t\t\t\t\tclasses.sSortJUI + \" \" +\n\t\t\t\t\t\t\tclasses.sSortJUIAscAllowed + \" \" +\n\t\t\t\t\t\t\tclasses.sSortJUIDescAllowed\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.addClass(columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortJUIAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortJUIDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClassJUI\n\t\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\t/*\n\t * Public helper functions. These aren't used internally by DataTables, or\n\t * called by any of the options passed into DataTables, but they can be used\n\t * externally by developers working with DataTables. They are helper functions\n\t * to make working with DataTables a little bit easier.\n\t */\n\n\tvar __htmlEscapeEntities = function(d) {\n\t\tif (Array.isArray(d)) {\n\t\t\td = d.join(',');\n\t\t}\n\n\t\treturn typeof d === 'string' ?\n\t\t\td\n\t\t\t\t.replace(/&/g, '&amp;')\n\t\t\t\t.replace(/</g, '&lt;')\n\t\t\t\t.replace(/>/g, '&gt;')\n\t\t\t\t.replace(/\"/g, '&quot;') :\n\t\t\td;\n\t};\n\n\t// Common logic for moment, luxon or a date action\n\t/**\n\t * @param dt\n\t * @param momentFn\n\t * @param luxonFn\n\t * @param dateFn\n\t * @param arg1\n\t */\n\tfunction __mld(dt, momentFn, luxonFn, dateFn, arg1) {\n\t\tif (window.moment) {\n\t\t\treturn dt[momentFn](arg1);\n\t\t} else if (window.luxon) {\n\t\t\treturn dt[luxonFn](arg1);\n\t\t}\n\n\t\treturn dateFn ? dt[dateFn](arg1) : dt;\n\t}\n\n\n\tvar __mlWarning = false;\n\t/**\n\t * @param d\n\t * @param format\n\t * @param locale\n\t */\n\tfunction __mldObj(d, format, locale) {\n\t\tvar dt;\n\n\t\tif (window.moment) {\n\t\t\tdt = window.moment.utc(d, format, locale, true);\n\n\t\t\tif (!dt.isValid()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else if (window.luxon) {\n\t\t\tdt = format\n\t\t\t\t? window.luxon.DateTime.fromFormat(d, format)\n\t\t\t\t: window.luxon.DateTime.fromISO(d);\n\n\t\t\tif (!dt.isValid) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tdt.setLocale(locale);\n\t\t} else if (!format) {\n\t\t\t// No format given, must be ISO\n\t\t\tdt = new Date(d);\n\t\t} else {\n\t\t\tif (!__mlWarning) {\n\t\t\t\talert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');\n\t\t\t}\n\n\t\t\t__mlWarning = true;\n\t\t}\n\n\t\treturn dt;\n\t}\n\n\t// Wrapper for date, datetime and time which all operate the same way with the exception of\n\t// the output string for auto locale support\n\t/**\n\t * @param localeString\n\t */\n\tfunction __mlHelper(localeString) {\n\t\treturn function(from, to, locale, def) {\n\t\t\t// Luxon and Moment support\n\t\t\t// Argument shifting\n\t\t\tif (arguments.length === 0) {\n\t\t\t\tlocale = 'en';\n\t\t\t\tto = null; // Means toLocaleString\n\t\t\t\tfrom = null; // Means iso8601\n\t\t\t} else if (arguments.length === 1) {\n\t\t\t\tlocale = 'en';\n\t\t\t\tto = from;\n\t\t\t\tfrom = null;\n\t\t\t} else if (arguments.length === 2) {\n\t\t\t\tlocale = to;\n\t\t\t\tto = from;\n\t\t\t\tfrom = null;\n\t\t\t}\n\n\t\t\tvar typeName = 'datetime-' + to;\n\n\t\t\t// Add type detection and sorting specific to this date format - we need to be able to identify\n\t\t\t// date type columns as such, rather than as numbers in extensions. Hence the need for this.\n\t\t\tif (!DataTable.ext.type.order[typeName]) {\n\t\t\t\t// The renderer will give the value to type detect as the type!\n\t\t\t\tDataTable.ext.type.detect.unshift(function(d) {\n\t\t\t\t\treturn d === typeName ? typeName : false;\n\t\t\t\t});\n\n\t\t\t\t// The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\n\t\t\t\t// `valueOf` which gives milliseconds epoch\n\t\t\t\tDataTable.ext.type.order[typeName + '-asc'] = function(a, b) {\n\t\t\t\t\tvar x = a.valueOf();\n\t\t\t\t\tvar y = b.valueOf();\n\n\t\t\t\t\treturn x === y\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: x < y\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t};\n\n\t\t\t\tDataTable.ext.type.order[typeName + '-desc'] = function(a, b) {\n\t\t\t\t\tvar x = a.valueOf();\n\t\t\t\t\tvar y = b.valueOf();\n\n\t\t\t\t\treturn x === y\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: x > y\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn function(d, type) {\n\t\t\t\t// Allow for a default value\n\t\t\t\tif (d === null || d === undefined) {\n\t\t\t\t\tif (def === '--now') {\n\t\t\t\t\t\t// We treat everything as UTC further down, so no changes are\n\t\t\t\t\t\t// made, as such need to get the local date / time as if it were\n\t\t\t\t\t\t// UTC\n\t\t\t\t\t\tvar local = new Date();\n\t\t\t\t\t\td = new Date(Date.UTC(\n\t\t\t\t\t\t\tlocal.getFullYear(), local.getMonth(), local.getDate(),\n\t\t\t\t\t\t\tlocal.getHours(), local.getMinutes(), local.getSeconds()\n\t\t\t\t\t\t));\n\t\t\t\t\t} else {\n\t\t\t\t\t\td = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (type === 'type') {\n\t\t\t\t\t// Typing uses the type name for fast matching\n\t\t\t\t\treturn typeName;\n\t\t\t\t}\n\n\t\t\t\tif (d === '') {\n\t\t\t\t\treturn type !== 'sort'\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: __mldObj('0000-01-01 00:00:00', null, locale);\n\t\t\t\t}\n\n\t\t\t\t// Shortcut. If `from` and `to` are the same, we are using the renderer to\n\t\t\t\t// format for ordering, not display - its already in the display format.\n\t\t\t\tif (to !== null && from === to && type !== 'sort' && type !== 'type' && !(d instanceof Date)) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\n\t\t\t\tvar dt = __mldObj(d, from, locale);\n\n\t\t\t\tif (dt === null) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\n\t\t\t\tif (type === 'sort') {\n\t\t\t\t\treturn dt;\n\t\t\t\t}\n\n\t\t\t\tvar formatted = to === null\n\t\t\t\t\t? __mld(dt, 'toDate', 'toJSDate', '')[localeString]()\n\t\t\t\t\t: __mld(dt, 'format', 'toFormat', 'toISOString', to);\n\n\t\t\t\t// XSS protection\n\t\t\t\treturn type === 'display' ?\n\t\t\t\t\t__htmlEscapeEntities(formatted) :\n\t\t\t\t\tformatted;\n\t\t\t};\n\t\t};\n\t}\n\n\t// Based on locale, determine standard number formatting\n\t// Fallback for legacy browsers is US English\n\tvar __thousands = ',';\n\tvar __decimal = '.';\n\n\tif (Intl) {\n\t\ttry {\n\t\t\tvar num = new Intl.NumberFormat().formatToParts(100000.1);\n\n\t\t\tfor (var i = 0; i < num.length; i++) {\n\t\t\t\tif (num[i].type === 'group') {\n\t\t\t\t\t__thousands = num[i].value;\n\t\t\t\t} else if (num[i].type === 'decimal') {\n\t\t\t\t\t__decimal = num[i].value;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// Noop\n\t\t}\n\t}\n\n\t// Formatted date time detection - use by declaring the formats you are going to use\n\tDataTable.datetime = function(format, locale) {\n\t\tvar typeName = 'datetime-detect-' + format;\n\n\t\tif (!locale) {\n\t\t\tlocale = 'en';\n\t\t}\n\n\t\tif (!DataTable.ext.type.order[typeName]) {\n\t\t\tDataTable.ext.type.detect.unshift(function(d) {\n\t\t\t\tvar dt = __mldObj(d, format, locale);\n\t\t\t\treturn d === '' || dt ? typeName : false;\n\t\t\t});\n\n\t\t\tDataTable.ext.type.order[typeName + '-pre'] = function(d) {\n\t\t\t\treturn __mldObj(d, format, locale) || 0;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Helpers for `columns.render`.\n\t *\n\t * The options defined here can be used with the `columns.render` initialisation\n\t * option to provide a display renderer. The following functions are defined:\n\t *\n\t * * `number` - Will format numeric data (defined by `columns.data`) for\n\t *   display, retaining the original unformatted data for sorting and filtering.\n\t *   It takes 5 parameters:\n\t *   * `string` - Thousands grouping separator\n\t *   * `string` - Decimal point indicator\n\t *   * `integer` - Number of decimal points to show\n\t *   * `string` (optional) - Prefix.\n\t *   * `string` (optional) - Postfix (/suffix).\n\t * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n\t *   parameters.\n\t *\n\t * @example\n\t *   // Column definition using the number renderer\n\t *   {\n\t *     data: \"salary\",\n\t *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n\t *   }\n\t *\n\t * @namespace\n\t */\n\tDataTable.render = {\n\t\tdate: __mlHelper('toLocaleDateString'),\n\t\tdatetime: __mlHelper('toLocaleString'),\n\t\ttime: __mlHelper('toLocaleTimeString'),\n\t\tnumber: function(thousands, decimal, precision, prefix, postfix) {\n\t\t\t// Auto locale detection\n\t\t\tif (thousands === null || thousands === undefined) {\n\t\t\t\tthousands = __thousands;\n\t\t\t}\n\n\t\t\tif (decimal === null || decimal === undefined) {\n\t\t\t\tdecimal = __decimal;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdisplay: function(d) {\n\t\t\t\t\tif (typeof d !== 'number' && typeof d !== 'string') {\n\t\t\t\t\t\treturn d;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (d === '' || d === null) {\n\t\t\t\t\t\treturn d;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar negative = d < 0 ? '-' : '';\n\t\t\t\t\tvar flo = parseFloat(d);\n\n\t\t\t\t\t// If NaN then there isn't much formatting that we can do - just\n\t\t\t\t\t// return immediately, escaping any HTML (this was supposed to\n\t\t\t\t\t// be a number after all)\n\t\t\t\t\tif (isNaN(flo)) {\n\t\t\t\t\t\treturn __htmlEscapeEntities(d);\n\t\t\t\t\t}\n\n\t\t\t\t\tflo = flo.toFixed(precision);\n\t\t\t\t\td = Math.abs(flo);\n\n\t\t\t\t\tvar intPart = parseInt(d, 10);\n\t\t\t\t\tvar floatPart = precision ?\n\t\t\t\t\t\tdecimal + (d - intPart).toFixed(precision).substring(2) :\n\t\t\t\t\t\t'';\n\n\t\t\t\t\t// If zero, then can't have a negative prefix\n\t\t\t\t\tif (intPart === 0 && parseFloat(floatPart) === 0) {\n\t\t\t\t\t\tnegative = '';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn negative + (prefix || '') +\n\t\t\t\t\t\tintPart.toString().replace(\n\t\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\n\t\t\t\t\t\t) +\n\t\t\t\t\t\tfloatPart +\n\t\t\t\t\t\t(postfix || '');\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\t\ttext: function() {\n\t\t\treturn {\n\t\t\t\tdisplay: __htmlEscapeEntities,\n\t\t\t\tfilter: __htmlEscapeEntities\n\t\t\t};\n\t\t}\n\t};\n\n\n\t/*\n\t * This is really a good bit rubbish this method of exposing the internal methods\n\t * publicly... - To be fixed in 2.0 using methods on the prototype\n\t */\n\n\n\t/**\n\t * Create a wrapper function for exporting an internal functions to an external API.\n\t *  @param {string} fn API function name\n\t *  @returns {function} wrapped function\n\t *  @memberof DataTable#internal\n\t */\n\tfunction _fnExternApiFunc(fn) {\n\t\treturn function() {\n\t\t\tvar args = [_fnSettingsFromNode(this[DataTable.ext.iApiIndex])].concat(\n\t\t\t\tArray.prototype.slice.call(arguments)\n\t\t\t);\n\t\t\treturn DataTable.ext.internal[fn].apply(this, args);\n\t\t};\n\t}\n\n\n\t/**\n\t * Reference to internal functions for use by plug-in developers. Note that\n\t * these methods are references to internal functions and are considered to be\n\t * private. If you use these methods, be aware that they are liable to change\n\t * between versions.\n\t *  @namespace\n\t */\n\t$.extend(DataTable.ext.internal, {\n\t\t_fnExternApiFunc: _fnExternApiFunc,\n\t\t_fnBuildAjax: _fnBuildAjax,\n\t\t_fnAjaxUpdate: _fnAjaxUpdate,\n\t\t_fnAjaxParameters: _fnAjaxParameters,\n\t\t_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\n\t\t_fnAjaxDataSrc: _fnAjaxDataSrc,\n\t\t_fnAddColumn: _fnAddColumn,\n\t\t_fnColumnOptions: _fnColumnOptions,\n\t\t_fnAdjustColumnSizing: _fnAdjustColumnSizing,\n\t\t_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\n\t\t_fnColumnIndexToVisible: _fnColumnIndexToVisible,\n\t\t_fnVisbleColumns: _fnVisbleColumns,\n\t\t_fnGetColumns: _fnGetColumns,\n\t\t_fnColumnTypes: _fnColumnTypes,\n\t\t_fnApplyColumnDefs: _fnApplyColumnDefs,\n\t\t_fnHungarianMap: _fnHungarianMap,\n\t\t_fnCamelToHungarian: _fnCamelToHungarian,\n\t\t_fnLanguageCompat: _fnLanguageCompat,\n\t\t_fnBrowserDetect: _fnBrowserDetect,\n\t\t_fnAddData: _fnAddData,\n\t\t_fnAddTr: _fnAddTr,\n\t\t_fnNodeToDataIndex: _fnNodeToDataIndex,\n\t\t_fnNodeToColumnIndex: _fnNodeToColumnIndex,\n\t\t_fnGetCellData: _fnGetCellData,\n\t\t_fnSetCellData: _fnSetCellData,\n\t\t_fnSplitObjNotation: _fnSplitObjNotation,\n\t\t_fnGetObjectDataFn: _fnGetObjectDataFn,\n\t\t_fnSetObjectDataFn: _fnSetObjectDataFn,\n\t\t_fnGetDataMaster: _fnGetDataMaster,\n\t\t_fnClearTable: _fnClearTable,\n\t\t_fnDeleteIndex: _fnDeleteIndex,\n\t\t_fnInvalidate: _fnInvalidate,\n\t\t_fnGetRowElements: _fnGetRowElements,\n\t\t_fnCreateTr: _fnCreateTr,\n\t\t_fnBuildHead: _fnBuildHead,\n\t\t_fnDrawHead: _fnDrawHead,\n\t\t_fnDraw: _fnDraw,\n\t\t_fnReDraw: _fnReDraw,\n\t\t_fnAddOptionsHtml: _fnAddOptionsHtml,\n\t\t_fnDetectHeader: _fnDetectHeader,\n\t\t_fnGetUniqueThs: _fnGetUniqueThs,\n\t\t_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\n\t\t_fnFilterComplete: _fnFilterComplete,\n\t\t_fnFilterCustom: _fnFilterCustom,\n\t\t_fnFilterColumn: _fnFilterColumn,\n\t\t_fnFilter: _fnFilter,\n\t\t_fnFilterCreateSearch: _fnFilterCreateSearch,\n\t\t_fnEscapeRegex: _fnEscapeRegex,\n\t\t_fnFilterData: _fnFilterData,\n\t\t_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\n\t\t_fnUpdateInfo: _fnUpdateInfo,\n\t\t_fnInfoMacros: _fnInfoMacros,\n\t\t_fnInitialise: _fnInitialise,\n\t\t_fnInitComplete: _fnInitComplete,\n\t\t_fnLengthChange: _fnLengthChange,\n\t\t_fnFeatureHtmlLength: _fnFeatureHtmlLength,\n\t\t_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\n\t\t_fnPageChange: _fnPageChange,\n\t\t_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\n\t\t_fnProcessingDisplay: _fnProcessingDisplay,\n\t\t_fnFeatureHtmlTable: _fnFeatureHtmlTable,\n\t\t_fnScrollDraw: _fnScrollDraw,\n\t\t_fnApplyToChildren: _fnApplyToChildren,\n\t\t_fnCalculateColumnWidths: _fnCalculateColumnWidths,\n\t\t_fnThrottle: _fnThrottle,\n\t\t_fnConvertToWidth: _fnConvertToWidth,\n\t\t_fnGetWidestNode: _fnGetWidestNode,\n\t\t_fnGetMaxLenString: _fnGetMaxLenString,\n\t\t_fnStringToCss: _fnStringToCss,\n\t\t_fnSortFlatten: _fnSortFlatten,\n\t\t_fnSort: _fnSort,\n\t\t_fnSortAria: _fnSortAria,\n\t\t_fnSortListener: _fnSortListener,\n\t\t_fnSortAttachListener: _fnSortAttachListener,\n\t\t_fnSortingClasses: _fnSortingClasses,\n\t\t_fnSortData: _fnSortData,\n\t\t_fnSaveState: _fnSaveState,\n\t\t_fnLoadState: _fnLoadState,\n\t\t_fnImplementState: _fnImplementState,\n\t\t_fnSettingsFromNode: _fnSettingsFromNode,\n\t\t_fnLog: _fnLog,\n\t\t_fnMap: _fnMap,\n\t\t_fnBindAction: _fnBindAction,\n\t\t_fnCallbackReg: _fnCallbackReg,\n\t\t_fnCallbackFire: _fnCallbackFire,\n\t\t_fnLengthOverflow: _fnLengthOverflow,\n\t\t_fnRenderer: _fnRenderer,\n\t\t_fnDataSource: _fnDataSource,\n\t\t_fnRowAttributes: _fnRowAttributes,\n\t\t_fnExtend: _fnExtend,\n\t\t_fnCalculateEnd: function() {} // Used by a lot of plug-ins, but redundant\n\t\t// in 1.10, so this dead-end function is\n\t\t// added to prevent errors\n\t});\n\n\n\t// JQuery access\n\t$.fn.dataTable = DataTable;\n\n\t// Provide access to the host jQuery object (circular reference)\n\tDataTable.$ = $;\n\n\t// Legacy aliases\n\t$.fn.dataTableSettings = DataTable.settings;\n\t$.fn.dataTableExt = DataTable.ext;\n\n\t// With a capital `D` we return a DataTables API instance rather than a\n\t// jQuery object\n\t$.fn.DataTable = function(opts) {\n\t\treturn $(this).dataTable(opts).api();\n\t};\n\n\t// All properties that are available to $.fn.dataTable should also be\n\t// available on $.fn.DataTable\n\t$.each(DataTable, function(prop, val) {\n\t\t$.fn.DataTable[ prop ] = val;\n\t});\n\n\treturn DataTable;\n});\n"],"names":["define","$","_ext","_Api","_api_register","_api_registerPlural","DataTable","selector","options","this","sSelector","oOpts","api","_","rows","data","traditional","_fnSettingsFromNode","iApiIndex","fnAddData","redraw","Array","isArray","isPlainObject","add","row","undefined","draw","flatten","toArray","fnAdjustColumnSizing","bRedraw","columns","adjust","settings","scroll","oScroll","sX","sY","_fnScrollDraw","fnClearTable","clear","fnClose","nTr","child","hide","fnDeleteRow","target","callback","aoData","remove","call","fnDestroy","destroy","fnDraw","complete","fnFilter","sInput","iColumn","bRegex","bSmart","bShowGlobal","bCaseInsensitive","search","column","fnGetData","src","col","type","nodeName","toLowerCase","cell","fnGetNodes","iRow","node","nodes","fnGetPosition","toUpperCase","index","columnVisible","fnIsOpen","isShown","fnOpen","mHtml","sClass","show","fnPageChange","mAction","page","fnSetColumnVis","iCol","bShow","visible","fnSettings","fnSort","aaSort","order","fnSortListener","nNode","fnCallback","listener","fnUpdate","mData","mRow","bAction","fnVersionCheck","_that","emptyInit","len","length","fn","oApi","internal","ext","_fnExternApiFunc","each","iLen","oInit","_fnExtend","i","sId","getAttribute","bInitHandedOff","defaults","$this","_fnCompatOpts","_fnCompatCols","_fnCamelToHungarian","extend","allSettings","s","nTable","nTHead","parentNode","nTFoot","bRetrieve","bDestroy","oInstance","_fnLog","sTableId","id","splice","_unique","oSettings","models","style","width","push","dataTable","_fnLanguageCompat","oLanguage","aLengthMenu","iDisplayLength","_fnMap","oFeatures","_fnCallbackReg","fnDrawCallback","fnServerParams","fnStateSaveParams","fnStateLoadParams","fnStateLoaded","fnRowCallback","fnCreatedRow","fnHeaderCallback","fnFooterCallback","fnInitComplete","fnPreDrawCallback","rowIdFn","_fnGetObjectDataFn","rowId","_fnBrowserDetect","oClasses","classes","addClass","sTable","iInitDisplayStart","iDisplayStart","_iDisplayStart","iDeferLoading","bDeferLoading","tmp","_iRecordsDisplay","_iRecordsTotal","sUrl","ajax","dataType","url","success","json","_fnCallbackFire","_fnInitialise","error","asStripeClasses","sStripeOdd","sStripeEven","stripeClasses","rowOne","children","find","eq","inArray","map","el","hasClass","removeClass","join","asDestroyStripes","slice","aoColumnsInit","anThs","nThead","getElementsByTagName","_fnDetectHeader","aoHeader","_fnGetUniqueThs","aoColumns","_fnAddColumn","_fnApplyColumnDefs","aoColumnDefs","oDef","_fnColumnOptions","a","name","sort","filter","features","loadedInit","aaSorting","sorting","asSorting","_fnSortingClasses","bSort","bSorted","aSort","_fnSortFlatten","sortedColumns","val","dir","_fnSortAria","_fnDataSource","bDeferRender","captions","_captionSide","css","thead","appendTo","tbody","insertAfter","nTBody","tfoot","sNoFooter","aoFooter","aaData","_fnAddData","_fnAddTr","aiDisplay","aiDisplayMaster","bInitialised","_fnSaveState","bStateSave","_fnLoadState","_re_dic","_re_new_lines","_re_html","_re_date","_re_escape_regex","RegExp","_re_formatted_numeric","_empty","d","_intVal","integer","parseInt","isNaN","isFinite","_numToDecimal","num","decimalPoint","_fnEscapeRegex","replace","_isNumber","formatted","strType","parseFloat","_htmlNumeric","html","_isHtml","_stripHtml","_pluck","prop","prop2","out","ien","_pluck_order","_range","start","end","_removeEmpty","sorted","last","_areAllUnique","j","k","again","_flatten","_includes","indexOf","_fnHungarianMap","o","match","newKey","key","_hungarianMap","user","force","hungarianKey","charAt","lang","defaultDecimal","sDecimal","_addNumericSort","zeroRecords","sZeroRecords","sEmptyTable","sLoadingRecords","sInfoThousands","sThousands","decimal","arg","Object","prototype","toString","includes","String","trim","util","throttle","freq","timer","frequency","that","now","Date","args","arguments","clearTimeout","setTimeout","apply","escapeRegex","set","source","meta","setData","b","arrayNotation","funcNotation","innerSrc","_fnSplitObjNotation","aLast","Error","__reArray","__reFn","jLen","get","t","fetchData","substring","_fnCompatMap","knew","old","init","sScrollX","scrollX","searchCols","aoSearchCols","oSearch","dataSort","aDataSort","__browser","browser","n","position","top","left","window","scrollLeft","height","overflow","append","outer","inner","barWidth","offsetWidth","clientWidth","bScrollOversize","bScrollbarLeft","Math","round","offset","bBounding","getBoundingClientRect","oBrowser","iBarWidth","_fnReduce","inc","value","isSet","hasOwnProperty","nTh","oDefaults","oCol","oColumn","document","createElement","sTitle","innerHTML","idx","aoPreSearchCols","oOptions","th","sWidthOrig","attr","mDataProp","sType","_sManualType","className","origClass","iDataSort","mDataSrc","mRender","attrTest","_bAttrSrc","_setter","rowData","innerData","fnSetData","_fnSetObjectDataFn","_rowReadObject","bSortable","sSortableNone","bAsc","bDesc","sSortingClass","sSortableAsc","sSortingClassJUI","sSortJUIAscAllowed","sSortableDesc","sSortJUIDescAllowed","sSortable","sSortJUI","_fnAdjustColumnSizing","bAutoWidth","_fnCalculateColumnWidths","sWidth","_fnVisibleToColumnIndex","iMatch","aiVis","_fnGetColumns","_fnColumnIndexToVisible","iPos","_fnVisbleColumns","vis","bVisible","sParam","_fnColumnTypes","jen","ken","detectedType","cache","types","detect","_fnGetCellData","aoColDefs","aoCols","kLen","def","aTargets","targets","aDataIn","anTds","oData","oRow","_aData","aIds","_fnCreateTr","trs","_fnGetRowElements","cells","rowIdx","colIdx","iDraw","defaultContent","sDefaultContent","cellData","iDrawError","fomatters","_fnSetCellData","str","_fnGetDataMaster","_fnClearTable","_fnDeleteIndex","iTarget","iTargetIndex","_fnInvalidate","cellWrite","childNodes","removeChild","firstChild","anCells","_aSortData","_aFilterData","cols","_fnRowAttributes","contents","tds","td","objectRead","setter","cellProcess","nextSibling","rowNode","nTrIn","nTd","create","_DT_RowIndex","sCellType","_DT_CellIndex","appendChild","fnCreatedCell","tr","DT_RowClass","split","__rowc","concat","DT_RowAttr","DT_RowData","_fnBuildHead","createHeader","iTabIndex","_fnSortAttachListener","_fnRenderer","sHeaderTH","sFooterTH","nTf","_fnDrawHead","aoSource","bIncludeHidden","nLocalTr","iRowspan","iColspan","aoLocal","aApplied","iColumns","_fnDraw","ajaxComplete","bServerSide","fnRecordsDisplay","_fnStart","aPreDraw","anRows","iRowCount","iStripes","oLang","iDisplayEnd","fnDisplayEnd","bDrawing","_fnProcessingDisplay","bDestroying","_fnAjaxUpdate","iStart","iEnd","iDataIndex","nRow","sStripe","_sRowStripe","sZero","fnRecordsTotal","sRowEmpty","body","detach","bFiltered","_fnReDraw","holdPosition","bFilter","_fnSort","_fnFilterComplete","oPreviousSearch","_drawHold","_fnAddOptionsHtml","table","holding","insertBefore","insert","sWrapper","nHolding","nTableWrapper","nTableReinsertBefore","featureNode","cOption","nNewNode","cNext","sAttr","aDom","sDom","sJUIHeader","sJUIFooter","aSplit","substr","parent","bPaginate","bLengthChange","_fnFeatureHtmlLength","_fnFeatureHtmlFilter","bProcessing","_fnFeatureHtmlProcessing","_fnFeatureHtmlTable","bInfo","_fnFeatureHtmlInfo","_fnFeatureHtmlPaginate","feature","aoFeatures","cFeature","fnInit","aanFeatures","replaceWith","aLayout","nCell","l","iColShifted","bUnique","nTrs","fnShiftCol","nHeader","aReturn","unique","bSortCellsTop","_fnBuildAjax","rbracket","ajaxData","instance","status","jqXHR","_fnAjaxDataSrc","sError","newData","baseAjax","sServerMethod","xhr","thrown","ret","readyState","oAjaxData","fnServerData","sAjaxSource","_fnAjaxParameters","_fnAjaxUpdateDraw","dataProp","columnSearch","columnCount","preSearch","preColSearch","displayStart","displayLength","_iDisplayLength","param","sSearch","regex","sName","searchable","bSearchable","orderable","legacy","compat","modern","recordsTotal","recordsFiltered","_bInitComplete","_fnInitComplete","write","dataSrc","sAjaxDataProp","tableId","language","previousSearch","input","sFilterInput","f","sFilter","searchFn","event","return","searchDelay","jqFilter","sSearchPlaceholder","on","_fnThrottle","e","keyCode","ev","activeElement","oInput","iForce","oPrevSearch","aoPrevSearch","fnSaveFilter","oFilter","fnRegex","bEscapeRegex","_fnFilter","_fnFilterColumn","_fnFilterCustom","filters","displayRows","merge","searchStr","smart","caseInsensitive","display","rpSearch","_fnFilterCreateSearch","test","invalidated","prevSearch","displayMaster","filtered","_fnFilterData","_sFilterRow","word","m","__filter_div","__filter_div_textContent","textContent","filterData","wasInvalidated","innerText","_fnSearchToCamel","obj","_fnSearchToHung","tid","sInfo","aoDrawCallback","_fnUpdateInfo","max","total","sInfoEmpty","sInfoFiltered","_fnInfoMacros","sInfoPostFix","fnInfoCallback","formatter","fnFormatNumber","all","ceil","iAjaxStart","deferLoading","_fnStringToCss","aData","_fnLengthChange","_fnLengthOverflow","menu","d2","lengths","select","sLengthSelect","Option","div","sLength","sLengthMenu","outerHTML","sPaginationType","plugin","pager","sPaging","p","visRecords","pages","buttons","_fnPageChange","action","records","floor","changed","r","sProcessing","scrollY","caption","captionSide","headerClone","cloneNode","footerClone","footer","_div","size","scroller","sScrollWrapper","sScrollHead","border","sScrollHeadInner","sXInner","removeAttr","sScrollBody","sScrollFoot","sScrollFootInner","scrollHead","scrollBody","scrollFoot","bCollapse","nScrollHead","nScrollBody","nScrollFoot","headerTrgEls","footerTrgEls","headerSrcEls","footerSrcEls","headerCopy","footerCopy","correction","sanityWidth","scrollXInner","divHeader","divHeaderStyle","divHeaderInner","divHeaderInnerStyle","divHeaderTable","divBodyEl","divBody","divBodyStyle","divFooterInner","divFooterTable","header","tableEl","tableStyle","ie67","headerWidths","footerWidths","headerContent","footerContent","zeroOut","nSizer","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","scrollBarVis","scrollHeight","clientHeight","clone","prependTo","_fnApplyToChildren","outerWidth","offsetHeight","getComputedStyle","nToSize","iOuterWidth","bScrolling","padding","trigger","scrollTop","an1","an2","nNode1","nNode2","nodeType","__re_html_remove","columnIdx","visibleColumns","headerCells","tableWidthAttr","tableContainer","userInputs","styleWidth","_fnConvertToWidth","tmpTable","margin","_fnGetWidestNode","sContentPadding","holder","right","bounding","_reszEvt","bindResize","sInstance","_fnGetMaxLenString","maxIdx","srcCol","fixed","aaSortingFixed","fixedObj","nestedSort","pre","post","_idx","sortCol","aiOrig","oExtSort","formatters","_fnSortData","x","y","dataA","dataB","label","nextSort","oAria","ariaTitle","removeAttribute","setAttribute","sSortAscending","sSortDescending","_fnSortListener","nextSortIdx","next","bSortMulti","sortIdx","attachTo","_fnBindAction","shiftKey","oldSort","aLastSort","sortClass","sSortColumn","bSortClasses","customData","customSort","sSortDataType","_bLoadingState","state","time","oSavedState","fnStateSaveCallback","fnStateLoadCallback","_fnImplementState","Api","abStateLoad","duration","iStateDuration","oLoadedState","level","msg","tn","console","log","sErrMode","errMode","alert","mappedName","extender","breakRefs","which","preventDefault","sStore","callbackArr","eventName","reverse","Event","result","renderer","host","__apiStruct","__arrayProto","context","ctxSettings","mixed","jq","tables","_toSettings","opts","any","count","ctx","iterator","alwaysNew","items","item","apiInst","_selector_row_indexes","apiSelector","lastIndexOf","pluck","pop","reduce","reduceRight","shift","to$","toJQuery","unshift","scope","__dt_wrapper","struct","methodScoping","struc","methodExt","propExt","register","method","heir","registerPlural","pluralName","singularName","__table_selector","paging","info","__reload","one","abort","resetPaging","_selector_run","selectFn","res","selectorType","_selector_opts","_selector_first","inst","displayFiltered","displayFilteredMap","sel","selInt","cellIdx","closest","rowObj","__row_selector","hash","thatIdx","loopRow","loopCells","newRows","modRows","idFn","ids","_detailsShow","childRows","loaded","every","__details_state","__details_remove","_details","__details_display","__details_events","off","drawEvent","_child_obj","klass","addRow","created","colSpan","__details_add","_child_mth","__re_column_selector","__columnData","r1","r2","names","visColumns","jqResult","__column_selector","calc","__setColumnVis","rowSelector","columnSelector","allCells","fnSelector","__cell_selector","internalOpts","cellsNoOpts","selected","caseInsen","versionCheck","version","iThis","iThat","aThis","aThat","isDataTable","fnIsDataTable","is","head","foot","fnTables","camelToHungarian","jqRows","jqTable","jqTbody","jqWrapper","orig","removedMethod","sDestroyWidth","arg1","arg2","arg3","arg4","token","plural","resolved","toFormat","JSON","parse","sessionStorage","localStorage","getItem","location","pathname","setItem","stringify","paginate","min","builder","pageButton","oJUIClasses","sVersion","afnFiltering","aTypes","ofnSearch","oSort","afnSortData","oStdClasses","oPagination","extPagination","_numbers","numbers","numbers_length","half","DT_el","simple","full","simple_numbers","full_numbers","first_last_numbers","btnDisplay","btnClass","activeEl","oPaginate","aria","counter","attach","container","button","tabIndex","disabledClass","sPageButtonDisabled","clickHandler","sFirst","sPrevious","sNext","sLast","sPageButtonActive","sPageButton","empty","parsed","string","__numericReplace","decimalPlace","re1","re2","Infinity","ts","sSortAsc","sSortDesc","jqueryui","sSortJUIWrapper","sSortIcon","sSortJUIAsc","sSortJUIDesc","__htmlEscapeEntities","__mld","dt","momentFn","luxonFn","dateFn","moment","luxon","__mlWarning","__mldObj","format","locale","utc","isValid","DateTime","fromFormat","fromISO","setLocale","__mlHelper","localeString","from","to","typeName","valueOf","local","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","__thousands","__decimal","Intl","NumberFormat","formatToParts","datetime","render","date","number","thousands","precision","prefix","postfix","negative","flo","toFixed","abs","intPart","floatPart","text","_fnNodeToDataIndex","_fnNodeToColumnIndex","_fnCalculateEnd","dataTableSettings","dataTableExt"],"mappings":"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"}