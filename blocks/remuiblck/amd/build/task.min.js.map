{"version":3,"sources":["../src/task.js"],"names":["define","$","ajax","Notification","Templates","ModalFactory","ModalEvents","Fragment","ModalTaskPopup","RemuiblckEvents","TaskFilters","TaskView","SELECTORS","ADD_TASK","TASK","TASK_SUBJECT","TASK_EDIT","TASK_POPUP","TASK_DURATION_FILTER","TASK_STATUS_FILTER","TASK_FILTER_OPTION","PROMISES","CREATE_NEW_TASK","settings","call","methodname","args","EDIT_TASK","COMPLETE_TASK","taskid","status","id","DELETE_TASK","NOTIFY_USERS","type","FRAGMENTS","GET_TASK_FORM","loadFragment","contextid","closeTaskPopup","modal","hide","destroy","getSubject","root","task","find","text","toast","position","message","TOASTER_CONTAINER","length","append","TOASTER_CONTAINER_ID","newToast","setTimeout","addClass","removeClass","remove","deleteTask","taskModal","subject","create","types","SAVE_CANCEL","title","M","util","get_string","body","done","setSaveButtonText","getRoot","on","save","response","loadTasks","exception","name","msg","fail","cancel","show","notifyUsers","callback","arguments","ex","taskPopup","TYPE","templateContext","new","setBody","hidden","TASK_SAVE","valid_settings","saving","get_task_settings","notify","TASK_DELETE","TASK_CANCEL","getTaskDuration","getTaskStatus","completeTask","toggleTaskProcessing","prop","initialiseEvents","e","target","is","data","parent","updateContainers","button","detach","panelHeading","closest","PANEL","PANEL_HEADING","panelActions","PANEL_ACTIONS","prepend","taskProcessing","TASK_PROCESSING","panel","init","document","ready"],"mappings":"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","sourcesContent":["/* eslint-disable no-dupe-keys */\n/* eslint-disable quote-props */\n/* eslint-disable no-eq-null */\n/* eslint-disable max-len */\n/* eslint-disable no-undef */\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/notification',\n    'core/templates',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/fragment',\n    'block_remuiblck/modal_task_popup',\n    'block_remuiblck/events',\n    'block_remuiblck/task_filters',\n    'block_remuiblck/task_view'\n], function(\n    $,\n    ajax,\n    Notification,\n    Templates,\n    ModalFactory,\n    ModalEvents,\n    Fragment,\n    ModalTaskPopup,\n    RemuiblckEvents,\n    TaskFilters,\n    TaskView\n) {\n    var SELECTORS = {\n        ADD_TASK: '[data-region=\"add-task\"]',\n        TASK: '[data-region=\"task-item\"]',\n        TASK_SUBJECT: '[data-toggle=\"collapse\"]',\n        TASK_EDIT: '[data-action=\"edit\"]',\n        TASK_POPUP: \"[data-region='task-body']\",\n        TASK_DURATION_FILTER: '[data-region=\"task-duration-filter\"]',\n        TASK_STATUS_FILTER: '[data-region=\"task-status-filter\"]',\n        TASK_FILTER_OPTION: '[data-value]',\n        TASK_SUBJECT: '.item-title .panel-heading span',\n        PANEL: '.panel',\n        PANEL_HEADING: '.panel-heading',\n        PANEL_ACTIONS: 'panel-actions',\n        TOASTER_CONTAINER: '[aria-task-toasters]',\n        TOASTER_CONTAINER_ID: 'aria-task-toasters',\n        TASK_PROCESSING: '.block-processing',\n    };\n\n    var PROMISES = {\n        /**\n         * Create new task promise call\n         * @param  {JSON} settings task settings object\n         * @return {promise} ajax promise\n         */\n        CREATE_NEW_TASK: function(settings) {\n            return ajax.call([{\n                methodname: 'block_remuiblck_create_new_task',\n                args: settings\n            }])[0];\n        },\n\n        /**\n         * Edit task settings promise call\n         * @param  {object} settings task settings object\n         * @return {promise} ajax promise\n         */\n        EDIT_TASK: function(settings) {\n            return ajax.call([{\n                methodname: 'block_remuiblck_edit_task',\n                args: settings\n            }])[0];\n        },\n\n        /**\n         * Toggle task completion promise call\n         * @param  {int}     taskid id of task\n         * @param  {bool}    status true for completed and false for incomplete\n         * @return {promise}        ajax promise\n         */\n        COMPLETE_TASK: function(taskid, status) {\n            return ajax.call([{\n                methodname: 'block_remuiblck_complete_task',\n                args: {\n                    id: taskid,\n                    status: status\n                }\n            }])[0];\n        },\n\n        /**\n         * Delete existing task\n         * @param  {int}     taskid task id\n         * @return {promise}        ajax promise\n         */\n        DELETE_TASK: function(taskid) {\n            return ajax.call([{\n                methodname: 'block_remuiblck_delete_task',\n                args: {\n                    id: taskid\n                }\n            }])[0];\n        },\n\n        /**\n         * Notify users about task\n         * @param {int}      taskid task id\n         * @param {string}   type   type of notification from one of these [create|complete|incomplete]\n         * @return {promise}        ajax promise\n         */\n        NOTIFY_USERS: function(taskid, type) {\n            return ajax.call([{\n                methodname: 'block_remuiblck_task_notify_users',\n                args: {\n                    id: taskid,\n                    type: type\n                }\n            }])[0];\n        }\n    };\n    var FRAGMENTS = {\n        /**\n         * Fetch task form fragment call\n         * @param  {int}     taskid task id\n         * @return {promise}        fragment promise call\n         */\n        GET_TASK_FORM: function(taskid) {\n            return Fragment.loadFragment(\n                'block_remuiblck',\n                'task_form',\n                contextid,\n                {\n                    taskid: taskid\n                }\n            );\n        }\n    };\n\n    /**\n     * Close task popup modal\n     * @param {ModalFactory} modal modal factory object\n     */\n    var closeTaskPopup = function(modal) {\n        modal.hide();\n        modal.destroy();\n    };\n\n    /**\n     * Get subject of task on the basis of id\n     * It check whether task is present in task list\n     * @param  {string} root   root container id\n     * @param  {[type]} taskid task id\n     * @return {string}        task subject\n     */\n    var getSubject = function(root, taskid) {\n        let task = $(root).find(SELECTORS.TASK + '[data-id=\"' + taskid + '\"]');\n        if (task) {\n            return task.find(SELECTORS.TASK_SUBJECT).text();\n        }\n        return taskid;\n    };\n\n    /**\n     * Show toaster\n     * @param  {string} root     root container id\n     * @param  {[type]} position position of toaster\n     * @param  {[type]} type     type of toaster\n     * @param  {[type]} message  message to show in toater\n     */\n    var toast = function(root, position, type, message) {\n        if ($(root).find('.' + position + SELECTORS.TOASTER_CONTAINER).length == 0) {\n            $(root).append('<div class=\"toaster ' + position + '\"' + SELECTORS.TOASTER_CONTAINER_ID + 'role=\"alert\"></div>');\n        }\n        let newToast = $('<div class=\"toast toast-just-text ' + type + ' toast-shadow\"><div class=\"toast-message\">' + message + '</div></div>');\n        $(root).find(SELECTORS.TOASTER_CONTAINER).append(newToast);\n        setTimeout(function() {\n            newToast.addClass('show');\n        }, 0);\n        setTimeout(function() {\n            newToast.removeClass('show');\n            setTimeout(function() {\n                newToast.remove();\n            }, 250);\n        }, 2000);\n    };\n\n    /**\n     * Delete task\n     * @param {string} root   block root selector\n     * @param {int}    taskid id of task\n     * @param {taskModal} taskModal\n     */\n    var deleteTask = function(root, taskid, taskModal) {\n        let subject = getSubject(root, taskid);\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: M.util.get_string('deletetask', 'block_remuiblck'),\n            body: M.util.get_string('deletetaskmessage', 'block_remuiblck', subject)\n        }, $('#create'))\n        .done(function(modal) {\n            modal.setSaveButtonText(M.util.get_string('ok', 'moodle'));\n            modal.getRoot().on(ModalEvents.save, function() {\n                PROMISES.DELETE_TASK(taskid).done(function(response) {\n                    if (response.status == true) {\n                        closeTaskPopup(modal);\n                        closeTaskPopup(taskModal);\n                        loadTasks(root);\n                        toast(root, 'toast-top-center', 'toast-error', M.util.get_string('taskdeleted', 'block_remuiblck', subject));\n                        return;\n                    }\n                    Notification.exception({\n                        name: response.msg\n                    });\n                }).fail(Notification.exception);\n            }).on(ModalEvents.cancel, function() {\n                closeTaskPopup(modal);\n            });\n            modal.show();\n        })\n        .fail(Notification.exception);\n    };\n\n    /**\n     * Notify users about task. This call ajax request\n     * @param {int}      taskid   task id\n     * @param {string}   type     type of notification from one of these [create|complete|incomplete]\n     * callback call to execute after notify completion\n     */\n    var notifyUsers = function(taskid, type) {\n        var callback = arguments.length > 1 && arguments[2] !== undefined ? arguments[2] : null;\n        PROMISES.NOTIFY_USERS(taskid, type).done(callback).fail(function(ex) {\n            Notification.exception(ex);\n            if (callback != null) {\n                callback();\n            }\n        });\n    };\n\n    /**\n     * Open task popup for creating new task editing existing\n     * @param {DOM} root   block DOM object\n     * @param {int} taskid task id. -1 if new task\n     */\n    var taskPopup = function(root, taskid) {\n        ModalFactory.create(\n            {\n                type: ModalTaskPopup.TYPE,\n                templateContext: {\n                    new: taskid == -1\n                }\n            },\n            $('#create')\n        ).done(function(modal) {\n            modal.show();\n            modal.setBody(FRAGMENTS.GET_TASK_FORM(taskid));\n            modal.getRoot().on(ModalEvents.hidden, function() {\n\n                // Handle modal close event\n                closeTaskPopup(modal);\n            }).on(RemuiblckEvents.TASK_SAVE, function() {\n\n                if (!modal.valid_settings()) {\n                    return;\n                }\n                modal.saving();\n                // Handle task save event\n                let settings = modal.get_task_settings();\n                if (taskid == -1) {\n                    PROMISES.CREATE_NEW_TASK(settings).done(function(response) {\n                        if (settings.notify == true) {\n                            notifyUsers(response, 'create', function() {\n                                closeTaskPopup(modal);\n                                loadTasks(root);\n                            });\n                            return;\n                        }\n                        closeTaskPopup(modal);\n                        loadTasks(root);\n                    }).fail(function(ex) {\n                        modal.saving(false);\n                        Notification.exception(ex);\n                    });\n                    return;\n                }\n                settings.id = taskid;\n                PROMISES.EDIT_TASK(settings).done(function() {\n                    closeTaskPopup(modal);\n                    loadTasks(root);\n                }).fail(function(ex) {\n                    modal.saving(false);\n                    Notification.exception(ex);\n                });\n            }).on(RemuiblckEvents.TASK_DELETE, function() {\n\n                // Handle task delete event\n                deleteTask(root, taskid, modal);\n            }).on(RemuiblckEvents.TASK_CANCEL, function() {\n\n                // Handle task cancel event\n                closeTaskPopup(modal);\n            });\n        });\n    };\n\n    /**\n     * Load tasks in task list\n     * @param {DOM} root block DOM object\n     */\n    var loadTasks = function(root) {\n        TaskView.loadTasks(root, TaskFilters.getTaskDuration(root), TaskFilters.getTaskStatus(root));\n    };\n\n    /**\n     * Toggle task completion\n     * @param {string} root   block root selector\n     * @param {int}    taskid id of task\n     * @param {bool}   status true for completed and false for incomplete\n     */\n    var completeTask = function(root, taskid, status) {\n        TaskView.toggleTaskProcessing(root, true);\n        PROMISES.COMPLETE_TASK(taskid, status).done(function(response) {\n            if (response.status == true) {\n                loadTasks(root);\n                return;\n            }\n            $(root + ' ' + SELECTORS.TASK + '[data-id=\"' + taskid + '\"]').find('input').prop('checked', !status);\n            Notification.exception({\n                name: response.msg\n            });\n            TaskView.toggleTaskProcessing(root);\n        }).fail(function(ex) {\n            Notification.exception(ex);\n            $(root + ' ' + SELECTORS.TASK + '[data-id=\"' + taskid + '\"]').find('input').prop('checked', !status);\n            TaskView.toggleTaskProcessing(root);\n        });\n    };\n\n\n    /**\n     * Initialise dom events\n     * @param {DOM} root block DOM object\n     */\n    var initialiseEvents = function(root) {\n        $('body').on('click', SELECTORS.ADD_TASK, function() {\n            taskPopup(root, -1);\n        }).on('click', root + ' ' + SELECTORS.TASK, function(e) {\n            if ($(e.target).is('input')) {\n                completeTask(root, $(this).data('id'), $(e.target).is(':checked'));\n                return;\n            }\n            if ($(e.target).is(SELECTORS.TASK_SUBJECT)) {\n                return;\n            }\n            if ($(e.target).is(SELECTORS.TASK_EDIT) || $(e.target).parent().is(SELECTORS.TASK_EDIT)) {\n                taskPopup(root, $(this).data('id'));\n            }\n        });\n    };\n\n    var updateContainers = function(root) {\n        // Move add button panel heading\n        let button = $(root).find(SELECTORS.ADD_TASK).detach();\n        let panelHeading = $(root).closest(SELECTORS.PANEL).find(SELECTORS.PANEL_HEADING);\n        let panelActions = $(panelHeading).find('.' + SELECTORS.PANEL_ACTIONS);\n        if (panelActions.length == 0) {\n            panelActions = $('<div class=\"' + SELECTORS.PANEL_ACTIONS + '\"></div>');\n            panelHeading.prepend(panelActions);\n        }\n        panelActions.prepend(button);\n        button.removeClass('d-none');\n\n        let taskProcessing = $(root).find(SELECTORS.TASK_PROCESSING).detach();\n        let panel = $(panelHeading).parent(SELECTORS.PANEL);\n        panel.prepend(taskProcessing);\n    };\n\n    /**\n     * Initialise tasks\n     * @param {DOM} root block DOM object\n     */\n    var init = function(root) {\n        $(document).ready(function() {\n            initialiseEvents(root);\n            updateContainers(root);\n        });\n        TaskView.init(root);\n        TaskFilters.init(root);\n    };\n    return {\n        init: init\n    };\n});\n"],"file":"task.min.js"}