{"version":3,"sources":["../src/task_filters.js"],"names":["define","$","CustomEvents","Notification","RemuiblckEvents","TaskView","SELECTORS","TASK_DURATION_FILTER","TASK_STATUS_FILTER","TASK_SEARCH_FILTER","TASK_CANCEL_SEARCH","TASK_FILTER_OPTION","registerTaskDurationFilter","root","taskDurationFilterContainer","find","events","activate","on","e","data","option","target","closest","hasClass","originalEvent","preventDefault","trigger","TASK_DURATION_FILTER_CHANGE","loadTasks","getTaskStatus","getTaskSearch","getTaskDuration","registerTaskStatusFilter","taskStatusFilterContainer","TASK_STATUS_FILTER_CHANGE","registerTaskSearchFilter","taskSearchFilterContainer","TASK_SEARCH_FILTER_CHANGE","val","init"],"mappings":"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","sourcesContent":["define([\n    'jquery',\n    'core/custom_interaction_events',\n    'core/notification',\n    'block_remuiblck/events',\n    'block_remuiblck/task_view'\n], function(\n    $,\n    CustomEvents,\n    Notification,\n    RemuiblckEvents,\n    TaskView\n) {\n    var SELECTORS = {\n        TASK_DURATION_FILTER: '[data-region=\"task-duration-filter\"]',\n        TASK_STATUS_FILTER: '[data-region=\"task-status-filter\"]',\n        TASK_SEARCH_FILTER: '[data-region=\"task-search-filter\"]',\n        TASK_CANCEL_SEARCH: '[data-region=\"cancel-result\"]',\n        TASK_FILTER_OPTION: '[data-value]'\n    };\n\n    /**\n     * Event listener for the day selector (\"Next 7 days\", \"Next 30 days\", etc).\n     *\n     * @param {object} root The root element for the timeline block\n     */\n    var registerTaskDurationFilter = function(root) {\n        var taskDurationFilterContainer = $(root).find(SELECTORS.TASK_DURATION_FILTER);\n        CustomEvents.define(taskDurationFilterContainer, [CustomEvents.events.activate]);\n        taskDurationFilterContainer.on(\n            CustomEvents.events.activate,\n            SELECTORS.TASK_FILTER_OPTION,\n            function(e, data) {\n\n                var option = $(e.target).closest(SELECTORS.TASK_FILTER_OPTION);\n\n                if (option.hasClass('active')) {\n                    // If it's already active then we don't need to do anything.\n                    data.originalEvent.preventDefault();\n                    return;\n                }\n\n                $(e.target).trigger(RemuiblckEvents.TASK_DURATION_FILTER_CHANGE);\n\n                data.originalEvent.preventDefault();\n\n                TaskView.loadTasks(root, option.data('value'), getTaskStatus(root), getTaskSearch(root));\n            }\n        );\n    };\n\n    /**\n     * Get task duration dropdown selection\n     * @param  {DOM} root block DOM object\n     * @return {string} selected duration option\n     */\n    var getTaskDuration = function(root) {\n        return $(root).find(SELECTORS.TASK_DURATION_FILTER).find(SELECTORS.TASK_FILTER_OPTION + '.active').data('value');\n    };\n\n    /**\n     * Event listener for the day selector (\"Next 7 days\", \"Next 30 days\", etc).\n     *\n     * @param {object} root The root element for the timeline block\n     */\n    var registerTaskStatusFilter = function(root) {\n        var taskStatusFilterContainer = $(root).find(SELECTORS.TASK_STATUS_FILTER);\n        CustomEvents.define(taskStatusFilterContainer, [CustomEvents.events.activate]);\n        taskStatusFilterContainer.on(\n            CustomEvents.events.activate,\n            SELECTORS.TASK_FILTER_OPTION,\n            function(e, data) {\n\n                var option = $(e.target).closest(SELECTORS.TASK_FILTER_OPTION);\n\n                if (option.hasClass('active')) {\n                    // If it's already active then we don't need to do anything.\n                    data.originalEvent.preventDefault();\n                    return;\n                }\n\n                $(e.target).trigger(RemuiblckEvents.TASK_STATUS_FILTER_CHANGE);\n\n                data.originalEvent.preventDefault();\n\n                TaskView.loadTasks(root, getTaskDuration(root), option.data('value'), getTaskSearch(root));\n            }\n        );\n    };\n\n    /**\n     * Get task status dropdown selection\n     * @param {DOM} root block DOM object\n     * @return {string} selected status option\n     */\n    var getTaskStatus = function(root) {\n        return $(root).find(SELECTORS.TASK_STATUS_FILTER).find(SELECTORS.TASK_FILTER_OPTION + '.active').data('value');\n    };\n\n    /**\n     * Event listener for the search input\n     *\n     * @param {object} root The root element for the timeline block\n     */\n    var registerTaskSearchFilter = function(root) {\n        var taskSearchFilterContainer = $(root).find(SELECTORS.TASK_SEARCH_FILTER);\n        taskSearchFilterContainer.on(\n            RemuiblckEvents.TASK_SEARCH_FILTER_CHANGE,\n            function() {\n                TaskView.loadTasks(root, getTaskDuration(root), getTaskStatus(root), $(this).val());\n            }\n        );\n    };\n\n    /**\n     * Get task search input\n     * @param {DOM} root block DOM object\n     * @return {string} search query\n     */\n    var getTaskSearch = function(root) {\n        return $(root).find(SELECTORS.TASK_SEARCH_FILTER).val();\n    };\n\n    /**\n     * Initialise task filters events\n     * @param {DOM} root block DOM object\n     */\n    var init = function(root) {\n        registerTaskDurationFilter(root);\n        registerTaskStatusFilter(root);\n        registerTaskSearchFilter(root);\n        $('body').on('click', SELECTORS.TASK_CANCEL_SEARCH, function(e) {\n            e.preventDefault();\n            $(root).find(SELECTORS.TASK_SEARCH_FILTER).val('').trigger('input');\n            return;\n        });\n    };\n    return {\n        init: init,\n        getTaskDuration: getTaskDuration,\n        getTaskStatus: getTaskStatus\n    };\n});\n"],"file":"task_filters.min.js"}