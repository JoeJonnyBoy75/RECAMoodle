{"version":3,"sources":["../src/modal_task_popup.js"],"names":["define","$","Notification","CustomEvents","Modal","ModalRegistry","RemuiblckEvents","registered","SELECTORS","SAVE_BUTTON","DELETE_BUTTON","CANCEL_BUTTON","SUBJECT","SUMMARY","DAY","MONTH","YEAR","VISIBLE","NOTIFY","USERS","ELEMENT_ROW","ERROR_FEEDBACK","TASK","root","call","getFooter","find","length","exception","message","M","util","get_string","TYPE","prototype","Object","create","constructor","registerEventListeners","_this","getModal","on","events","activate","trigger","TASK_SAVE","TASK_DELETE","TASK_CANCEL","valid_settings","valid","subject","val","dispatchEvent","CustomEvent","get_task_settings","settings","summary","timedue","get_date","modal","datetime","month","day","navigator","vendor","indexOf","Date","parse","getTime","visible","is","notify","users","saving","action","arguments","button","text","attr","removeAttr","register"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable camelcase */\ndefine([\n    'jquery',\n    'core/notification',\n    'core/custom_interaction_events',\n    'core/modal',\n    'core/modal_registry',\n    'block_remuiblck/events'\n], function(\n    $,\n    Notification,\n    CustomEvents,\n    Modal,\n    ModalRegistry,\n    RemuiblckEvents\n) {\n    var registered = false;\n    var SELECTORS = {\n        SAVE_BUTTON: '[data-action=\"save\"]',\n        DELETE_BUTTON: '[data-action=\"delete\"]',\n        CANCEL_BUTTON: '[data-action=\"cancel\"]',\n        SUBJECT: '[name=\"subject\"]',\n        SUMMARY: '[name=\"summary\"]',\n        DAY: '[name=\"timedue[day]\"]',\n        MONTH: '[name=\"timedue[month]\"]',\n        YEAR: '[name=\"timedue[year]\"]',\n        VISIBLE: '[name=\"visible\"]',\n        NOTIFY: '[name=\"notify\"]',\n        USERS: '[name=\"userlist[]\"]',\n        ELEMENT_ROW: '.fitem',\n        ERROR_FEEDBACK: '.form-control-feedback'\n    };\n\n    /**\n     * Constructor for the Modal.\n     *\n     * @param {object} root The root jQuery element for the modal\n     */\n    var TASK = function(root) {\n        Modal.call(this, root);\n\n        if (!this.getFooter().find(SELECTORS.SAVE_BUTTON).length) {\n            Notification.exception({\n                message: M.util.get_string('nosavebutton', 'block_remuiblck')\n            });\n        }\n\n    };\n\n    TASK.TYPE = 'block_remuiblck-task';\n    TASK.prototype = Object.create(Modal.prototype);\n    TASK.prototype.constructor = TASK;\n\n    /**\n     * Set up all of the event handling for the modal.\n     *\n     * @method registerEventListeners\n     */\n    TASK.prototype.registerEventListeners = function() {\n        // Apply parent event listeners.\n        Modal.prototype.registerEventListeners.call(this);\n        let _this = this;\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.SAVE_BUTTON, function() {\n            // Add your logic for when the save button is clicked. This could include the form validation,\n            // loading animations, error handling etc.\n            _this.getModal().trigger(RemuiblckEvents.TASK_SAVE);\n        });\n\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.DELETE_BUTTON, function() {\n            // Add your logic for when the delete button is clicked.\n            _this.getModal().trigger(RemuiblckEvents.TASK_DELETE);\n        });\n\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.CANCEL_BUTTON, function() {\n            // Add your logic for when the delete button is clicked.\n            _this.getModal().trigger(RemuiblckEvents.TASK_CANCEL);\n        });\n\n    };\n\n    /**\n     * Check whether settings are valid or not\n     * @return {bool} True if valid\n     */\n    TASK.prototype.valid_settings = function() {\n        let valid = true;\n        let subject = this.getModal().find(SELECTORS.SUBJECT).val();\n        valid = subject != '';\n        this.getModal().find(SELECTORS.SUBJECT)[0].dispatchEvent(new CustomEvent('blur'));\n        return valid;\n    };\n\n\n    /**\n     * Get settings entered in task form\n     * @return {object} task settings object\n     */\n    TASK.prototype.get_task_settings = function() {\n        // \"2012-03-29T23:59:59\"\n\n        var get_date = function(modal) {\n            let datetime = modal.find(SELECTORS.YEAR).val();\n            let month = modal.find(SELECTORS.MONTH).val();\n            let day = modal.find(SELECTORS.DAY).val();\n            datetime += '-' + (month < 10 ? '0' + month : month); // Month convert -> 8 to 08\n            datetime += '-' + (day < 10 ? '0' + day : day);\n            datetime += navigator.vendor.indexOf(\"Apple\") != -1 ? 'T23:59:59' : ' 23:59:59';\n            return (navigator.vendor.indexOf(\"Apple\") != -1 ? Date.parse(datetime) : new Date(datetime).getTime()) / 1000;\n        };\n        let settings = {\n            subject: this.getModal().find(SELECTORS.SUBJECT).val(),\n            summary: this.getModal().find(SELECTORS.SUMMARY).val(),\n            timedue: get_date(this.getModal()),\n            visible: this.getModal().find(SELECTORS.VISIBLE).is(':checked'),\n            notify: this.getModal().find(SELECTORS.NOTIFY).is(':checked'),\n            users: this.getModal().find(SELECTORS.USERS).val()\n        };\n        return settings;\n    };\n\n    /**\n     * Change saving button status\n     */\n    TASK.prototype.saving = function() {\n\n        var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n        let button = this.getModal().find(SELECTORS.SAVE_BUTTON);\n        if (action == true) {\n            button.text(M.util.get_string('saving', 'core_repository')).attr('disabled', 'disabled');\n            button.attr('disabled', true);\n            return;\n        }\n        button.attr('disabled', false);\n        button.text(M.util.get_string('save', 'core_repository')).removeAttr('disabled');\n    };\n\n    // Automatically register with the modal registry the first time this module is imported so that you can create modals\n    // of this type using the modal factory.\n    if (!registered) {\n        ModalRegistry.register(TASK.TYPE, TASK, 'block_remuiblck/modal_task_popup');\n        registered = true;\n    }\n\n    return TASK;\n});\n"],"file":"modal_task_popup.min.js"}