{"version":3,"sources":["skintool.js"],"names":["define","$","Ajax","colorhex","COLORTOHEX","color","hex","setLiveColor","length","append","html","updateSetting","configname","configvalue","call","methodname","args","on","this","value","removeClass","val","split","addClass","filter","el","document","inverse","checked","toggleClass","undefined","css"],"mappings":"AAcA,aAEAA,OAAO,CAAC,SAAU,aAAc,SAAUC,EAAGC,GAC3C,IACIC,EACAC,EAAa,CAAC,CAChBC,MAAO,UACPC,IAAK,UACJ,CACDD,MAAO,QACPC,IAAK,UACJ,CACDD,MAAO,OACPC,IAAK,UACJ,CACDD,MAAO,QACPC,IAAK,UACJ,CACDD,MAAO,OACPC,IAAK,UACJ,CACDD,MAAO,SACPC,IAAK,UACJ,CACDD,MAAO,SACPC,IAAK,UACJ,CACDD,MAAO,OACPC,IAAK,UACJ,CACDD,MAAO,SACPC,IAAK,UACJ,CACDD,MAAO,MACPC,IAAK,UACJ,CACDD,MAAO,OACPC,IAAK,WAOP,SAASC,EAAaF,GACU,GAA1BJ,EAAE,cAAcO,QAClBP,EAAE,QAAQQ,OAAO,kCAGnBR,EAAE,cAAcS,KAAK,4NAAwOL,EAAQ,4NAAkPA,EAAQ,gOAAsPA,EAAQ,gBAkC/vB,SAASM,EAAcC,EAAYC,GAEjCX,EAAKY,KAAK,CAAC,CACTC,WAFgB,0BAGhBC,KAAM,CACJJ,WAAYA,EACZC,YAAaA,MArCnBZ,EAAE,QAAQgB,GAAG,SAAU,kEAAmE,WACxF,IAAIZ,EAAQa,KAAKC,MAEJ,eAATd,GACFJ,EAAE,4BAA4BmB,YAAY,UAC1CjB,EAAWF,EAAE,wBAAwBoB,MAAMC,MAAM,KAAK,KAEtDrB,EAAE,4BAA4BsB,SAAS,UAQrCpB,GALFA,EAAWC,EAAWoB,OAAO,SAAUC,GACrC,OAAOA,EAAGpB,OAASA,KAGRG,OACAL,EAAS,GAAGG,IAhEZ,UAsEfK,EAAc,YAAaN,GAC3BM,EAAc,eAAgBR,GAC9BI,EAAaJ,KAmBfF,EAAEyB,UAAUT,GAAG,SAAU,oBAAqB,WAC5C,IAAIZ,EAAQa,KAAKC,MAAMG,MAAM,KAAK,GAClCX,EAAc,YAAa,eAC3BA,EAAc,eAAgBN,GAC9BE,EAAaF,KAEfJ,EAAE,4BAA4BgB,GAAG,SAAU,WACzC,IACIZ,EADAsB,EAAUT,KAAKC,MAGdD,KAAKU,QAIRvB,EAAQF,GAHRwB,EAAU,GACVtB,EAAQ,UAKVM,EAAc,gBAAiBgB,GAC/B1B,EAAE,WAAW4B,YAAY,eAETC,MAAZ3B,GACFF,EAAE,WAAW8B,IAAI,mBAAoB,IAAM1B,EAAQ,iBAGvDJ,EAAE,kEAAkEgB,GAAG,SAAU,WAGlE,sBAFDC,KAAKC,OAGflB,EAAE,eAAemB,YAAY,QAC7BT,EAAc,eAAgB,wBAE9BV,EAAE,eAAesB,SAAS,QAC1BZ,EAAc,eAAgB","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\"use strict\";\ndefine([\n    'jquery',\n    'core/ajax'\n], function(\n    $,\n    Ajax,\n) {\n    const DEFAULTHEX = '62a8ea';\n    let colorhex;\n    const COLORTOHEX = [\n        {color: 'primary', hex: '62a8ea'},\n        {color: 'brown', hex: '8d6658'},\n        {color: 'cyan', hex: '57c7d4'},\n        {color: 'green', hex: '46be8a'},\n        {color: 'grey', hex: '757575'},\n        {color: 'indigo', hex: '677ae4'},\n        {color: 'orange', hex: 'f2a654'},\n        {color: 'pink', hex: 'f96197'},\n        {color: 'purple', hex: '926dde'},\n        {color: 'red', hex: 'f96868'},\n        {color: 'teal', hex: '3aa99e'}\n    ];\n\n    /**\n     * Set live color to element having primary color\n     * @param {String} color Color hex\n     */\n    function setLiveColor(color) {\n        if ($('#livecolor').length == 0) {\n            $('body').append('<style id=\"livecolor\"></style>');\n        }\n        $('#livecolor').html(\n            '.navbar-brand, .nav-inverse, #page-footer, .bg-primary, .btn-primary, .td.today, .form-submit, ' +\n            '.page-aside-switch, table.dataTable thead th, table.dataTable tfoot th, .page-item.active .page-link {' +\n            ' background-color: #' + color + ' !important;' +\n            '}' +\n            '.btn-primary, .nav-tabs .nav-link.active, .checkbox-custom input[type=checkbox]:checked+label::before, ' +\n            '.radio-custom input[type=radio]:checked+label::before, .page-item.active .page-link {' +\n            ' border-color: #' + color + ' !important;' +\n            '}' +\n            '.text-primary, .nav-tabs .nav-link.active, .nav-tabs .nav-link.active .fa, [data-region=\"drawer\"]:not(.dark) ' +\n            '.list-group-item.active, [data-region=\"drawer\"]:not(.dark) .list-group-item.active .icon {' +\n            ' color: #' + color + ' !important' +\n            '}'\n        );\n    }\n\n    $('body').on('change', '#skintoolsSiteColor input[type=\"radio\"][name=\"skintoolsNavbar\"]', function() {\n        let color = this.value;\n        if (color == 'customcolor') {\n            $('.site-colorpicker-custom').removeClass('d-none');\n            colorhex = $('[name=\"customcolor\"]').val().split('#')[1];\n        } else {\n            $('.site-colorpicker-custom').addClass('d-none');\n            // Update sitecolor.\n            // Update sitecolor hex.\n            colorhex = COLORTOHEX.filter(el => el.color == color);\n            if (colorhex.length) {\n                colorhex = colorhex[0].hex;\n            } else {\n                colorhex = DEFAULTHEX;\n            }\n        }\n        updateSetting('sitecolor', color);\n        updateSetting('sitecolorhex', colorhex);\n        setLiveColor(colorhex);\n    });\n\n    /**\n     * Update setting in database\n     * @param  {String} configname  Configuration name\n     * @param  {String} configvalue Configuration value\n     */\n    function updateSetting(configname, configvalue) {\n        let serviceName = 'theme_remui_set_setting';\n        Ajax.call([{\n            methodname: serviceName,\n            args: {\n                configname: configname,\n                configvalue: configvalue\n            }\n        }]);\n    }\n\n    $(document).on('change', '.site-colorpicker', function() {\n        let color = this.value.split('#')[1];\n        updateSetting('sitecolor', 'customcolor');\n        updateSetting('sitecolorhex', color);\n        setLiveColor(color);\n    });\n\n    $('#skintoolsNavbar-inverse').on('change', function() {\n        let inverse = this.value;\n        let color;\n        if (!this.checked) {\n            inverse = \"\";\n            color = \"ffffff\";\n        } else {\n            color = colorhex;\n        }\n        updateSetting('navbarinverse', inverse);\n        $('.navbar').toggleClass('nav-inverse');\n        if (colorhex != undefined) {\n            $('.navbar').css('background-color', '#' + color + ' !important');\n        }\n    });\n\n    $('#skintoolsSidebar input[type=\"radio\"][name=\"skintoolsSidebar\"]').on('change', function() {\n        let color = this.value;\n        if (color == 'site-menubar-light') {\n            $('#nav-drawer').removeClass('dark');\n            updateSetting('sidebarcolor', 'site-menubar-light');\n        } else {\n            $('#nav-drawer').addClass('dark');\n            updateSetting('sidebarcolor', '');\n        }\n    });\n});\n"],"file":"skintool.min.js"}