{"version":3,"sources":["color-picker.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","factory","define","amd","exports","module","require","jQuery","$","undefined","defaultOpts","beforeShow","noop","move","change","show","hide","color","flat","showInput","allowEmpty","showButtons","clickoutFiresChange","showInitial","showPalette","showPaletteOnly","hideAfterPaletteSelect","togglePaletteOnly","showSelectionPalette","localStorageKey","appendTo","maxSelectionSize","cancelText","chooseText","togglePaletteMoreText","togglePaletteLessText","clearText","noColorSelectedText","preferredFormat","className","containerClassName","replacerClassName","showAlpha","theme","palette","selectionPalette","disabled","offset","spectrums","IE","exec","window","navigator","userAgent","rgbaSupport","contains","str","substr","indexOf","style","document","createElement","cssText","backgroundColor","replaceInput","join","markup","gradientFix","i","paletteTemplate","p","opts","html","length","current","tiny","tinycolor","c","toHsl","l","equals","formattedString","toString","swatchStyle","toRgbString","toFilter","push","append","attr","spectrum","element","o","func","wait","debounce","timeout","callbackContext","extend","callbacks","bind","instanceOptions","resize","reflow","context","this","args","arguments","clearTimeout","setTimeout","apply","visible","isDragging","dragWidth","dragHeight","dragHelperHeight","slideHeight","alphaWidth","alphaSlideHelperWidth","slideHelperHeight","currentHue","currentSaturation","currentValue","currentAlpha","paletteArray","paletteLookup","slice","draggingClass","shiftMovementDirection","doc","ownerDocument","boundElement","body","container","addClass","pickerContainer","find","dragger","dragHelper","slider","slideHelper","alphaSliderInner","alphaSlider","alphaSlideHelper","textInput","paletteContainer","initialColorContainer","cancelButton","clearButton","chooseButton","toggleButton","isInput","is","isInputTypeColor","inputTypeColorSupport","shouldReplace","replacer","offsetElement","previewElement","initialColor","val","colorOnShow","currentPreferredFormat","isEmpty","applyOptions","text","isArray","j","rgb","toggleClass","updateSelectionPaletteFromStorage","localStorage","oldPalette","split","each","addColorToSelectionPalette","e","inArray","shift","drawPalette","currentColor","get","map","unique","reverse","getUniqueSelectionPalette","drawInitial","initial","dragStart","trigger","dragStop","removeClass","setFromTextInput","value","isValid","_set","updateOriginalInput","toggle","event","Event","isDefaultPrevented","hideAll","on","onkeydown","clickout","updateUI","keyCode","button","revert","off","ignoreFormatChange","newColor","newHsv","toHsv","h","s","v","a","getFormat","fromRatio","Math","round","format","dragX","dragY","max","min","css","top","left","alphaX","slideY","updateHelperLocations","flatColor","toHexString","realColor","displayColor","realHex","realRgb","alpha","toRgb","realAlpha","gradient","gradientType","fireCallback","hasChanged","width","height","disable","after","parent","paletteElementClick","data","ignore","target","closest","stopPropagation","preventDefault","click","keydown","hasClass","outerWidth","draggable","shiftKey","parseFloat","oldDragX","oldDragY","furtherFromX","abs","setValue","paletteEvent","initialize","spect","option","optionName","optionValue","enable","coord","set","destroy","remove","id","Array","call","concat","onmove","onstart","onstop","dragging","maxHeight","maxWidth","hasTouch","duringDragEvents","prevent","returnValue","documentMode","stop","t0","originalEvent","touches","pageX","pageY","which","fn","extra","method","Error","removeData","load","loadOpts","defaults","_cachedResult","colorInput","type","localization","palettes","processNativeColorInputs","colorInputs","trimLeft","trimRight","tinyCounter","math","mathRound","mathMin","mathMax","mathRandom","random","r","g","b","ok","replace","toLowerCase","match","named","names","matchers","rgba","hsl","hsla","hsv","hsva","hex8","parseIntFromHex","hex6","hex3","stringInputToObject","hasOwnProperty","bound01","String","convertToPercentage","floor","f","q","t","mod","hsvToRgb","hue2rgb","hslToRgb","boundAlpha","inputToRGB","_originalInput","_r","_g","_b","_a","_roundA","_format","_gradientType","_ok","_tc_id","rgbToHsl","d","rgbToHsv","rgbToHex","allow3Char","hex","pad2","charAt","rgbaToHex","_desaturate","amount","clamp01","_saturate","_greyscale","desaturate","_lighten","_brighten","_darken","_spin","hue","_complement","_triad","_tetrad","_splitcomplement","_analogous","results","slices","part","ret","_monochromatic","modification","isDark","getBrightness","isLight","getOriginalInput","getAlpha","setAlpha","toHsvString","toHslString","toHex","toHex8","toHex8String","toPercentageRgb","toPercentageRgbString","toName","hexNames","secondColor","hex8String","secondHex8String","formatSet","hasAlpha","_applyModification","lighten","brighten","darken","saturate","greyscale","spin","_applyCombination","analogous","complement","monochromatic","splitcomplement","triad","tetrad","color1","color2","mix","w1","rgb1","rgb2","w","w2","readability","c1","c2","brightnessA","brightnessB","colorDiff","brightness","isReadable","mostReadable","baseColor","colorList","bestColor","bestScore","bestIsReadable","readable","score","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","flipped","flip","isNaN","n","isOnePointZero","processPercent","isPercentage","parseInt","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp"],"mappings":"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","sourcesContent":["/**\n * Spectrum Colorpicker v1.8.0\n * https://github.com/bgrins/spectrum\n * Author: Brian Grinstead\n * License: MIT\n */\n\n\"use strict\";\n(function (factory) {\n\n    if (typeof define === 'function' && define.amd) { // AMD.\n        define(['jquery'], factory);\n    } else if (typeof exports == \"object\" && typeof module == \"object\") { // CommonJS.\n        module.exports = factory(require('jquery'));\n    } else { // Browser.\n        factory(jQuery);\n    }\n})(function ($, undefined) {\n\n    var defaultOpts = {\n\n        // Callbacks.\n        beforeShow: noop,\n        move: noop,\n        change: noop,\n        show: noop,\n        hide: noop,\n\n        // Options.\n        color: false,\n        flat: false,\n        showInput: false,\n        allowEmpty: false,\n        showButtons: true,\n        clickoutFiresChange: true,\n        showInitial: false,\n        showPalette: false,\n        showPaletteOnly: false,\n        hideAfterPaletteSelect: false,\n        togglePaletteOnly: false,\n        showSelectionPalette: true,\n        localStorageKey: false,\n        appendTo: \"body\",\n        maxSelectionSize: 7,\n        cancelText: \"cancel\",\n        chooseText: \"choose\",\n        togglePaletteMoreText: \"more\",\n        togglePaletteLessText: \"less\",\n        clearText: \"Clear Color Selection\",\n        noColorSelectedText: \"No Color Selected\",\n        preferredFormat: false,\n        className: \"\", // Deprecated - use containerClassName and replacerClassName instead.\n        containerClassName: \"\",\n        replacerClassName: \"\",\n        showAlpha: false,\n        theme: \"sp-light\",\n        palette: [\n            [\"#ffffff\", \"#000000\", \"#ff0000\", \"#ff8000\", \"#ffff00\", \"#008000\", \"#0000ff\", \"#4b0082\", \"#9400d3\"]\n        ],\n        selectionPalette: [],\n        disabled: false,\n        offset: null\n    },\n    spectrums = [],\n    // @codingStandardsIgnoreStart\n    IE = !!/msie/i.exec(window.navigator.userAgent),\n    // @codingStandardsIgnoreEnd\n    rgbaSupport = (function () {\n        function contains(str, substr) {\n            return !!~('' + str).indexOf(substr);\n        }\n\n        var elem = document.createElement('div');\n        var style = elem.style;\n        style.cssText = 'background-color:rgba(0,0,0,.5)';\n        return contains(style.backgroundColor, 'rgba') || contains(style.backgroundColor, 'hsla');\n    })(),\n    replaceInput = [\n        \"<div class='sp-replacer'>\",\n        \"<div class='sp-preview'><div class='sp-preview-inner'></div></div>\",\n        \"<div class='sp-dd'>&#9660;</div>\",\n        \"</div>\"\n    ].join(''),\n    markup = (function () {\n\n        // IE does not support gradients with multiple stops, so we need to simulate.\n        // That for the rainbow slider with 8 divs that each have a single gradient.\n        var gradientFix = \"\";\n        if (IE) {\n            for (var i = 1; i <= 6; i++) {\n                gradientFix += \"<div class='sp-\" + i + \"'></div>\";\n            }\n        }\n\n        return [\n            \"<div class='sp-container sp-hidden'>\",\n            \"<div class='sp-palette-container'>\",\n            \"<div class='sp-palette sp-thumb sp-cf'></div>\",\n            \"<div class='sp-palette-button-container sp-cf'>\",\n            \"<button type='button' class='sp-palette-toggle'></button>\",\n            \"</div>\",\n            \"</div>\",\n            \"<div class='sp-picker-container'>\",\n            \"<div class='sp-top sp-cf'>\",\n            \"<div class='sp-fill'></div>\",\n            \"<div class='sp-top-inner'>\",\n            \"<div class='sp-color'>\",\n            \"<div class='sp-sat'>\",\n            \"<div class='sp-val'>\",\n            \"<div class='sp-dragger'></div>\",\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n            \"<div class='sp-clear sp-clear-display'>\",\n            \"</div>\",\n            \"<div class='sp-hue'>\",\n            \"<div class='sp-slider'></div>\",\n            gradientFix,\n            \"</div>\",\n            \"</div>\",\n            \"<div class='sp-alpha'><div class='sp-alpha-inner'><div class='sp-alpha-handle'></div></div></div>\",\n            \"</div>\",\n            \"<div class='sp-input-container sp-cf'>\",\n            \"<input class='sp-input' type='text' spellcheck='false'  />\",\n            \"</div>\",\n            \"<div class='sp-initial sp-thumb sp-cf'></div>\",\n            \"<div class='sp-button-container sp-cf'>\",\n            \"<a class='sp-cancel' href='#'></a>\",\n            \"<button type='button' class='sp-choose'></button>\",\n            \"</div>\",\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\");\n    })();\n\n    function paletteTemplate(p, color, className, opts) {\n        var html = [];\n        for (var i = 0; i < p.length; i++) {\n            var current = p[i];\n            if (current) {\n                var tiny = tinycolor(current);\n                var c = tiny.toHsl().l < 0.5 ? \"sp-thumb-el sp-thumb-dark\" : \"sp-thumb-el sp-thumb-light\";\n                c += (tinycolor.equals(color, current)) ? \" sp-thumb-active\" : \"\";\n                var formattedString = tiny.toString(opts.preferredFormat || \"rgb\");\n                var swatchStyle = rgbaSupport ? (\"background-color:\" + tiny.toRgbString()) : \"filter:\" + tiny.toFilter();\n                html.push('<span title=\"' + formattedString + '\" data-color=\"' + tiny.toRgbString() + '\" class=\"' + c + '\"><span class=\"sp-thumb-inner\" style=\"' + swatchStyle + ';\" /></span>');\n            } else {\n                var cls = 'sp-clear-display';\n                html.push($('<div />')\n                    .append($('<span data-color=\"\" style=\"background-color:transparent;\" class=\"' + cls + '\"></span>')\n                        .attr('title', opts.noColorSelectedText)\n                    )\n                    .html()\n                );\n            }\n        }\n        return \"<div class='sp-cf \" + className + \"'>\" + html.join('') + \"</div>\";\n    }\n\n    function hideAll() {\n        for (var i = 0; i < spectrums.length; i++) {\n            if (spectrums[i]) {\n                spectrums[i].hide();\n            }\n        }\n    }\n\n    function instanceOptions(o, callbackContext) {\n        var opts = $.extend({}, defaultOpts, o);\n        opts.callbacks = {\n            'move': bind(opts.move, callbackContext),\n            'change': bind(opts.change, callbackContext),\n            'show': bind(opts.show, callbackContext),\n            'hide': bind(opts.hide, callbackContext),\n            'beforeShow': bind(opts.beforeShow, callbackContext)\n        };\n\n        return opts;\n    }\n\n    function spectrum(element, o) {\n\n        var opts = instanceOptions(o, element),\n            flat = opts.flat,\n            showSelectionPalette = opts.showSelectionPalette,\n            localStorageKey = opts.localStorageKey,\n            theme = opts.theme,\n            callbacks = opts.callbacks,\n            resize = throttle(reflow, 10),\n            visible = false,\n            isDragging = false,\n            dragWidth = 0,\n            dragHeight = 0,\n            dragHelperHeight = 0,\n            slideHeight = 0,\n            slideWidth = 0,\n            alphaWidth = 0,\n            alphaSlideHelperWidth = 0,\n            slideHelperHeight = 0,\n            currentHue = 0,\n            currentSaturation = 0,\n            currentValue = 0,\n            currentAlpha = 1,\n            palette = [],\n            paletteArray = [],\n            paletteLookup = {},\n            selectionPalette = opts.selectionPalette.slice(0),\n            maxSelectionSize = opts.maxSelectionSize,\n            draggingClass = \"sp-dragging\",\n            shiftMovementDirection = null;\n\n        var doc = element.ownerDocument,\n            body = doc.body,\n            boundElement = $(element),\n            disabled = false,\n            container = $(markup, doc).addClass(theme),\n            pickerContainer = container.find(\".sp-picker-container\"),\n            dragger = container.find(\".sp-color\"),\n            dragHelper = container.find(\".sp-dragger\"),\n            slider = container.find(\".sp-hue\"),\n            slideHelper = container.find(\".sp-slider\"),\n            alphaSliderInner = container.find(\".sp-alpha-inner\"),\n            alphaSlider = container.find(\".sp-alpha\"),\n            alphaSlideHelper = container.find(\".sp-alpha-handle\"),\n            textInput = container.find(\".sp-input\"),\n            paletteContainer = container.find(\".sp-palette\"),\n            initialColorContainer = container.find(\".sp-initial\"),\n            cancelButton = container.find(\".sp-cancel\"),\n            clearButton = container.find(\".sp-clear\"),\n            chooseButton = container.find(\".sp-choose\"),\n            toggleButton = container.find(\".sp-palette-toggle\"),\n            isInput = boundElement.is(\"input\"),\n            isInputTypeColor = isInput && boundElement.attr(\"type\") === \"color\" && inputTypeColorSupport(),\n            shouldReplace = isInput && !flat,\n            replacer = (shouldReplace) ? $(replaceInput).addClass(theme).addClass(opts.className).addClass(opts.replacerClassName) : $([]),\n            offsetElement = (shouldReplace) ? replacer : boundElement,\n            previewElement = replacer.find(\".sp-preview-inner\"),\n            initialColor = opts.color || (isInput && boundElement.val()),\n            colorOnShow = false,\n            currentPreferredFormat = opts.preferredFormat,\n            clickoutFiresChange = !opts.showButtons || opts.clickoutFiresChange,\n            isEmpty = !initialColor,\n            allowEmpty = opts.allowEmpty && !isInputTypeColor;\n\n        function applyOptions() {\n\n            if (opts.showPaletteOnly) {\n                opts.showPalette = true;\n            }\n\n            toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);\n\n            if (opts.palette) {\n                palette = opts.palette.slice(0);\n                paletteArray = $.isArray(palette[0]) ? palette : [palette];\n                paletteLookup = {};\n                for (var i = 0; i < paletteArray.length; i++) {\n                    for (var j = 0; j < paletteArray[i].length; j++) {\n                        var rgb = tinycolor(paletteArray[i][j]).toRgbString();\n                        paletteLookup[rgb] = true;\n                    }\n                }\n            }\n\n            container.toggleClass(\"sp-flat\", flat);\n            container.toggleClass(\"sp-input-disabled\", !opts.showInput);\n            container.toggleClass(\"sp-alpha-enabled\", opts.showAlpha);\n            container.toggleClass(\"sp-clear-enabled\", allowEmpty);\n            container.toggleClass(\"sp-buttons-disabled\", !opts.showButtons);\n            container.toggleClass(\"sp-palette-buttons-disabled\", !opts.togglePaletteOnly);\n            container.toggleClass(\"sp-palette-disabled\", !opts.showPalette);\n            container.toggleClass(\"sp-palette-only\", opts.showPaletteOnly);\n            container.toggleClass(\"sp-initial-disabled\", !opts.showInitial);\n            container.addClass(opts.className).addClass(opts.containerClassName);\n\n            reflow();\n        }\n\n        function initialize() {\n\n            if (IE) {\n                container.find(\"*:not(input)\").attr(\"unselectable\", \"on\");\n            }\n\n            applyOptions();\n\n            if (shouldReplace) {\n                boundElement.after(replacer).hide();\n            }\n\n            if (!allowEmpty) {\n                clearButton.hide();\n            }\n\n            if (flat) {\n                boundElement.after(container).hide();\n            } else {\n\n                var appendTo = opts.appendTo === \"parent\" ? boundElement.parent() : $(opts.appendTo);\n                if (appendTo.length !== 1) {\n                    appendTo = $(\"body\");\n                }\n\n                appendTo.append(container);\n            }\n\n            updateSelectionPaletteFromStorage();\n\n            offsetElement.on(\"click.spectrum touchstart.spectrum\", function (e) {\n                if (!disabled) {\n                    toggle();\n                }\n\n                e.stopPropagation();\n\n                if (!$(e.target).is(\"input\")) {\n                    e.preventDefault();\n                }\n            });\n\n            if (boundElement.is(\":disabled\") || (opts.disabled === true)) {\n                disable();\n            }\n\n            // Prevent clicks from bubbling up to document.  This would cause it to be hidden.\n            container.click(stopPropagation);\n\n            // Handle user typed input.\n            textInput.change(setFromTextInput);\n            textInput.on(\"paste\", function () {\n                setTimeout(setFromTextInput, 1);\n            });\n            textInput.keydown(function (e) {\n                if (e.keyCode == 13) {\n                    setFromTextInput();\n                }\n            });\n\n            cancelButton.text(opts.cancelText);\n            cancelButton.on(\"click.spectrum\", function (e) {\n                e.stopPropagation();\n                e.preventDefault();\n                revert();\n                hide();\n            });\n\n            clearButton.attr(\"title\", opts.clearText);\n            clearButton.on(\"click.spectrum\", function (e) {\n                e.stopPropagation();\n                e.preventDefault();\n                isEmpty = true;\n                move();\n\n                if (flat) {\n                    // For the flat style, this is a change event.\n                    updateOriginalInput(true);\n                }\n            });\n\n            chooseButton.text(opts.chooseText);\n            chooseButton.on(\"click.spectrum\", function (e) {\n                e.stopPropagation();\n                e.preventDefault();\n\n                if (IE && textInput.is(\":focus\")) {\n                    textInput.trigger('change');\n                }\n\n                if (isValid()) {\n                    updateOriginalInput(true);\n                    hide();\n                }\n            });\n\n            toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);\n            toggleButton.on(\"click.spectrum\", function (e) {\n                e.stopPropagation();\n                e.preventDefault();\n\n                opts.showPaletteOnly = !opts.showPaletteOnly;\n\n                // To make sure the Picker area is drawn on the right, next to the.\n                // Palette area (and not below the palette), first move the Palette.\n                // to the left to make space for the picker, plus 5px extra.\n                // The 'applyOptions' function puts the whole container back into place.\n                // and takes care of the button-text and the sp-palette-only CSS class.\n                if (!opts.showPaletteOnly && !flat) {\n                    container.css('left', '-=' + (pickerContainer.outerWidth(true) + 5));\n                }\n                applyOptions();\n            });\n\n            draggable(alphaSlider, function (dragX, dragY, e) {\n                currentAlpha = (dragX / alphaWidth);\n                isEmpty = false;\n                if (e.shiftKey) {\n                    currentAlpha = Math.round(currentAlpha * 10) / 10;\n                }\n\n                move();\n            }, dragStart, dragStop);\n\n            draggable(slider, function (dragX, dragY) {\n                currentHue = parseFloat(dragY / slideHeight);\n                isEmpty = false;\n                if (!opts.showAlpha) {\n                    currentAlpha = 1;\n                }\n                move();\n            }, dragStart, dragStop);\n\n            draggable(dragger, function (dragX, dragY, e) {\n\n                // Shift+drag should snap the movement to either the x or y axis.\n                if (!e.shiftKey) {\n                    shiftMovementDirection = null;\n                } else if (!shiftMovementDirection) {\n                    var oldDragX = currentSaturation * dragWidth;\n                    var oldDragY = dragHeight - (currentValue * dragHeight);\n                    var furtherFromX = Math.abs(dragX - oldDragX) > Math.abs(dragY - oldDragY);\n\n                    shiftMovementDirection = furtherFromX ? \"x\" : \"y\";\n                }\n\n                var setSaturation = !shiftMovementDirection || shiftMovementDirection === \"x\";\n                var setValue = !shiftMovementDirection || shiftMovementDirection === \"y\";\n\n                if (setSaturation) {\n                    currentSaturation = parseFloat(dragX / dragWidth);\n                }\n                if (setValue) {\n                    currentValue = parseFloat((dragHeight - dragY) / dragHeight);\n                }\n\n                isEmpty = false;\n                if (!opts.showAlpha) {\n                    currentAlpha = 1;\n                }\n\n                move();\n\n            }, dragStart, dragStop);\n\n            if (!!initialColor) {\n                set(initialColor);\n\n                // In case color was black - update the preview UI and set the format.\n                // since the set function will not run (default color is black).\n                updateUI();\n                currentPreferredFormat = opts.preferredFormat || tinycolor(initialColor).format;\n\n                addColorToSelectionPalette(initialColor);\n            } else {\n                updateUI();\n            }\n\n            if (flat) {\n                show();\n            }\n\n            function paletteElementClick(e) {\n                if (e.data && e.data.ignore) {\n                    set($(e.target).closest(\".sp-thumb-el\").data(\"color\"));\n                    move();\n                } else {\n                    set($(e.target).closest(\".sp-thumb-el\").data(\"color\"));\n                    move();\n\n                    // If the picker is going to close immediately, a palette selection.\n                    // is a change.  Otherwise, it's a move only.\n                    if (opts.hideAfterPaletteSelect) {\n                        updateOriginalInput(true);\n                        hide();\n                    } else {\n                        updateOriginalInput();\n                    }\n                }\n\n                return false;\n            }\n\n            var paletteEvent = IE ? \"mousedown.spectrum\" : \"click.spectrum touchstart.spectrum\";\n            paletteContainer.on(paletteEvent, \".sp-thumb-el\", paletteElementClick);\n            initialColorContainer.on(paletteEvent, \".sp-thumb-el:nth-child(1)\", {\n                ignore: true\n            }, paletteElementClick);\n        }\n\n        function updateSelectionPaletteFromStorage() {\n\n            if (localStorageKey && window.localStorage) {\n\n                // Migrate old palettes over to new format.  May want to remove this eventually.\n                try {\n                    var oldPalette = window.localStorage[localStorageKey].split(\",#\");\n                    if (oldPalette.length > 1) {\n                        delete window.localStorage[localStorageKey];\n                        $.each(oldPalette, function (i, c) {\n                            addColorToSelectionPalette(c);\n                        });\n                    }\n                } catch (e) {}\n\n                try {\n                    selectionPalette = window.localStorage[localStorageKey].split(\";\");\n                } catch (e) {}\n            }\n        }\n\n        function addColorToSelectionPalette(color) {\n            if (showSelectionPalette) {\n                var rgb = tinycolor(color).toRgbString();\n                if (!paletteLookup[rgb] && $.inArray(rgb, selectionPalette) === -1) {\n                    selectionPalette.push(rgb);\n                    while (selectionPalette.length > maxSelectionSize) {\n                        selectionPalette.shift();\n                    }\n                }\n\n                if (localStorageKey && window.localStorage) {\n                    try {\n                        window.localStorage[localStorageKey] = selectionPalette.join(\";\");\n                    } catch (e) {}\n                }\n            }\n        }\n\n        function getUniqueSelectionPalette() {\n            var unique = [];\n            if (opts.showPalette) {\n                for (var i = 0; i < selectionPalette.length; i++) {\n                    var rgb = tinycolor(selectionPalette[i]).toRgbString();\n\n                    if (!paletteLookup[rgb]) {\n                        unique.push(selectionPalette[i]);\n                    }\n                }\n            }\n\n            return unique.reverse().slice(0, opts.maxSelectionSize);\n        }\n\n        function drawPalette() {\n\n            var currentColor = get();\n\n            var html = $.map(paletteArray, function (palette, i) {\n                return paletteTemplate(palette, currentColor, \"sp-palette-row sp-palette-row-\" + i, opts);\n            });\n\n            updateSelectionPaletteFromStorage();\n\n            if (selectionPalette) {\n                html.push(paletteTemplate(getUniqueSelectionPalette(), currentColor, \"sp-palette-row sp-palette-row-selection\", opts));\n            }\n\n            paletteContainer.html(html.join(\"\"));\n        }\n\n        function drawInitial() {\n            if (opts.showInitial) {\n                var initial = colorOnShow;\n                var current = get();\n                initialColorContainer.html(paletteTemplate([initial, current], current, \"sp-palette-row-initial\", opts));\n            }\n        }\n\n        function dragStart() {\n            if (dragHeight <= 0 || dragWidth <= 0 || slideHeight <= 0) {\n                reflow();\n            }\n            isDragging = true;\n            container.addClass(draggingClass);\n            shiftMovementDirection = null;\n            boundElement.trigger('dragstart.spectrum', [get()]);\n        }\n\n        function dragStop() {\n            isDragging = false;\n            container.removeClass(draggingClass);\n            boundElement.trigger('dragstop.spectrum', [get()]);\n        }\n\n        function setFromTextInput() {\n\n            var value = textInput.val();\n\n            if ((value === null || value === \"\") && allowEmpty) {\n                set(null);\n                move();\n                updateOriginalInput();\n            } else {\n                var tiny = tinycolor(value);\n                if (tiny.isValid()) {\n                    set(tiny);\n                    move();\n                    updateOriginalInput();\n                } else {\n                    textInput.addClass(\"sp-validation-error\");\n                }\n            }\n        }\n\n        function toggle() {\n            if (visible) {\n                hide();\n            } else {\n                show();\n            }\n        }\n\n        function show() {\n            var event = $.Event('beforeShow.spectrum');\n\n            if (visible) {\n                reflow();\n                return;\n            }\n\n            boundElement.trigger(event, [get()]);\n\n            if (callbacks.beforeShow(get()) === false || event.isDefaultPrevented()) {\n                return;\n            }\n\n            hideAll();\n            visible = true;\n\n            $(doc).on(\"keydown.spectrum\", onkeydown);\n            $(doc).on(\"click.spectrum\", clickout);\n            $(window).on(\"resize.spectrum\", resize);\n            replacer.addClass(\"sp-active\");\n            container.removeClass(\"sp-hidden\");\n\n            reflow();\n            updateUI();\n\n            colorOnShow = get();\n\n            drawInitial();\n            callbacks.show(colorOnShow);\n            boundElement.trigger('show.spectrum', [colorOnShow]);\n        }\n\n        function onkeydown(e) {\n            // Close on ESC.\n            if (e.keyCode === 27) {\n                hide();\n            }\n        }\n\n        function clickout(e) {\n            // Return on right click.\n            if (e.button == 2) {\n                return;\n            }\n\n            // If a drag event was happening during the mouseup, don't hide on click.\n            if (isDragging) {\n                return;\n            }\n\n            if (clickoutFiresChange) {\n                updateOriginalInput(true);\n            } else {\n                revert();\n            }\n            hide();\n        }\n\n        function hide() {\n            // Return if hiding is unnecessary.\n            if (!visible || flat) {\n                return;\n            }\n            visible = false;\n\n            $(doc).off(\"keydown.spectrum\", onkeydown);\n            $(doc).off(\"click.spectrum\", clickout);\n            $(window).off(\"resize.spectrum\", resize);\n\n            replacer.removeClass(\"sp-active\");\n            container.addClass(\"sp-hidden\");\n\n            callbacks.hide(get());\n            boundElement.trigger('hide.spectrum', [get()]);\n        }\n\n        function revert() {\n            set(colorOnShow, true);\n            updateOriginalInput(true);\n        }\n\n        function set(color, ignoreFormatChange) {\n            if (tinycolor.equals(color, get())) {\n                // Update UI just in case a validation error needs to be cleared.\n                updateUI();\n                return;\n            }\n\n            var newColor, newHsv;\n            if (!color && allowEmpty) {\n                isEmpty = true;\n            } else {\n                isEmpty = false;\n                newColor = tinycolor(color);\n                newHsv = newColor.toHsv();\n\n                currentHue = (newHsv.h % 360) / 360;\n                currentSaturation = newHsv.s;\n                currentValue = newHsv.v;\n                currentAlpha = newHsv.a;\n            }\n            updateUI();\n\n            if (newColor && newColor.isValid() && !ignoreFormatChange) {\n                currentPreferredFormat = opts.preferredFormat || newColor.getFormat();\n            }\n        }\n\n        function get(opts) {\n            opts = opts || {};\n\n            if (allowEmpty && isEmpty) {\n                return null;\n            }\n\n            return tinycolor.fromRatio({\n                h: currentHue,\n                s: currentSaturation,\n                v: currentValue,\n                a: Math.round(currentAlpha * 1000) / 1000\n            }, {\n                format: opts.format || currentPreferredFormat\n            });\n        }\n\n        function isValid() {\n            return !textInput.hasClass(\"sp-validation-error\");\n        }\n\n        function move() {\n            updateUI();\n\n            callbacks.move(get());\n            boundElement.trigger('move.spectrum', [get()]);\n        }\n\n        function updateUI() {\n\n            textInput.removeClass(\"sp-validation-error\");\n\n            updateHelperLocations();\n\n            // Update dragger background color (gradients take care of saturation and value).\n            var flatColor = tinycolor.fromRatio({\n                h: currentHue,\n                s: 1,\n                v: 1\n            });\n            dragger.css(\"background-color\", flatColor.toHexString());\n\n            // Get a format that alpha will be included in (hex and names ignore alpha).\n            var format = currentPreferredFormat;\n            if (currentAlpha < 1 && !(currentAlpha === 0 && format === \"name\")) {\n                if (format === \"hex\" || format === \"hex3\" || format === \"hex6\" || format === \"name\") {\n                    format = \"rgb\";\n                }\n            }\n\n            var realColor = get({\n                format: format\n                }),\n                displayColor = '';\n\n            // Reset background info for preview element.\n            previewElement.removeClass(\"sp-clear-display\");\n            previewElement.css('background-color', 'transparent');\n\n            if (!realColor && allowEmpty) {\n                // Update the replaced elements background with icon indicating no color selection.\n                previewElement.addClass(\"sp-clear-display\");\n            } else {\n                var realHex = realColor.toHexString(),\n                    realRgb = realColor.toRgbString();\n\n                // Update the replaced elements background color (with actual selected color).\n                if (rgbaSupport || realColor.alpha === 1) {\n                    previewElement.css(\"background-color\", realRgb);\n                } else {\n                    previewElement.css(\"background-color\", \"transparent\");\n                    previewElement.css(\"filter\", realColor.toFilter());\n                }\n\n                if (opts.showAlpha) {\n                    var rgb = realColor.toRgb();\n                    rgb.a = 0;\n                    var realAlpha = tinycolor(rgb).toRgbString();\n                    var gradient = \"linear-gradient(left, \" + realAlpha + \", \" + realHex + \")\";\n\n                    if (IE) {\n                        alphaSliderInner.css(\"filter\", tinycolor(realAlpha).toFilter({\n                            gradientType: 1\n                        }, realHex));\n                    } else {\n                        alphaSliderInner.css(\"background\", \"-webkit-\" + gradient);\n                        alphaSliderInner.css(\"background\", \"-moz-\" + gradient);\n                        alphaSliderInner.css(\"background\", \"-ms-\" + gradient);\n                        // Use current syntax gradient on unprefixed property.\n                        alphaSliderInner.css(\"background\",\n                            \"linear-gradient(to right, \" + realAlpha + \", \" + realHex + \")\");\n                    }\n                }\n\n                displayColor = realColor.toString(format);\n            }\n\n            // Update the text entry input as it changes happen.\n            if (opts.showInput) {\n                textInput.val(displayColor);\n            }\n\n            if (opts.showPalette) {\n                drawPalette();\n            }\n\n            drawInitial();\n        }\n\n        function updateHelperLocations() {\n            var s = currentSaturation;\n            var v = currentValue;\n\n            if (allowEmpty && isEmpty) {\n                // If selected color is empty, hide the helpers.\n                alphaSlideHelper.hide();\n                slideHelper.hide();\n                dragHelper.hide();\n            } else {\n                // Make sure helpers are visible.\n                alphaSlideHelper.show();\n                slideHelper.show();\n                dragHelper.show();\n\n                // Where to show the little circle in that displays your current selected color.\n                var dragX = s * dragWidth;\n                var dragY = dragHeight - (v * dragHeight);\n                dragX = Math.max(-dragHelperHeight,\n                    Math.min(dragWidth - dragHelperHeight, dragX - dragHelperHeight)\n                );\n                dragY = Math.max(-dragHelperHeight,\n                    Math.min(dragHeight - dragHelperHeight, dragY - dragHelperHeight)\n                );\n                dragHelper.css({\n                    \"top\": dragY + \"px\",\n                    \"left\": dragX + \"px\"\n                });\n\n                var alphaX = currentAlpha * alphaWidth;\n                alphaSlideHelper.css({\n                    \"left\": (alphaX - (alphaSlideHelperWidth / 2)) + \"px\"\n                });\n\n                // Where to show the bar that displays your current selected hue.\n                var slideY = (currentHue) * slideHeight;\n                slideHelper.css({\n                    \"top\": (slideY - slideHelperHeight) + \"px\"\n                });\n            }\n        }\n\n        function updateOriginalInput(fireCallback) {\n            var color = get(),\n                displayColor = '',\n                hasChanged = !tinycolor.equals(color, colorOnShow);\n\n            if (color) {\n                displayColor = color.toString(currentPreferredFormat);\n                // Update the selection palette with the current color.\n                addColorToSelectionPalette(color);\n            }\n\n            if (isInput) {\n                boundElement.val(displayColor);\n            }\n\n            if (fireCallback && hasChanged) {\n                callbacks.change(color);\n                boundElement.trigger('change', [color]);\n            }\n        }\n\n        function reflow() {\n            if (!visible) {\n                return; // Calculations would be useless and wouldn't be reliable anyways.\n            }\n            dragWidth = dragger.width();\n            dragHeight = dragger.height();\n            dragHelperHeight = dragHelper.height();\n            slideWidth = slider.width();\n            slideHeight = slider.height();\n            slideHelperHeight = slideHelper.height();\n            alphaWidth = alphaSlider.width();\n            alphaSlideHelperWidth = alphaSlideHelper.width();\n\n            // Commenting original code:\n            // ... if (!flat) {\n            // ... container.css(\"position\", \"absolute\");\n            // ... if (opts.offset) {\n            // ... container.offset(opts.offset);\n            // ... } else {\n            // ... container.offset(getOffset(container, offsetElement));\n            // ... }\n            // ... }\n            // ... updateHelperLocations();\n            // Comment end.\n\n            if (opts.showPalette) {\n                drawPalette();\n            }\n\n            // Commenting original code:\n            // ... boundElement.trigger('reflow.spectrum');\n            // Comment end.\n        }\n\n        function destroy() {\n            boundElement.show();\n            offsetElement.off(\"click.spectrum touchstart.spectrum\");\n            container.remove();\n            replacer.remove();\n            spectrums[spect.id] = null;\n        }\n\n        function option(optionName, optionValue) {\n            if (optionName === undefined) {\n                return $.extend({}, opts);\n            }\n            if (optionValue === undefined) {\n                return opts[optionName];\n            }\n\n            opts[optionName] = optionValue;\n\n            if (optionName === \"preferredFormat\") {\n                currentPreferredFormat = opts.preferredFormat;\n            }\n            applyOptions();\n        }\n\n        function enable() {\n            disabled = false;\n            boundElement.attr(\"disabled\", false);\n            offsetElement.removeClass(\"sp-disabled\");\n        }\n\n        function disable() {\n            hide();\n            disabled = true;\n            boundElement.attr(\"disabled\", true);\n            offsetElement.addClass(\"sp-disabled\");\n        }\n\n        function setOffset(coord) {\n            opts.offset = coord;\n            reflow();\n        }\n\n        initialize();\n\n        var spect = {\n            show: show,\n            hide: hide,\n            toggle: toggle,\n            reflow: reflow,\n            option: option,\n            enable: enable,\n            disable: disable,\n            offset: setOffset,\n            set: function (c) {\n                set(c);\n                updateOriginalInput();\n            },\n            get: get,\n            destroy: destroy,\n            container: container\n        };\n\n        spect.id = spectrums.push(spect) - 1;\n\n        return spect;\n    }\n\n    /**\n     * checkOffset - get the offset below/above and left/right element depending on screen position.\n     * Thanks https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.datepicker.js.\n     */\n    function getOffset(picker, input) {\n        var extraY = 0;\n        var dpWidth = picker.outerWidth();\n        var dpHeight = picker.outerHeight();\n        var inputHeight = input.outerHeight();\n        var doc = picker[0].ownerDocument;\n        var docElem = doc.documentElement;\n        var viewWidth = docElem.clientWidth + $(doc).scrollLeft();\n        var viewHeight = docElem.clientHeight + $(doc).scrollTop();\n        var offset = input.offset();\n        var offsetLeft = offset.left;\n        var offsetTop = offset.top;\n\n        offsetTop += inputHeight;\n\n        offsetLeft -=\n            Math.min(offsetLeft, (offsetLeft + dpWidth > viewWidth && viewWidth > dpWidth) ?\n                Math.abs(offsetLeft + dpWidth - viewWidth) : 0);\n\n        offsetTop -=\n            Math.min(offsetTop, ((offsetTop + dpHeight > viewHeight && viewHeight > dpHeight) ?\n                Math.abs(dpHeight + inputHeight - extraY) : extraY));\n\n        return {\n            top: offsetTop,\n            bottom: offset.bottom,\n            left: offsetLeft,\n            right: offset.right,\n            width: offset.width,\n            height: offset.height\n        };\n    }\n\n    /**\n     * Noop - do nothing.\n     */\n    function noop() {\n\n    }\n\n    /**\n     * stopPropagation - makes the code only doing this a little easier to read in line.\n     */\n    function stopPropagation(e) {\n        e.stopPropagation();\n    }\n\n    /**\n     * Create a function bound to a given object.\n     * Thanks to underscore.js.\n     */\n    function bind(func, obj) {\n        var slice = Array.prototype.slice;\n        var args = slice.call(arguments, 2);\n        return function () {\n            return func.apply(obj, args.concat(slice.call(arguments)));\n        };\n    }\n\n    /**\n     * Lightweight drag helper.  Handles containment within the element, so that.\n     * when dragging, the x is within [0,element.width] and y is within [0,element.height]\n     */\n    function draggable(element, onmove, onstart, onstop) {\n        onmove = onmove || function () {};\n        onstart = onstart || function () {};\n        onstop = onstop || function () {};\n        var doc = document;\n        var dragging = false;\n        var offset = {};\n        var maxHeight = 0;\n        var maxWidth = 0;\n        var hasTouch = ('ontouchstart' in window);\n\n        var duringDragEvents = {};\n        duringDragEvents[\"selectstart\"] = prevent;\n        duringDragEvents[\"dragstart\"] = prevent;\n        duringDragEvents[\"touchmove mousemove\"] = move;\n        duringDragEvents[\"touchend mouseup\"] = stop;\n\n        function prevent(e) {\n            if (e.stopPropagation) {\n                e.stopPropagation();\n            }\n            if (e.preventDefault) {\n                e.preventDefault();\n            }\n            e.returnValue = false;\n        }\n\n        function move(e) {\n            if (dragging) {\n                // Mouseup happened outside of window.\n                if (IE && doc.documentMode < 9 && !e.button) {\n                    return stop();\n                }\n\n                var t0 = e.originalEvent && e.originalEvent.touches && e.originalEvent.touches[0];\n                var pageX = t0 && t0.pageX || e.pageX;\n                var pageY = t0 && t0.pageY || e.pageY;\n\n                var dragX = Math.max(0, Math.min(pageX - offset.left, maxWidth));\n                var dragY = Math.max(0, Math.min(pageY - offset.top, maxHeight));\n\n                if (hasTouch) {\n                    // Stop scrolling in iOS.\n                    prevent(e);\n                }\n\n                onmove.apply(element, [dragX, dragY, e]);\n            }\n        }\n\n        function start(e) {\n            var rightclick = (e.which) ? (e.which == 3) : (e.button == 2);\n\n            if (!rightclick && !dragging) {\n                if (onstart.apply(element, arguments) !== false) {\n                    dragging = true;\n                    maxHeight = $(element).height();\n                    maxWidth = $(element).width();\n                    offset = $(element).offset();\n\n                    $(doc).on(duringDragEvents);\n                    $(doc.body).addClass(\"sp-dragging\");\n\n                    move(e);\n\n                    prevent(e);\n                }\n            }\n        }\n\n        function stop() {\n            if (dragging) {\n                $(doc).off(duringDragEvents);\n                $(doc.body).removeClass(\"sp-dragging\");\n\n                // Wait a tick before notifying observers to allow the click event.\n                // to fire in Chrome.\n                setTimeout(function () {\n                    onstop.apply(element, arguments);\n                }, 0);\n            }\n            dragging = false;\n        }\n\n        $(element).on(\"touchstart mousedown\", start);\n    }\n\n    function throttle(func, wait, debounce) {\n        var timeout;\n        return function () {\n            var context = this,\n                args = arguments;\n            var throttler = function () {\n                timeout = null;\n                func.apply(context, args);\n            };\n            if (debounce) {\n                clearTimeout(timeout);\n            }\n            if (debounce || !timeout) {\n                timeout = setTimeout(throttler, wait);\n            }\n        };\n    }\n\n    function inputTypeColorSupport() {\n        return $.fn.spectrum.inputTypeColorSupport();\n    }\n\n    // Define a jQuery plugin.\n    var dataID = \"spectrum.id\";\n    $.fn.spectrum = function (opts, extra) {\n\n        if (typeof opts == \"string\") {\n\n            var returnValue = this;\n            var args = Array.prototype.slice.call(arguments, 1);\n\n            this.each(function () {\n                var spect = spectrums[$(this).data(dataID)];\n                if (spect) {\n                    var method = spect[opts];\n                    if (!method) {\n                        throw new Error(\"Spectrum: no such method: '\" + opts + \"'\");\n                    }\n\n                    if (opts == \"get\") {\n                        returnValue = spect.get();\n                    } else if (opts == \"container\") {\n                        returnValue = spect.container;\n                    } else if (opts == \"option\") {\n                        returnValue = spect.option.apply(spect, args);\n                    } else if (opts == \"destroy\") {\n                        spect.destroy();\n                        $(this).removeData(dataID);\n                    } else {\n                        method.apply(spect, args);\n                    }\n                }\n            });\n\n            return returnValue;\n        }\n\n        // Initializing a new instance of spectrum.\n        return this.spectrum(\"destroy\").each(function () {\n            var options = $.extend({}, $(this).data(), opts);\n            var spect = spectrum(this, options);\n            $(this).data(dataID, spect.id);\n        });\n    };\n\n    $.fn.spectrum.load = true;\n    $.fn.spectrum.loadOpts = {};\n    $.fn.spectrum.draggable = draggable;\n    $.fn.spectrum.defaults = defaultOpts;\n    $.fn.spectrum.inputTypeColorSupport = function inputTypeColorSupport() {\n        if (typeof inputTypeColorSupport._cachedResult === \"undefined\") {\n            var colorInput = $(\"<input type='color'/>\")[0]; // If color element is supported, value will default to not null.\n            inputTypeColorSupport._cachedResult = colorInput.type === \"color\" && colorInput.value !== \"\";\n        }\n        return inputTypeColorSupport._cachedResult;\n    };\n\n    $.spectrum = {};\n    $.spectrum.localization = {};\n    $.spectrum.palettes = {};\n\n    $.fn.spectrum.processNativeColorInputs = function () {\n        var colorInputs = $(\"input[type=color]\");\n        if (colorInputs.length && !inputTypeColorSupport()) {\n            colorInputs.spectrum({\n                preferredFormat: \"hex6\"\n            });\n        }\n    };\n\n    // TinyColor v1.1.2\n    // Referece - https://github.com/bgrins/TinyColor\n    // Brian Grinstead, MIT License.\n\n    (function () {\n\n        var trimLeft = /^[\\s,#]+/,\n            trimRight = /\\s+$/,\n            tinyCounter = 0,\n            math = Math,\n            mathRound = math.round,\n            mathMin = math.min,\n            mathMax = math.max,\n            mathRandom = math.random;\n\n        var tinycolor = function (color, opts) {\n\n            color = (color) ? color : '';\n            opts = opts || {};\n\n            // If input is already a tinycolor, return itself.\n            if (color instanceof tinycolor) {\n                return color;\n            }\n            // If we are called as a function, call using new instead.\n            if (!(this instanceof tinycolor)) {\n                return new tinycolor(color, opts);\n            }\n\n            var rgb = inputToRGB(color);\n            this._originalInput = color,\n                this._r = rgb.r,\n                this._g = rgb.g,\n                this._b = rgb.b,\n                this._a = rgb.a,\n                this._roundA = mathRound(1000 * this._a) / 1000,\n                this._format = opts.format || rgb.format;\n            this._gradientType = opts.gradientType;\n\n            // Don't let the range of [0,255] come back in [0,1].\n            // Potentially lose a little bit of precision here, but will fix issues where.\n            // .5 gets interpreted as half of the total, instead of half of 1.\n            // If it was supposed to be 128, this was already taken care of by `inputToRgb`.\n            if (this._r < 1) {\n                this._r = mathRound(this._r);\n            }\n            if (this._g < 1) {\n                this._g = mathRound(this._g);\n            }\n            if (this._b < 1) {\n                this._b = mathRound(this._b);\n            }\n\n            this._ok = rgb.ok;\n            this._tc_id = tinyCounter++;\n        };\n\n        tinycolor.prototype = {\n            isDark: function () {\n                return this.getBrightness() < 128;\n            },\n            isLight: function () {\n                return !this.isDark();\n            },\n            isValid: function () {\n                return this._ok;\n            },\n            getOriginalInput: function () {\n                return this._originalInput;\n            },\n            getFormat: function () {\n                return this._format;\n            },\n            getAlpha: function () {\n                return this._a;\n            },\n            getBrightness: function () {\n                var rgb = this.toRgb();\n                return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n            },\n            setAlpha: function (value) {\n                this._a = boundAlpha(value);\n                this._roundA = mathRound(1000 * this._a) / 1000;\n                return this;\n            },\n            toHsv: function () {\n                var hsv = rgbToHsv(this._r, this._g, this._b);\n                return {\n                    h: hsv.h * 360,\n                    s: hsv.s,\n                    v: hsv.v,\n                    a: this._a\n                };\n            },\n            toHsvString: function () {\n                var hsv = rgbToHsv(this._r, this._g, this._b);\n                var h = mathRound(hsv.h * 360),\n                    s = mathRound(hsv.s * 100),\n                    v = mathRound(hsv.v * 100);\n                return (this._a == 1) ?\n                    \"hsv(\" + h + \", \" + s + \"%, \" + v + \"%) \" :\n                    \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \" + this._roundA + \")\";\n            },\n            toHsl: function () {\n                var hsl = rgbToHsl(this._r, this._g, this._b);\n                return {\n                    h: hsl.h * 360,\n                    s: hsl.s,\n                    l: hsl.l,\n                    a: this._a\n                };\n            },\n            toHslString: function () {\n                var hsl = rgbToHsl(this._r, this._g, this._b);\n                var h = mathRound(hsl.h * 360),\n                    s = mathRound(hsl.s * 100),\n                    l = mathRound(hsl.l * 100);\n                return (this._a == 1) ?\n                    \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)  \" :\n                    \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \" + this._roundA + \")\";\n            },\n            toHex: function (allow3Char) {\n                return rgbToHex(this._r, this._g, this._b, allow3Char);\n            },\n            toHexString: function (allow3Char) {\n                return '#' + this.toHex(allow3Char);\n            },\n            toHex8: function () {\n                return rgbaToHex(this._r, this._g, this._b, this._a);\n            },\n            toHex8String: function () {\n                return '#' + this.toHex8();\n            },\n            toRgb: function () {\n                return {\n                    r: mathRound(this._r),\n                    g: mathRound(this._g),\n                    b: mathRound(this._b),\n                    a: this._a\n                };\n            },\n            toRgbString: function () {\n                return (this._a == 1) ?\n                    \"rgb(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n                    \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n            },\n            toPercentageRgb: function () {\n                return {\n                    r: mathRound(bound01(this._r, 255) * 100) + \"%\",\n                    g: mathRound(bound01(this._g, 255) * 100) + \"%\",\n                    b: mathRound(bound01(this._b, 255) * 100) + \"%\",\n                    a: this._a\n                };\n            },\n            toPercentageRgbString: function () {\n                return (this._a == 1) ?\n                    \"rgb(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n                    \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n            },\n            toName: function () {\n                if (this._a === 0) {\n                    return \"transparent\";\n                }\n\n                if (this._a < 1) {\n                    return false;\n                }\n\n                return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n            },\n            toFilter: function (secondColor) {\n                var hex8String = '#' + rgbaToHex(this._r, this._g, this._b, this._a);\n                var secondHex8String = hex8String;\n                var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n                if (secondColor) {\n                    var s = tinycolor(secondColor);\n                    secondHex8String = s.toHex8String();\n                }\n\n                return \"progid:DXImageTransform.Microsoft.gradient(\" + gradientType + \"startColorstr=\" + hex8String + \",endColorstr=\" + secondHex8String + \")\";\n            },\n            toString: function (format) {\n                var formatSet = !!format;\n                format = format || this._format;\n\n                var formattedString = false;\n                var hasAlpha = this._a < 1 && this._a >= 0;\n                var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"name\");\n\n                if (needsAlphaFormat) {\n                    // Special case for \"transparent\", all other non-alpha formats.\n                    // will return rgba when there is transparency.\n                    if (format === \"name\" && this._a === 0) {\n                        return this.toName();\n                    }\n                    return this.toRgbString();\n                }\n                if (format === \"rgb\") {\n                    formattedString = this.toRgbString();\n                }\n                if (format === \"prgb\") {\n                    formattedString = this.toPercentageRgbString();\n                }\n                if (format === \"hex\" || format === \"hex6\") {\n                    formattedString = this.toHexString();\n                }\n                if (format === \"hex3\") {\n                    formattedString = this.toHexString(true);\n                }\n                if (format === \"hex8\") {\n                    formattedString = this.toHex8String();\n                }\n                if (format === \"name\") {\n                    formattedString = this.toName();\n                }\n                if (format === \"hsl\") {\n                    formattedString = this.toHslString();\n                }\n                if (format === \"hsv\") {\n                    formattedString = this.toHsvString();\n                }\n\n                return formattedString || this.toHexString();\n            },\n\n            _applyModification: function (fn, args) {\n                var color = fn.apply(null, [this].concat([].slice.call(args)));\n                this._r = color._r;\n                this._g = color._g;\n                this._b = color._b;\n                this.setAlpha(color._a);\n                return this;\n            },\n            lighten: function () {\n                return this._applyModification(lighten, arguments);\n            },\n            brighten: function () {\n                return this._applyModification(brighten, arguments);\n            },\n            darken: function () {\n                return this._applyModification(darken, arguments);\n            },\n            desaturate: function () {\n                return this._applyModification(desaturate, arguments);\n            },\n            saturate: function () {\n                return this._applyModification(saturate, arguments);\n            },\n            greyscale: function () {\n                return this._applyModification(greyscale, arguments);\n            },\n            spin: function () {\n                return this._applyModification(spin, arguments);\n            },\n\n            _applyCombination: function (fn, args) {\n                return fn.apply(null, [this].concat([].slice.call(args)));\n            },\n            analogous: function () {\n                return this._applyCombination(analogous, arguments);\n            },\n            complement: function () {\n                return this._applyCombination(complement, arguments);\n            },\n            monochromatic: function () {\n                return this._applyCombination(monochromatic, arguments);\n            },\n            splitcomplement: function () {\n                return this._applyCombination(splitcomplement, arguments);\n            },\n            triad: function () {\n                return this._applyCombination(triad, arguments);\n            },\n            tetrad: function () {\n                return this._applyCombination(tetrad, arguments);\n            }\n        };\n\n        // If input is an object, force 1 into \"1.0\" to handle ratios properly.\n        // String input requires \"1.0\" as input, so 1 will be treated as 1.\n        tinycolor.fromRatio = function (color, opts) {\n            if (typeof color == \"object\") {\n                var newColor = {};\n                for (var i in color) {\n                    if (color.hasOwnProperty(i)) {\n                        if (i === \"a\") {\n                            newColor[i] = color[i];\n                        } else {\n                            newColor[i] = convertToPercentage(color[i]);\n                        }\n                    }\n                }\n                color = newColor;\n            }\n\n            return tinycolor(color, opts);\n        };\n\n        // Given a string or object, convert that input to RGB.\n        // Possible string inputs:\n        //\n        // ... \"red\"\n        // ... \"#f00\" or \"f00\"\n        // ... \"#ff0000\" or \"ff0000\"\n        // ... \"#ff000000\" or \"ff000000\"\n        // ... \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n        // ... \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n        // ... \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n        // ... \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n        // ... \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n        // ... \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n        // ... \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\".\n        function inputToRGB(color) {\n\n            var rgb = {\n                r: 0,\n                g: 0,\n                b: 0\n            };\n            var a = 1;\n            var ok = false;\n            var format = false;\n\n            if (typeof color == \"string\") {\n                color = stringInputToObject(color);\n            }\n\n            if (typeof color == \"object\") {\n                if (color.hasOwnProperty(\"r\") && color.hasOwnProperty(\"g\") && color.hasOwnProperty(\"b\")) {\n                    rgb = rgbToRgb(color.r, color.g, color.b);\n                    ok = true;\n                    format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n                } else if (color.hasOwnProperty(\"h\") && color.hasOwnProperty(\"s\") && color.hasOwnProperty(\"v\")) {\n                    color.s = convertToPercentage(color.s);\n                    color.v = convertToPercentage(color.v);\n                    rgb = hsvToRgb(color.h, color.s, color.v);\n                    ok = true;\n                    format = \"hsv\";\n                } else if (color.hasOwnProperty(\"h\") && color.hasOwnProperty(\"s\") && color.hasOwnProperty(\"l\")) {\n                    color.s = convertToPercentage(color.s);\n                    color.l = convertToPercentage(color.l);\n                    rgb = hslToRgb(color.h, color.s, color.l);\n                    ok = true;\n                    format = \"hsl\";\n                }\n\n                if (color.hasOwnProperty(\"a\")) {\n                    a = color.a;\n                }\n            }\n\n            a = boundAlpha(a);\n\n            return {\n                ok: ok,\n                format: color.format || format,\n                r: mathMin(255, mathMax(rgb.r, 0)),\n                g: mathMin(255, mathMax(rgb.g, 0)),\n                b: mathMin(255, mathMax(rgb.b, 0)),\n                a: a\n            };\n        }\n\n        // Conversion Functions.\n        // --------------------\n\n        // Functions `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n        // Reference - <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>.\n\n        // Handle bounds / percentage checking to conform to CSS color spec.\n        // Reference - <http://www.w3.org/TR/css3-color/>.\n        // Assumes: r, g, b in [0, 255] or [0, 1].\n        // Returns: { r, g, b } in [0, 255].\n        function rgbToRgb(r, g, b) {\n            return {\n                r: bound01(r, 255) * 255,\n                g: bound01(g, 255) * 255,\n                b: bound01(b, 255) * 255\n            };\n        }\n\n        // Converts an RGB color value to HSL.\n        // Assumes: r, g, and b are contained in [0, 255] or [0, 1].\n        // Returns: { h, s, l } in [0,1].\n        function rgbToHsl(r, g, b) {\n\n            r = bound01(r, 255);\n            g = bound01(g, 255);\n            b = bound01(b, 255);\n\n            var max = mathMax(r, g, b),\n                min = mathMin(r, g, b);\n            var h, s, l = (max + min) / 2;\n\n            if (max == min) {\n                h = s = 0; // Achromatic.\n            } else {\n                var d = max - min;\n                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n                switch (max) {\n                    case r:\n                        h = (g - b) / d + (g < b ? 6 : 0);\n                        break;\n                    case g:\n                        h = (b - r) / d + 2;\n                        break;\n                    case b:\n                        h = (r - g) / d + 4;\n                        break;\n                }\n\n                h /= 6;\n            }\n\n            return {\n                h: h,\n                s: s,\n                l: l\n            };\n        }\n\n        // Converts an HSL color value to RGB.\n        // Assumes: h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100].\n        // Returns: { r, g, b } in the set [0, 255].\n        function hslToRgb(h, s, l) {\n            var r, g, b;\n\n            h = bound01(h, 360);\n            s = bound01(s, 100);\n            l = bound01(l, 100);\n\n            function hue2rgb(p, q, t) {\n                if (t < 0) {\n                    t += 1;\n                }\n                if (t > 1) {\n                    t -= 1;\n                }\n                if (t < 1 / 6) {\n                    return p + (q - p) * 6 * t;\n                }\n                if (t < 1 / 2) {\n                    return q;\n                }\n                if (t < 2 / 3) {\n                    return p + (q - p) * (2 / 3 - t) * 6;\n                }\n                return p;\n            }\n\n            if (s === 0) {\n                r = g = b = l; // Achromatic.\n            } else {\n                var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n                var p = 2 * l - q;\n                r = hue2rgb(p, q, h + 1 / 3);\n                g = hue2rgb(p, q, h);\n                b = hue2rgb(p, q, h - 1 / 3);\n            }\n\n            return {\n                r: r * 255,\n                g: g * 255,\n                b: b * 255\n            };\n        }\n\n        // Converts an RGB color value to HSV.\n        // Assumes: r, g, and b are contained in the set [0, 255] or [0, 1].\n        // Returns: { h, s, v } in [0,1].\n        function rgbToHsv(r, g, b) {\n\n            r = bound01(r, 255);\n            g = bound01(g, 255);\n            b = bound01(b, 255);\n\n            var max = mathMax(r, g, b),\n                min = mathMin(r, g, b);\n            var h, s, v = max;\n\n            var d = max - min;\n            s = max === 0 ? 0 : d / max;\n\n            if (max == min) {\n                h = 0; // Achromatic.\n            } else {\n                switch (max) {\n                    case r:\n                        h = (g - b) / d + (g < b ? 6 : 0);\n                        break;\n                    case g:\n                        h = (b - r) / d + 2;\n                        break;\n                    case b:\n                        h = (r - g) / d + 4;\n                        break;\n                }\n                h /= 6;\n            }\n            return {\n                h: h,\n                s: s,\n                v: v\n            };\n        }\n\n        // Converts an HSV color value to RGB.\n        // Assumes: h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100].\n        // Returns: { r, g, b } in the set [0, 255].\n        function hsvToRgb(h, s, v) {\n\n            h = bound01(h, 360) * 6;\n            s = bound01(s, 100);\n            v = bound01(v, 100);\n\n            var i = math.floor(h),\n                f = h - i,\n                p = v * (1 - s),\n                q = v * (1 - f * s),\n                t = v * (1 - (1 - f) * s),\n                mod = i % 6,\n                r = [v, q, p, p, t, v][mod],\n                g = [t, v, v, q, p, p][mod],\n                b = [p, p, t, v, v, q][mod];\n\n            return {\n                r: r * 255,\n                g: g * 255,\n                b: b * 255\n            };\n        }\n\n        // Converts an RGB color to hex.\n        // Assumes r, g, and b are contained in the set [0, 255]\n        // Returns a 3 or 6 character hex.\n        function rgbToHex(r, g, b, allow3Char) {\n\n            var hex = [\n                pad2(mathRound(r).toString(16)),\n                pad2(mathRound(g).toString(16)),\n                pad2(mathRound(b).toString(16))\n            ];\n\n            // Return a 3 character hex if possible.\n            if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n                return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n            }\n\n            return hex.join(\"\");\n        }\n\n        // Converts an RGBA color plus alpha transparency to hex.\n        // Assumes r, g, b and a are contained in the set [0, 255]\n        // Returns an 8 character hex.\n        function rgbaToHex(r, g, b, a) {\n\n            var hex = [\n                pad2(convertDecimalToHex(a)),\n                pad2(mathRound(r).toString(16)),\n                pad2(mathRound(g).toString(16)),\n                pad2(mathRound(b).toString(16))\n            ];\n\n            return hex.join(\"\");\n        }\n\n        // Can be called with any tinycolor input.\n        tinycolor.equals = function (color1, color2) {\n            if (!color1 || !color2) {\n                return false;\n            }\n            return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n        };\n        tinycolor.random = function () {\n            return tinycolor.fromRatio({\n                r: mathRandom(),\n                g: mathRandom(),\n                b: mathRandom()\n            });\n        };\n\n        // Modification Functions.\n        // ----------------------\n        // Thanks to less.js for some of the basics here.\n        // Reference - <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>.\n\n        function desaturate(color, amount) {\n            amount = (amount === 0) ? 0 : (amount || 10);\n            var hsl = tinycolor(color).toHsl();\n            hsl.s -= amount / 100;\n            hsl.s = clamp01(hsl.s);\n            return tinycolor(hsl);\n        }\n\n        function saturate(color, amount) {\n            amount = (amount === 0) ? 0 : (amount || 10);\n            var hsl = tinycolor(color).toHsl();\n            hsl.s += amount / 100;\n            hsl.s = clamp01(hsl.s);\n            return tinycolor(hsl);\n        }\n\n        function greyscale(color) {\n            return tinycolor(color).desaturate(100);\n        }\n\n        function lighten(color, amount) {\n            amount = (amount === 0) ? 0 : (amount || 10);\n            var hsl = tinycolor(color).toHsl();\n            hsl.l += amount / 100;\n            hsl.l = clamp01(hsl.l);\n            return tinycolor(hsl);\n        }\n\n        function brighten(color, amount) {\n            amount = (amount === 0) ? 0 : (amount || 10);\n            var rgb = tinycolor(color).toRgb();\n            rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * -(amount / 100))));\n            rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * -(amount / 100))));\n            rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * -(amount / 100))));\n            return tinycolor(rgb);\n        }\n\n        function darken(color, amount) {\n            amount = (amount === 0) ? 0 : (amount || 10);\n            var hsl = tinycolor(color).toHsl();\n            hsl.l -= amount / 100;\n            hsl.l = clamp01(hsl.l);\n            return tinycolor(hsl);\n        }\n\n        // Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n        // Values outside of this range will be wrapped into this range.\n        function spin(color, amount) {\n            var hsl = tinycolor(color).toHsl();\n            var hue = (mathRound(hsl.h) + amount) % 360;\n            hsl.h = hue < 0 ? 360 + hue : hue;\n            return tinycolor(hsl);\n        }\n\n        // Combination Functions.\n        // ---------------------\n        // Thanks to jQuery xColor for some of the ideas behind these.\n        // Reference - <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>.\n\n        function complement(color) {\n            var hsl = tinycolor(color).toHsl();\n            hsl.h = (hsl.h + 180) % 360;\n            return tinycolor(hsl);\n        }\n\n        function triad(color) {\n            var hsl = tinycolor(color).toHsl();\n            var h = hsl.h;\n            return [\n                tinycolor(color),\n                tinycolor({\n                    h: (h + 120) % 360,\n                    s: hsl.s,\n                    l: hsl.l\n                }),\n                tinycolor({\n                    h: (h + 240) % 360,\n                    s: hsl.s,\n                    l: hsl.l\n                })\n            ];\n        }\n\n        function tetrad(color) {\n            var hsl = tinycolor(color).toHsl();\n            var h = hsl.h;\n            return [\n                tinycolor(color),\n                tinycolor({\n                    h: (h + 90) % 360,\n                    s: hsl.s,\n                    l: hsl.l\n                }),\n                tinycolor({\n                    h: (h + 180) % 360,\n                    s: hsl.s,\n                    l: hsl.l\n                }),\n                tinycolor({\n                    h: (h + 270) % 360,\n                    s: hsl.s,\n                    l: hsl.l\n                })\n            ];\n        }\n\n        function splitcomplement(color) {\n            var hsl = tinycolor(color).toHsl();\n            var h = hsl.h;\n            return [\n                tinycolor(color),\n                tinycolor({\n                    h: (h + 72) % 360,\n                    s: hsl.s,\n                    l: hsl.l\n                }),\n                tinycolor({\n                    h: (h + 216) % 360,\n                    s: hsl.s,\n                    l: hsl.l\n                })\n            ];\n        }\n\n        function analogous(color, results, slices) {\n            results = results || 6;\n            slices = slices || 30;\n\n            var hsl = tinycolor(color).toHsl();\n            var part = 360 / slices;\n            var ret = [tinycolor(color)];\n\n            for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results;) {\n                hsl.h = (hsl.h + part) % 360;\n                ret.push(tinycolor(hsl));\n            }\n            return ret;\n        }\n\n        function monochromatic(color, results) {\n            results = results || 6;\n            var hsv = tinycolor(color).toHsv();\n            var h = hsv.h,\n                s = hsv.s,\n                v = hsv.v;\n            var ret = [];\n            var modification = 1 / results;\n\n            while (results--) {\n                ret.push(tinycolor({\n                    h: h,\n                    s: s,\n                    v: v\n                }));\n                v = (v + modification) % 1;\n            }\n\n            return ret;\n        }\n\n        // Utility Functions.\n        // ---------------------\n\n        tinycolor.mix = function (color1, color2, amount) {\n            amount = (amount === 0) ? 0 : (amount || 50);\n\n            var rgb1 = tinycolor(color1).toRgb();\n            var rgb2 = tinycolor(color2).toRgb();\n\n            var p = amount / 100;\n            var w = p * 2 - 1;\n            var a = rgb2.a - rgb1.a;\n\n            var w1;\n\n            if (w * a == -1) {\n                w1 = w;\n            } else {\n                w1 = (w + a) / (1 + w * a);\n            }\n\n            w1 = (w1 + 1) / 2;\n\n            var w2 = 1 - w1;\n\n            var rgba = {\n                r: rgb2.r * w1 + rgb1.r * w2,\n                g: rgb2.g * w1 + rgb1.g * w2,\n                b: rgb2.b * w1 + rgb1.b * w2,\n                a: rgb2.a * p + rgb1.a * (1 - p)\n            };\n\n            return tinycolor(rgba);\n        };\n\n        // Readability Functions.\n        // ---------------------\n        // Reference - <http://www.w3.org/TR/AERT#color-contrast>.\n\n        // Analyze the 2 colors and returns an object with the following properties:\n        // Param - `brightness`: difference in brightness between the two colors.\n        // Param - `color`: difference in color/hue between the two colors.\n        tinycolor.readability = function (color1, color2) {\n            var c1 = tinycolor(color1);\n            var c2 = tinycolor(color2);\n            var rgb1 = c1.toRgb();\n            var rgb2 = c2.toRgb();\n            var brightnessA = c1.getBrightness();\n            var brightnessB = c2.getBrightness();\n            var colorDiff = (\n                Math.max(rgb1.r, rgb2.r) - Math.min(rgb1.r, rgb2.r) +\n                Math.max(rgb1.g, rgb2.g) - Math.min(rgb1.g, rgb2.g) +\n                Math.max(rgb1.b, rgb2.b) - Math.min(rgb1.b, rgb2.b)\n            );\n\n            return {\n                brightness: Math.abs(brightnessA - brightnessB),\n                color: colorDiff\n            };\n        };\n\n        // Referece - http://www.w3.org/TR/AERT#color-contrast.\n        // Ensure that foreground and background color combinations provide sufficient contrast.\n        // *Example*\n        // Ex - tinycolor.isReadable(\"#000\", \"#111\") => false.\n        tinycolor.isReadable = function (color1, color2) {\n            var readability = tinycolor.readability(color1, color2);\n            return readability.brightness > 125 && readability.color > 500;\n        };\n\n        // Given a base color and a list of possible foreground or background.\n        // colors for that base, returns the most readable color.\n        // *Example*\n        // Ex - tinycolor.mostReadable(\"#123\", [\"#fff\", \"#000\"]) => \"#000\".\n        tinycolor.mostReadable = function (baseColor, colorList) {\n            var bestColor = null;\n            var bestScore = 0;\n            var bestIsReadable = false;\n            for (var i = 0; i < colorList.length; i++) {\n\n                // We normalize both around the \"acceptable\" breaking point,\n                // but rank brightness constrast higher than hue.\n\n                var readability = tinycolor.readability(baseColor, colorList[i]);\n                var readable = readability.brightness > 125 && readability.color > 500;\n                var score = 3 * (readability.brightness / 125) + (readability.color / 500);\n\n                if ((readable && !bestIsReadable) ||\n                    (readable && bestIsReadable && score > bestScore) ||\n                    ((!readable) && (!bestIsReadable) && score > bestScore)) {\n                    bestIsReadable = readable;\n                    bestScore = score;\n                    bestColor = tinycolor(colorList[i]);\n                }\n            }\n            return bestColor;\n        };\n\n        // Big List of Colors.\n        // --------------------\n        // Reference - <http://www.w3.org/TR/css3-color/#svg-color>.\n        var names = tinycolor.names = {\n            aliceblue: \"f0f8ff\",\n            antiquewhite: \"faebd7\",\n            aqua: \"0ff\",\n            aquamarine: \"7fffd4\",\n            azure: \"f0ffff\",\n            beige: \"f5f5dc\",\n            bisque: \"ffe4c4\",\n            black: \"000\",\n            blanchedalmond: \"ffebcd\",\n            blue: \"00f\",\n            blueviolet: \"8a2be2\",\n            brown: \"a52a2a\",\n            burlywood: \"deb887\",\n            burntsienna: \"ea7e5d\",\n            cadetblue: \"5f9ea0\",\n            chartreuse: \"7fff00\",\n            chocolate: \"d2691e\",\n            coral: \"ff7f50\",\n            cornflowerblue: \"6495ed\",\n            cornsilk: \"fff8dc\",\n            crimson: \"dc143c\",\n            cyan: \"0ff\",\n            darkblue: \"00008b\",\n            darkcyan: \"008b8b\",\n            darkgoldenrod: \"b8860b\",\n            darkgray: \"a9a9a9\",\n            darkgreen: \"006400\",\n            darkgrey: \"a9a9a9\",\n            darkkhaki: \"bdb76b\",\n            darkmagenta: \"8b008b\",\n            darkolivegreen: \"556b2f\",\n            darkorange: \"ff8c00\",\n            darkorchid: \"9932cc\",\n            darkred: \"8b0000\",\n            darksalmon: \"e9967a\",\n            darkseagreen: \"8fbc8f\",\n            darkslateblue: \"483d8b\",\n            darkslategray: \"2f4f4f\",\n            darkslategrey: \"2f4f4f\",\n            darkturquoise: \"00ced1\",\n            darkviolet: \"9400d3\",\n            deeppink: \"ff1493\",\n            deepskyblue: \"00bfff\",\n            dimgray: \"696969\",\n            dimgrey: \"696969\",\n            dodgerblue: \"1e90ff\",\n            firebrick: \"b22222\",\n            floralwhite: \"fffaf0\",\n            forestgreen: \"228b22\",\n            fuchsia: \"f0f\",\n            gainsboro: \"dcdcdc\",\n            ghostwhite: \"f8f8ff\",\n            gold: \"ffd700\",\n            goldenrod: \"daa520\",\n            gray: \"808080\",\n            green: \"008000\",\n            greenyellow: \"adff2f\",\n            grey: \"808080\",\n            honeydew: \"f0fff0\",\n            hotpink: \"ff69b4\",\n            indianred: \"cd5c5c\",\n            indigo: \"4b0082\",\n            ivory: \"fffff0\",\n            khaki: \"f0e68c\",\n            lavender: \"e6e6fa\",\n            lavenderblush: \"fff0f5\",\n            lawngreen: \"7cfc00\",\n            lemonchiffon: \"fffacd\",\n            lightblue: \"add8e6\",\n            lightcoral: \"f08080\",\n            lightcyan: \"e0ffff\",\n            lightgoldenrodyellow: \"fafad2\",\n            lightgray: \"d3d3d3\",\n            lightgreen: \"90ee90\",\n            lightgrey: \"d3d3d3\",\n            lightpink: \"ffb6c1\",\n            lightsalmon: \"ffa07a\",\n            lightseagreen: \"20b2aa\",\n            lightskyblue: \"87cefa\",\n            lightslategray: \"789\",\n            lightslategrey: \"789\",\n            lightsteelblue: \"b0c4de\",\n            lightyellow: \"ffffe0\",\n            lime: \"0f0\",\n            limegreen: \"32cd32\",\n            linen: \"faf0e6\",\n            magenta: \"f0f\",\n            maroon: \"800000\",\n            mediumaquamarine: \"66cdaa\",\n            mediumblue: \"0000cd\",\n            mediumorchid: \"ba55d3\",\n            mediumpurple: \"9370db\",\n            mediumseagreen: \"3cb371\",\n            mediumslateblue: \"7b68ee\",\n            mediumspringgreen: \"00fa9a\",\n            mediumturquoise: \"48d1cc\",\n            mediumvioletred: \"c71585\",\n            midnightblue: \"191970\",\n            mintcream: \"f5fffa\",\n            mistyrose: \"ffe4e1\",\n            moccasin: \"ffe4b5\",\n            navajowhite: \"ffdead\",\n            navy: \"000080\",\n            oldlace: \"fdf5e6\",\n            olive: \"808000\",\n            olivedrab: \"6b8e23\",\n            orange: \"ffa500\",\n            orangered: \"ff4500\",\n            orchid: \"da70d6\",\n            palegoldenrod: \"eee8aa\",\n            palegreen: \"98fb98\",\n            paleturquoise: \"afeeee\",\n            palevioletred: \"db7093\",\n            papayawhip: \"ffefd5\",\n            peachpuff: \"ffdab9\",\n            peru: \"cd853f\",\n            pink: \"ffc0cb\",\n            plum: \"dda0dd\",\n            powderblue: \"b0e0e6\",\n            purple: \"800080\",\n            rebeccapurple: \"663399\",\n            red: \"f00\",\n            rosybrown: \"bc8f8f\",\n            royalblue: \"4169e1\",\n            saddlebrown: \"8b4513\",\n            salmon: \"fa8072\",\n            sandybrown: \"f4a460\",\n            seagreen: \"2e8b57\",\n            seashell: \"fff5ee\",\n            sienna: \"a0522d\",\n            silver: \"c0c0c0\",\n            skyblue: \"87ceeb\",\n            slateblue: \"6a5acd\",\n            slategray: \"708090\",\n            slategrey: \"708090\",\n            snow: \"fffafa\",\n            springgreen: \"00ff7f\",\n            steelblue: \"4682b4\",\n            tan: \"d2b48c\",\n            teal: \"008080\",\n            thistle: \"d8bfd8\",\n            tomato: \"ff6347\",\n            turquoise: \"40e0d0\",\n            violet: \"ee82ee\",\n            wheat: \"f5deb3\",\n            white: \"fff\",\n            whitesmoke: \"f5f5f5\",\n            yellow: \"ff0\",\n            yellowgreen: \"9acd32\"\n        };\n\n        // Make it easy to access colors via `hexNames[hex]`.\n        var hexNames = tinycolor.hexNames = flip(names);\n\n        // Utilities.\n        // --------------------\n        function flip(o) {\n            var flipped = {};\n            for (var i in o) {\n                if (o.hasOwnProperty(i)) {\n                    flipped[o[i]] = i;\n                }\n            }\n            return flipped;\n        }\n\n        // Return a valid alpha value [0,1] with all invalid values being set to 1.\n        function boundAlpha(a) {\n            a = parseFloat(a);\n\n            if (isNaN(a) || a < 0 || a > 1) {\n                a = 1;\n            }\n\n            return a;\n        }\n\n        // Take input from [0, n] and return it as [0, 1].\n        function bound01(n, max) {\n            if (isOnePointZero(n)) {\n                n = \"100%\";\n            }\n\n            var processPercent = isPercentage(n);\n            n = mathMin(max, mathMax(0, parseFloat(n)));\n\n            // Automatically convert percentage into number.\n            if (processPercent) {\n                n = parseInt(n * max, 10) / 100;\n            }\n\n            // Handle floating point rounding errors.\n            if ((math.abs(n - max) < 0.000001)) {\n                return 1;\n            }\n\n            // Convert into [0, 1] range if it isn't already.\n            return (n % max) / parseFloat(max);\n        }\n\n        // Force a number between 0 and 1.\n        function clamp01(val) {\n            return mathMin(1, mathMax(0, val));\n        }\n\n        // Parse a base-16 hex value into a base-10 integer.\n        function parseIntFromHex(val) {\n            return parseInt(val, 16);\n        }\n\n        // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1.\n        // Reference - <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>.\n        function isOnePointZero(n) {\n            return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n        }\n\n        // Check to see if string passed in is a percentage.\n        function isPercentage(n) {\n            return typeof n === \"string\" && n.indexOf('%') != -1;\n        }\n\n        // Force a hex value to have 2 characters.\n        function pad2(c) {\n            return c.length == 1 ? '0' + c : '' + c;\n        }\n\n        // Replace a decimal with it's percentage value.\n        function convertToPercentage(n) {\n            if (n <= 1) {\n                n = (n * 100) + \"%\";\n            }\n\n            return n;\n        }\n\n        // Converts a decimal to a hex value.\n        function convertDecimalToHex(d) {\n            return Math.round(parseFloat(d) * 255).toString(16);\n        }\n        // Converts a hex value to a decimal.\n        function convertHexToDecimal(h) {\n            return (parseIntFromHex(h) / 255);\n        }\n\n        var matchers = (function () {\n\n            // Reference - <http://www.w3.org/TR/css3-values/#integers>.\n            var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n            // Reference - <http://www.w3.org/TR/css3-values/#number-value>.\n            var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n            // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n            var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n            // Actual matching.\n            // Parentheses and commas are optional, but not required.\n            // Whitespace can take the place of commas or opening paren.\n            var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n            var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n            return {\n                rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n                rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n                hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n                hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n                hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n                hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n                hex3: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n                hex6: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n                hex8: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n            };\n        })();\n\n        // Permissive string parsing.  Take in a number of formats, and output an object.\n        // based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`.\n        function stringInputToObject(color) {\n\n            color = color.replace(trimLeft, '').replace(trimRight, '').toLowerCase();\n            var named = false;\n            if (names[color]) {\n                color = names[color];\n                named = true;\n            } else if (color == 'transparent') {\n                return {\n                    r: 0,\n                    g: 0,\n                    b: 0,\n                    a: 0,\n                    format: \"name\"\n                };\n            }\n\n            // Try to match string input using regular expressions.\n            // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n            // Just return an object and let the conversion functions handle that.\n            // This way the result will be the same whether the tinycolor is initialized with string or object.\n            var match;\n            if ((match = matchers.rgb.exec(color))) {\n                return {\n                    r: match[1],\n                    g: match[2],\n                    b: match[3]\n                };\n            }\n            if ((match = matchers.rgba.exec(color))) {\n                return {\n                    r: match[1],\n                    g: match[2],\n                    b: match[3],\n                    a: match[4]\n                };\n            }\n            if ((match = matchers.hsl.exec(color))) {\n                return {\n                    h: match[1],\n                    s: match[2],\n                    l: match[3]\n                };\n            }\n            if ((match = matchers.hsla.exec(color))) {\n                return {\n                    h: match[1],\n                    s: match[2],\n                    l: match[3],\n                    a: match[4]\n                };\n            }\n            if ((match = matchers.hsv.exec(color))) {\n                return {\n                    h: match[1],\n                    s: match[2],\n                    v: match[3]\n                };\n            }\n            if ((match = matchers.hsva.exec(color))) {\n                return {\n                    h: match[1],\n                    s: match[2],\n                    v: match[3],\n                    a: match[4]\n                };\n            }\n            if ((match = matchers.hex8.exec(color))) {\n                return {\n                    a: convertHexToDecimal(match[1]),\n                    r: parseIntFromHex(match[2]),\n                    g: parseIntFromHex(match[3]),\n                    b: parseIntFromHex(match[4]),\n                    format: named ? \"name\" : \"hex8\"\n                };\n            }\n            if ((match = matchers.hex6.exec(color))) {\n                return {\n                    r: parseIntFromHex(match[1]),\n                    g: parseIntFromHex(match[2]),\n                    b: parseIntFromHex(match[3]),\n                    format: named ? \"name\" : \"hex\"\n                };\n            }\n            if ((match = matchers.hex3.exec(color))) {\n                return {\n                    r: parseIntFromHex(match[1] + '' + match[1]),\n                    g: parseIntFromHex(match[2] + '' + match[2]),\n                    b: parseIntFromHex(match[3] + '' + match[3]),\n                    format: named ? \"name\" : \"hex\"\n                };\n            }\n\n            return false;\n        }\n\n        window.tinycolor = tinycolor;\n    })();\n\n    $(function () {\n        if ($.fn.spectrum.load) {\n            $.fn.spectrum.processNativeColorInputs();\n        }\n    });\n\n});\n"],"file":"color-picker.min.js"}