{"version":3,"file":"global-body.min.js","sources":["../../src/customizer/global-body.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Theme customizer global-body js\n * @copyright (c) 2021 WisdmLabs (https://wisdmlabs.com/) <support@wisdmlabs.com>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author    Yogesh Shirsath\n */\n\ndefine('theme_remui/customizer/global-body', ['jquery', './utils'], function($, Utils) {\n\n    var SELECTOR = {\n        BASE: 'global-typography-body',\n        FONTFAMILY: 'global-typography-body-fontfamily',\n        FONTSIZE: 'global-typography-body-fontsize',\n        FONTWEIGHT: 'global-typography-body-fontweight',\n        TEXTTRANSFORM: \"global-typography-body-text-transform\",\n        LINEHEIGHT: \"global-typography-body-lineheight\",\n        TEXTCOLOR: \"global-typography-body-textcolor\",\n        LINKCOLOR: \"global-typography-body-linkcolor\",\n        LINKHOVERCOLOR: \"global-typography-body-linkhovercolor\"\n    };\n\n    /**\n     * Get body text color css content.\n     * @returns {String}\n     */\n    function getTextColorContent() {\n        let color = $(`[name='${SELECTOR.TEXTCOLOR}']`).spectrum('get').toString();\n        return `\n            body, input:not([class*='btn-']), select, .dropdown-item, .text-muted, textarea, td {\n                color: ${color};\n            }\n            input[type=\"checkbox\"] {\n                border-color: ${color};\n            }\n            .btn-outline-secondary:not(:disabled):not(.disabled).active,\n            .btn-outline-secondary:not(:disabled):not(.disabled):active,\n            .show>.btn-outline-secondary.dropdown-toggle {\n                color: white;\n            }\n        `;\n    }\n\n    /**\n     * Get body link color css content.\n     * @returns {String}\n     */\n    function getLinkColorContent() {\n        let linkColor = $(`[name='${SELECTOR.LINKCOLOR}']`).spectrum('get').toString();\n        let linkHoverColor = $(`[name='${SELECTOR.LINKHOVERCOLOR}']`).spectrum('get').toString();\n        return `\n            a {\n                color: ${linkColor};\n            }\n            a:hover {\n                color: ${linkHoverColor};\n            }\n        `;\n    }\n\n    /**\n     * Get global font name.\n     * @return {String} Font name\n     */\n     function getGlobalFont() {\n        let fontFamily = $(`[name='${SELECTOR.FONTFAMILY}']`).val();\n        if (fontFamily.toLocaleLowerCase() == 'inherit' || fontFamily.toLocaleLowerCase() == 'standard') {\n            // eslint-disable-next-line no-undef\n            if (remuiFontSelect == 1) {\n                return 'Roboto';\n            }\n            // eslint-disable-next-line no-undef\n            if (remuiFontName == '') {\n                return 'Roboto';\n            }\n            // eslint-disable-next-line no-undef\n            return remuiFontName;\n        }\n        return fontFamily;\n    }\n\n    /**\n     * Get site body content.\n     * @return {string} site body content\n     */\n    function getContent() {\n        let fontFamily = getGlobalFont();\n        let fontSize = $(`[name='${SELECTOR.FONTSIZE}']`).val();\n        let fontWeight = $(`[name='${SELECTOR.FONTWEIGHT}']`).val();\n        let textTransform = $(`[name='${SELECTOR.TEXTTRANSFORM}']`).val();\n        let lineHeight = $(`[name='${SELECTOR.LINEHEIGHT}']`).val();\n\n        let content = `\n            @import url('https://fonts.googleapis.com/css2?family=${fontFamily.replaceAll(' ', '+')}&display=swap');\n            html {\n                font-size: ${fontSize}px;\n                text-transform: ${textTransform};\n            }\n            body {\n                font-family: \"${fontFamily}\",sans-serif;\n                line-height: ${lineHeight};\n                font-weight: ${fontWeight};\n            }\n        `;\n\n        // Tablet.\n        fontSize = $(`[name='${SELECTOR.FONTSIZE}-tablet']`).val();\n        if (fontSize != '') {\n            content += `\\n\n                @media screen and (min-width: ${Utils.deviceWidth.mobile + 1}px) and (max-width: ${Utils.deviceWidth.tablet}px) {\n                    html {\n                        font-size: ${fontSize}px;\n                    }\n                }\n            `;\n        }\n\n        // Mobile.\n        fontSize = $(`[name='${SELECTOR.FONTSIZE}-mobile']`).val();\n        if (fontSize != '') {\n            content += `\\n\n                @media screen and (max-width: ${Utils.deviceWidth.mobile}px) {\n                    html {\n                        font-size: ${fontSize}px;\n                    }\n                }\n            `;\n        }\n        return content;\n    }\n\n    /**\n     * Apply settings.\n     */\n    function apply() {\n        Utils.putStyle(SELECTOR.BASE, getContent());\n        Utils.putStyle(SELECTOR.TEXTCOLOR, getTextColorContent());\n        Utils.putStyle(SELECTOR.LINKCOLOR, getLinkColorContent());\n    }\n\n    /**\n     * Initialize events.\n     */\n    function init() {\n\n        // Color observer.\n        $(`\n            [name='${SELECTOR.TEXTCOLOR}'],\n            [name='${SELECTOR.LINKCOLOR}'],\n            [name='${SELECTOR.LINKHOVERCOLOR}']\n        `).bind('color.changed', function() {\n            apply();\n        });\n\n        $(`\n            [name='${SELECTOR.FONTSIZE}'],\n            [name='${SELECTOR.FONTSIZE}-tablet'],\n            [name='${SELECTOR.FONTSIZE}-mobile'],\n            [name='${SELECTOR.FONTWEIGHT}'],\n            [name='${SELECTOR.TEXTTRANSFORM}'],\n            [name='${SELECTOR.LINEHEIGHT}'],\n            [name='${SELECTOR.FONTFAMILY}']\n        `).on('input', function() {\n            apply();\n        });\n    }\n\n    return {\n        init: init,\n        apply: apply\n    };\n});\n"],"names":["define","$","Utils","SELECTOR","getContent","fontFamily","val","toLocaleLowerCase","remuiFontSelect","remuiFontName","getGlobalFont","fontSize","fontWeight","textTransform","lineHeight","content","replaceAll","deviceWidth","mobile","tablet","apply","putStyle","color","spectrum","toString","getTextColorContent","linkColor","linkHoverColor","getLinkColorContent","init","bind","on"],"mappings":";;;;;;AAqBAA,4CAA6C,CAAC,SAAU,YAAY,SAASC,EAAGC,WAExEC,cACM,yBADNA,oBAEY,oCAFZA,kBAGU,kCAHVA,oBAIY,oCAJZA,uBAKe,wCALfA,oBAMY,oCANZA,mBAOW,mCAPXA,mBAQW,mCARXA,wBASgB,iDAkEXC,iBACDC,0BArBAA,WAAaJ,mBAAYE,2BAAyBG,YAChB,WAAlCD,WAAWE,qBAAsE,YAAlCF,WAAWE,oBAEnC,GAAnBC,iBAIiB,IAAjBC,cAHO,SAOJA,cAEJJ,WAQUK,GACbC,SAAWV,mBAAYE,yBAAuBG,MAC9CM,WAAaX,mBAAYE,2BAAyBG,MAClDO,cAAgBZ,mBAAYE,8BAA4BG,MACxDQ,WAAab,mBAAYE,2BAAyBG,MAElDS,sFACwDV,WAAWW,WAAW,IAAK,iFAElEL,yDACKE,6FAGFR,kEACDS,sDACAF,gDAKvBD,SAAWV,mBAAYE,gCAA8BG,MACrC,IAAZK,WACAI,qEACoCb,MAAMe,YAAYC,OAAS,iCAAwBhB,MAAMe,YAAYE,wFAEhFR,yEAO7BA,SAAWV,mBAAYE,gCAA8BG,MACrC,IAAZK,WACAI,qEACoCb,MAAMe,YAAYC,wFAE7BP,yEAKtBI,iBAMFK,QACLlB,MAAMmB,SAASlB,cAAeC,cAC9BF,MAAMmB,SAASlB,kCA7GXmB,MAAQrB,mBAAYE,0BAAwBoB,SAAS,OAAOC,uJAG/CF,uGAGOA,kSAuGWG,IACnCvB,MAAMmB,SAASlB,kCAzFXuB,UAAYzB,mBAAYE,0BAAwBoB,SAAS,OAAOC,WAChEG,eAAiB1B,mBAAYE,+BAA6BoB,SAAS,OAAOC,qEAG7DE,qFAGAC,6CAkFkBC,UA8BhC,CACHC,gBAtBA5B,iCACaE,sDACAA,sDACAA,yCACV2B,KAAK,iBAAiB,WACrBV,WAGJnB,iCACaE,qDACAA,4DACAA,4DACAA,uDACAA,0DACAA,uDACAA,qCACV4B,GAAG,SAAS,WACXX,YAMJA,MAAOA"}