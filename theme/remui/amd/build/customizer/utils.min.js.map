{"version":3,"file":"utils.min.js","sources":["../../src/customizer/utils.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Theme customizer utils js\n * @copyright (c) 2021 WisdmLabs (https://wisdmlabs.com/) <support@wisdmlabs.com>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author    Yogesh Shirsath\n */\n\ndefine('theme_remui/customizer/utils', [\n        'jquery',\n        'core/ajax',\n        'core/notification',\n        'core/modal_factory',\n        'core/modal_events',\n        'core/fragment',\n        'core/modal_save_cancel'\n    ], function($, Ajax, Notification, ModalFactory, ModalEvents, Fragment) {\n\n    /**\n     * Selectors\n     */\n    var SELECTOR = {\n        COMPONENT: 'theme_remui',\n        FORMLABEL: '.col-form-label',\n        HMTLEDITOR: 'customizer_htmleditor',\n        CONTROLS: '#customize-controls',\n        IFRAME: '#customizer-frame',\n        WRAP: '#customizer-wrap',\n        IFRAME_OVERLAY: '#preview-overlay',\n    };\n\n    /**\n     * Promises list.\n     */\n    var PROMISES = {\n        /**\n         * Get file url using itemid\n         * @param {number} itemid Item id\n         * @return {Promise}\n         */\n        GET_FILE_URL: function(itemid) {\n            return Ajax.call([{\n                methodname: 'theme_remui_customizer_get_file_from_setting',\n                args: {\n                    itemid: itemid\n                }\n            }])[0];\n        }\n    };\n\n    /**\n     * Device widths\n     */\n    var deviceWidth = {\n        tablet: 768,\n        mobile: 480\n    };\n\n    /**\n     * Get contentDocument of iframe\n     * @return {DOM} contentDocument\n     */\n    function getDocument() {\n        return $(SELECTOR.IFRAME)[0].contentDocument;\n    }\n\n    /**\n     * Get contentWindow of iframe\n     * @return {DOM} contentWindow\n     */\n    function getWindow() {\n        return $(SELECTOR.IFRAME)[0].contentWindow;\n    }\n\n    /**\n     * Put style in style tag.\n     * @param {String} id      Id for style tag\n     * @param {String} content Style content\n     */\n    function putStyle(id, content) {\n        id += '_style';\n        let bodyDOM = $(getDocument()).find('body');\n\n        if ($(bodyDOM).find('#' + id).length == 0) {\n            $(bodyDOM).append(`<style id=\"${id}\"></style>`);\n        }\n        $(bodyDOM).find('#' + id).html(content);\n    }\n\n    /**\n     * Get file user from itemid\n     * @param {Number} itemid file itemid\n     * @return {Promise}\n     */\n    function getFileURL(itemid) {\n        return PROMISES.GET_FILE_URL(itemid).fail(Notification.exception);\n    }\n\n    /**\n     * File observer.\n     * @param {DOM} targetNode Node on which observer will be applied\n     * @param {function} callBack Callback method\n     */\n    function fileObserver(targetNode, callBack) {\n        // Create an observer instance linked to the callback function\n        const observer = new MutationObserver(function() {\n            $(SELECTOR.CONTROLS).data('unsaved', true);\n            callBack();\n        });\n\n        // Start observing the target node for configured mutations\n        observer.observe(targetNode, {\n            attributes: true,\n            attributeFilter: ['class'],\n            childList: false,\n            characterData: false\n        });\n    }\n\n    /**\n     * Show loader.\n     */\n    function showLoader() {\n        $(SELECTOR.IFRAME_OVERLAY).show();\n    }\n\n    /**\n     * Hide loader/\n     */\n    function hideLoader() {\n        $(SELECTOR.IFRAME_OVERLAY).hide();\n    }\n\n    /**\n     * Expand html editor in modal to get more area.\n     * @param {String} name Setting name.\n     */\n    function htmlEditorExpand(name) {\n        $(`#fitem_id_${name} .btn.fa-expand`).on('click', function() {\n            let content = $(`#id_${name}`).val();\n            ModalFactory.create({\n                title: $(`#fitem_id_${name} ${SELECTOR.FORMLABEL}`).text(),\n                body: Fragment.loadFragment(SELECTOR.COMPONENT, SELECTOR.HMTLEDITOR, 1, {content: content}),\n                type: ModalFactory.types.SAVE_CANCEL\n            }, $('#create')).done(function(modal) {\n                modal.show();\n                $(modal.getModal()).addClass('modal-lg');\n                var root = modal.getRoot();\n                root.on(ModalEvents.save, function(event) {\n                    event.preventDefault();\n                    content = $(`#${SELECTOR.COMPONENT}_${SELECTOR.HMTLEDITOR}`).val();\n                    $(`#id_${name}`).val(content).trigger('change');\n                    $(`#id_${name}editable`).html(content);\n                    modal.hide();\n                });\n\n                // Destroy modal on hidden.\n                root.on(ModalEvents.hidden, function() {\n                    modal.destroy();\n                });\n            });\n        });\n    }\n\n    return {\n        putStyle: putStyle,\n        getDocument: getDocument,\n        getWindow: getWindow,\n        deviceWidth: deviceWidth,\n        getFileURL: getFileURL,\n        fileObserver: fileObserver,\n        showLoader: showLoader,\n        hideLoader: hideLoader,\n        htmlEditorExpand: htmlEditorExpand\n    };\n});\n"],"names":["define","$","Ajax","Notification","ModalFactory","ModalEvents","Fragment","SELECTOR","PROMISES","itemid","call","methodname","args","getDocument","contentDocument","putStyle","id","content","bodyDOM","find","length","append","html","getWindow","contentWindow","deviceWidth","tablet","mobile","getFileURL","fail","exception","fileObserver","targetNode","callBack","MutationObserver","data","observe","attributes","attributeFilter","childList","characterData","showLoader","show","hideLoader","hide","htmlEditorExpand","name","on","val","create","title","text","body","loadFragment","type","types","SAVE_CANCEL","done","modal","getModal","addClass","root","getRoot","save","event","preventDefault","trigger","hidden","destroy"],"mappings":";;;;;;AAqBAA,sCAAuC,CAC/B,SACA,YACA,oBACA,qBACA,oBACA,gBACA,2BACD,SAASC,EAAGC,KAAMC,aAAcC,aAAcC,YAAaC,cAK1DC,mBACW,cADXA,mBAEW,kBAFXA,oBAGY,wBAHZA,kBAIU,sBAJVA,gBAKQ,oBALRA,wBAOgB,mBAMhBC,sBAMc,SAASC,eACZP,KAAKQ,KAAK,CAAC,CACdC,WAAY,+CACZC,KAAM,CACFH,OAAQA,WAEZ,aAgBHI,qBACEZ,EAAEM,iBAAiB,GAAGO,sBAqG1B,CACHC,kBAtFcC,GAAIC,SAClBD,IAAM,aACFE,QAAUjB,EAAEY,eAAeM,KAAK,QAEI,GAApClB,EAAEiB,SAASC,KAAK,IAAMH,IAAII,QAC1BnB,EAAEiB,SAASG,4BAAqBL,kBAEpCf,EAAEiB,SAASC,KAAK,IAAMH,IAAIM,KAAKL,UAgF/BJ,YAAaA,YACbU,4BAhGOtB,EAAEM,iBAAiB,GAAGiB,eAiG7BC,YAnHc,CACdC,OAAQ,IACRC,OAAQ,KAkHRC,oBA3EgBnB,eACTD,sBAAsBC,QAAQoB,KAAK1B,aAAa2B,YA2EvDC,sBAnEkBC,WAAYC,UAEb,IAAIC,kBAAiB,WAClCjC,EAAEM,mBAAmB4B,KAAK,WAAW,GACrCF,cAIKG,QAAQJ,WAAY,CACzBK,YAAY,EACZC,gBAAiB,CAAC,SAClBC,WAAW,EACXC,eAAe,KAwDnBC,sBAhDAxC,EAAEM,yBAAyBmC,QAiD3BC,sBA1CA1C,EAAEM,yBAAyBqC,QA2C3BC,0BApCsBC,MACtB7C,sBAAe6C,yBAAuBC,GAAG,SAAS,eAC1C9B,QAAUhB,gBAAS6C,OAAQE,MAC/B5C,aAAa6C,OAAO,CAChBC,MAAOjD,sBAAe6C,iBAAQvC,qBAAsB4C,OACpDC,KAAM9C,SAAS+C,aAAa9C,mBAAoBA,oBAAqB,EAAG,CAACU,QAASA,UAClFqC,KAAMlD,aAAamD,MAAMC,aAC1BvD,EAAE,YAAYwD,MAAK,SAASC,OAC3BA,MAAMhB,OACNzC,EAAEyD,MAAMC,YAAYC,SAAS,gBACzBC,KAAOH,MAAMI,UACjBD,KAAKd,GAAG1C,YAAY0D,MAAM,SAASC,OAC/BA,MAAMC,iBACNhD,QAAUhB,aAAMM,+BAAsBA,sBAAuByC,MAC7D/C,gBAAS6C,OAAQE,IAAI/B,SAASiD,QAAQ,UACtCjE,gBAAS6C,kBAAgBxB,KAAKL,SAC9ByC,MAAMd,UAIViB,KAAKd,GAAG1C,YAAY8D,QAAQ,WACxBT,MAAMU"}