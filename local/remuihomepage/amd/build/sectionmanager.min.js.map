{"version":3,"file":"sectionmanager.min.js","sources":["../src/sectionmanager.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\n/* eslint-disable jsdoc/require-jsdoc */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-undef */\n/* eslint-disable max-len */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable no-eq-null */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Section manager class\n *\n * @module     local_remuihomepage/sectionmanager\n * @copyright  (c) 2018 WisdmLabs (https://wisdmlabs.com/)\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/templates',\n    'core/notification',\n    'theme_remui/notice'\n], function(\n    $,\n    Ajax,\n    Templates,\n    Notification,\n    Notice\n) {\n    const RemUIEvents = {\n        SECTION_ADDED: 'theme_remui-frontpage-section-added',\n        SECTION_UPDATED: 'theme_remui-frontpage-section-updated',\n    };\n\n    let SECTIONSELECTOR = \"\";\n\n    // Keep the loaded sections in memory.\n    var loadedSections = [];\n\n    // Keep section deletion timers.\n    var sectionDeletion = [];\n\n    function SectionManager () {\n        this.sectioncontainer = '#page-site-index .home-sections';\n        this.templateprefix = 'local_remuihomepage/';\n        this.templateprefix += $('body').hasClass('remui_lite') ? 'lite_' : '';\n    }\n\n    /**\n     * Set loaded section\n     * @param {Number} id   section is\n     * @param {String} json sections sections list\n     */\n    SectionManager.prototype.setLoadedSection = function(id, json) {\n        loadedSections[id] = json;\n    };\n\n    /**\n     * Get loaded section\n     * @param  {Number} instanceid Instance id of section\n     * @return {String}            Section json\n     */\n    SectionManager.prototype.getLoadedSection = function(instanceid) {\n        return loadedSections[instanceid];\n    };\n\n    /**\n     * Set name of section\n     * @param {String} name Section name\n     */\n    SectionManager.prototype.setSectionName = function(name) {\n        this.name = name;\n    };\n\n    /**\n     * Set instance id\n     * @param {Number} id Instance id\n     */\n    SectionManager.prototype.setInstanceid = function(id) {\n        this.instanceid = id;\n        SECTIONSELECTOR = 'section[data-instance=\"' + id + '\"]';\n    };\n\n    /**\n     * Template prefix string\n     * @param  {String} str Prefix string\n     * @return {String}     Return template name with prefix\n     */\n    SectionManager.prototype.templateprefixer = function(str) {\n        return this.templateprefix + str;\n    };\n\n    /**\n     * Activate loader to load section on page\n     * @param  {object} data section data\n     */\n    SectionManager.prototype.activateLoader = function(data) {\n        var data = this.getJsonParsedData(data);\n        let callback = (function() {\n            this.setInstanceid(data.id);\n            this.saveSectionsOrder();\n            $('body').trigger('scroll');\n            this.scrollToSection('section[data-instance=\"' + data.id + '\"]');\n        }).bind(this);\n\n        this.renderTemplate(this.templateprefixer(data.sectionname), data, this.sectioncontainer, callback);\n    };\n\n    /**\n     * Scroll To the section\n     * @param {String} selector Section selector\n     */\n    SectionManager.prototype.scrollToSection = function(selector) {\n        var offset = $(selector).offset().top - 65;\n        $('html, body').animate({scrollTop: offset}, 1000);\n    };\n\n    /**\n     * Render template and append in sections list\n     * @param  {string}   template   Template name\n     * @param  {object}   configdata section data\n     * @param  {string}   selector   Container selector\n     * @param  {function} callback   Callback to execute after rendering template\n     */\n    SectionManager.prototype.renderTemplate = function(template, configdata, selector, callback) {\n        Templates.render(template, configdata)\n        .then(function(html, js) {\n            Templates.appendNodeContents(selector, html, js);\n            $('body').trigger({\n                type: RemUIEvents.SECTION_ADDED,\n                configdata: configdata\n            });\n            if (callback != null) {\n                callback();\n            }\n        });\n    };\n\n    /**\n     * Get section element by instance id\n     * @param  {Number} instanceid Section instance id\n     * @return {DOM}               Section element\n     */\n    SectionManager.prototype.getSectionElement = function(instanceid) {\n        if (instanceid !== false) {\n            this.setInstanceid(instanceid);\n        }\n        return $('body').find(SECTIONSELECTOR);\n    };\n\n    /**\n     * Play video of visible slide\n     * @param  {Number} instanceid Section instance id\n     */\n    SectionManager.prototype.playSliderVideo = function(instanceid) {\n        var slider = this.getSectionElement(instanceid);\n        slider.find('.carousel-item:not(.active) video').each(function(index, video) {\n            video.pause();\n        });\n        slider.find('.carousel-item.active video').each(function(index, video) {\n            video.play();\n        });\n    };\n\n    /**\n     * Render first template from the configdata array\n     * @param  {array}  configdata Configuration array\n     * @param  {string} selector   Root container selector\n     */\n    SectionManager.prototype.renderTemplates = function(configdata, selector) {\n        let json = configdata.pop();\n        let section = this.getJsonParsedData(json);\n        this.setLoadedSection(section.id, json);\n        section.lazyloading = true;\n        Templates.render('local_remuihomepage/common', section)\n        .done((function(html, js) {\n            html = $(html).height(window.innerHeight + 'px');\n            Templates.appendNodeContents(selector, html, js);\n            // Show section immediatly if appear animation is disabled.\n            if (appearanimation == false) {\n                $('body').trigger('scroll');\n            }\n            this.hideAllSectionsLoader();\n            jQuery(window).scrollTop(0);\n            if (configdata.length == 0) {\n                return;\n            }\n            this.renderTemplates(configdata, selector);\n        }).bind(this)).fail((function(ex) {\n            this.hideAllSectionsLoader();\n            Notification.exception(ex);\n        }).bind(this));\n    };\n\n    /**\n     * Returns parsed data For this instance using $.parseJSON which is deprecated method,\n     * find alternative for this and JSON.parse method add unnecessary thing in object.\n     * @param  {String} data Json data\n     * @return {Object}      Parsed json data\n     */\n    SectionManager.prototype.getJsonParsedData = function(data) {\n        return JSON.parse(data);\n    };\n\n    /**\n     * Add section to page\n     */\n    SectionManager.prototype.addSection = function() {\n        Ajax.call([{\n            methodname: 'local_remuihomepage_create_section_instance',\n            args: {sectionname: this.name},\n            done: this.activateLoader.bind(this),\n            fail: Notification.exception\n        }]);\n    };\n\n    /**\n     * Hide main loader which covers all sections area till sections are loaded\n     */\n    SectionManager.prototype.hideAllSectionsLoader = function() {\n        $('.sections-loader-wrapper').removeClass('show');\n        setTimeout(function() {\n            $('.sections-loader-wrapper').hide();\n            $(window).trigger('scroll');\n        }, 300);\n    };\n\n    /**\n     * Hide main loader which covers all sections area till sections are loaded\n     */\n    SectionManager.prototype.showAllSectionsLoader = function() {\n        $('.sections-loader-wrapper').addClass('show').css('display', 'block');\n    };\n\n    /**\n     * Show section loader\n     * @param  {int}  instanceid Instance id of section\n     * @param  {Boolean} show       true if show loader else false\n     */\n    SectionManager.prototype.showSectionLoader = function(instanceid, show) {\n        $('.section-loader-wrapper[data-instance=\"' + instanceid + '\"]').toggleClass('d-none', !show);\n    };\n\n    /**\n     * Render all section on page load\n     * @param {response} response Ajax call response\n     */\n    SectionManager.prototype.addAllSections = function(response) {\n        response.sections.reverse();\n        if (response.sections.length == 0) {\n            this.hideAllSectionsLoader();\n            return;\n        }\n        this.renderTemplates(response.sections, this.sectioncontainer);\n    };\n\n    /**\n     * Load all section configuration\n     */\n    SectionManager.prototype.LoadAllSections = function() {\n        Ajax.call([{\n            methodname: 'local_remuihomepage_fetch_all_instances',\n            args: {},\n            done: this.addAllSections.bind(this),\n            fail: (function(ex) {\n                Notification.exception(ex);\n                this.hideAllSectionsLoader();\n            }).bind(this)\n        }]);\n    };\n\n    /**\n     * Reload section if configuration is updated.\n     * @param  {Object}   response js object with updation status and section context\n     * @param  {Function} callback Callback function to run after reloading section\n     */\n    SectionManager.prototype.reloadSection = function(response, callback) {\n        if (response.success == false) {\n            return;\n        }\n        let context = JSON.parse(response.context);\n        this.setInstanceid(context.id);\n        let reloadingSection = $(SECTIONSELECTOR);\n        Templates.render(this.templateprefixer(context.sectionname), context)\n        .done((function(html, js) {\n            html = $(html);\n            // Show section immediatly if appear animation is disabled.\n            if (appearanimation == false) {\n                $(html).removeClass('invisible');\n            }\n            Templates.replaceNode(reloadingSection, html, js);\n            $('body').trigger({\n                type: RemUIEvents.SECTION_UPDATED,\n                configdata: context\n            });\n            if (context.sectionname == 'slider') {\n                this.playSliderVideo(context.id);\n            }\n            $('body').trigger('scroll');\n            if (callback != null) {\n                callback();\n            }\n        }).bind(this))\n        .fail((function(ex) {\n            this.showSectionLoader(this.instanceid, false);\n            Notification.exception(ex);\n        }).bind(this));\n    };\n\n    /**\n     * Update sections settings\n     * @param  {int}    instanceid Section instance id\n     * @param  {string} formdata   Serialized section form data\n     */\n    SectionManager.prototype.updateSection = function(instanceid, formdata) {\n        this.showSectionLoader(instanceid, true);\n        Ajax.call([\n        {\n            methodname: 'local_remuihomepage_update_section_instance',\n            args: {instanceid: instanceid, jsonformdata: formdata},\n            done: (function(response) {\n                Notice.success(M.util.get_string('sectionupdated', 'local_remuihomepage'), 4000);\n                this.reloadSection(response, null);\n            }).bind(this),\n        fail: (function(ex) {\n                this.showSectionLoader(instanceid, false);\n                Notification.exception(ex);\n        }).bind(this)\n        }\n        ]);\n    };\n\n    /**\n     * Enable deletion timer or cancel it\n     * @param  {Number}  id     Section id\n     * @param  {Boolean} action true to start timer, false to clear timer\n     */\n    SectionManager.prototype.deletionTimer = function(id, action) {\n        // If user cancel deletion then clear timer.\n        if (action == false) {\n            clearInterval(sectionDeletion[id]);\n        }\n        var section = this.getSectionElement(false);\n        var timer = $(section).find('.cancel-delete-section .section-deletion-timer');\n\n        // Set section deletion timer.\n        sectionDeletion[id] = setInterval((function() {\n            var time = parseInt($(timer).text()) - 1;\n            $(timer).text(time);\n\n            // If time is 0 then clear timer and remove section.\n            if (time == 0) {\n                clearInterval(sectionDeletion[id]);\n                $(section).remove();\n                this.saveSectionsOrder();\n                $('body').trigger('scroll');\n            }\n        }).bind(this), 1000);\n    };\n\n    /**\n     * Mark section instance as deleted or undo deletion\n     * @param  {Number}  id      section id\n     * @param  {Boolean|Number}  action Deletion action false to cancel, true to mark as delete. 2 if confirm deletion\n     */\n    SectionManager.prototype.deleteInstance = function(id, action) {\n        this.showSectionLoader(id, true);\n        this.setInstanceid(id);\n\n        // Clear timer and delete section from dom when admin confirm form deletion.\n        if (action == 2) {\n            this.deletionTimer(id, false);\n            this.getSectionElement(false).remove();\n            this.saveSectionsOrder();\n            $('body').trigger('scroll');\n            return;\n        }\n\n        if (action == true) {\n            Notice.success(M.util.get_string('sectiondeleted', 'local_remuihomepage'), 4000);\n        }\n\n        Ajax.call([\n        {\n            methodname: 'local_remuihomepage_delete_section_instance',\n            args: {instanceid: id, action: action},\n            done: (function(response) {\n                this.reloadSection(response, (function() {\n\n                    // Start deletion timer.\n                    this.deletionTimer(id, action);\n                }).bind(this));\n                this.saveSectionsOrder();\n            }).bind(this),\n        fail: (function(ex) {\n                this.showSectionLoader(id, false);\n                Notification.exception(ex);\n        }).bind(this)\n        }\n        ]);\n    };\n\n    /**\n     * Get sections order\n     */\n    SectionManager.prototype.getSectionsOrder = function() {\n        let sections = $('body').find('section[data-instance]');\n        let order = [];\n        sections.each(function(index, section) {\n            if ($(section).find('.section-delete-overlay')) {\n                order.push($(section).data('instance'));\n            }\n        });\n        return order;\n    };\n\n    /**\n     * Save order of section in user preference\n     */\n    SectionManager.prototype.saveSectionsOrder = function() {\n        if (transparentheader) {\n            $('body').toggleClass('has-slider animate-header', $('body').find('section[data-instance]:first-child').is('.section-slider'));\n        }\n        let order = this.getSectionsOrder();\n        return Ajax.call([{\n            methodname: 'local_remuihomepage_save_sections_order',\n            args: {\n                order\n            }\n        }])[0];\n    };\n\n    /**\n     * Reorder the section eigther up or down\n     * @param  {int} instanceid Section instanceid\n     * @param  {int} move       Direction(1 for down, -1 for up)\n     */\n    SectionManager.prototype.reorderSection = function(instanceid, move, saveorder) {\n        this.setInstanceid(instanceid);\n        let section = $(SECTIONSELECTOR);\n        if (move == -1 && !section.is(':first-child')) {// Move upside.\n            section.prev().insertAfter(section);\n        } else if(move == 1 && !section.is(':last-child')) {// Move downside.\n            section.next().insertBefore(section);\n        } else {\n            return;\n        }\n        if (saveorder == false) {\n            return;\n        }\n        this.saveSectionsOrder().fail((function(ex) {\n            Notification.exception(ex);\n            this.reorderSection(instanceid, move * -1, false);\n        }).bind(this));\n    };\n\n    /**\n     * Update visibility of section\n     * @param  {Number}  instanceid Section instance id\n     * @param  {Boolean} visible    Section visibility\n     */\n    SectionManager.prototype.updateVisibility = function(instanceid, visible) {\n        var visibilityButton = this.getSectionElement(instanceid).find('button.section-visibility');\n        Ajax.call([\n        {\n            methodname: 'local_remuihomepage_update_section_visibility',\n            args: {\n                id: instanceid,\n                visible: visible\n            },\n            done: (function(response) {\n                $(visibilityButton).data('visible', visible);\n                $(visibilityButton).find('.icon').toggleClass('fa-eye', visible);\n                $(visibilityButton).find('.icon').toggleClass('fa-eye-slash', !visible);\n                if(visible){\n                    $(visibilityButton).attr(\"title\", 'Hide');\n                    $(visibilityButton).find('.icon').attr(\"title\", 'Hide');\n                } else {\n                    $(visibilityButton).attr(\"title\", 'Show');\n                    $(visibilityButton).find('.icon').attr(\"title\", 'Show');\n                }\n            }).bind(this),\n        fail: Notification.exception\n        }\n        ]);\n    };\n\n    var SECTIONMANAGER = new SectionManager();\n\n    return SECTIONMANAGER;\n});\n"],"names":["define","$","Ajax","Templates","Notification","Notice","RemUIEvents","SECTIONSELECTOR","loadedSections","sectionDeletion","SectionManager","sectioncontainer","templateprefix","hasClass","prototype","setLoadedSection","id","json","getLoadedSection","instanceid","setSectionName","name","setInstanceid","templateprefixer","str","this","activateLoader","data","getJsonParsedData","callback","saveSectionsOrder","trigger","scrollToSection","bind","renderTemplate","sectionname","selector","offset","top","animate","scrollTop","template","configdata","render","then","html","js","appendNodeContents","type","getSectionElement","find","playSliderVideo","slider","each","index","video","pause","play","renderTemplates","pop","section","lazyloading","done","height","window","innerHeight","appearanimation","hideAllSectionsLoader","jQuery","length","fail","ex","exception","JSON","parse","addSection","call","methodname","args","removeClass","setTimeout","hide","showAllSectionsLoader","addClass","css","showSectionLoader","show","toggleClass","addAllSections","response","sections","reverse","LoadAllSections","reloadSection","success","context","reloadingSection","replaceNode","updateSection","formdata","jsonformdata","M","util","get_string","deletionTimer","action","clearInterval","timer","setInterval","time","parseInt","text","remove","deleteInstance","getSectionsOrder","order","push","transparentheader","is","reorderSection","move","saveorder","next","insertBefore","prev","insertAfter","updateVisibility","visible","visibilityButton","attr"],"mappings":"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"}