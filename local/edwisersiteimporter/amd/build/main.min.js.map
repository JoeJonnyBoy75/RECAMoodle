{"version":3,"sources":["main.js"],"names":["define","$","ModalFactory","ModalEvents","Fragment","Templates","Notification","Ajax","PROMISES","refresh_templates","call","methodname","args","loaded","initTemplateChooser","on","event","_this","this","preventDefault","type","data","render","done","html","js","element","require","template","create","title","M","util","get_string","types","SAVE_CANCEL","modal","replaceNodeContents","body","show","setSaveButtonText","getRoot","save","e","importTemplate","hidden","destroy","showTemplateModal","fail","exception","loadView","hide","loadFragment","init","root","tab","status","initEvents","initLoader","document","ready","is"],"mappings":"AAwBAA,OAAO,CACH,SACA,qBACA,oBACA,gBACA,iBACA,oBACA,YACA,0BACD,SAASC,EACRC,EACAC,EACAC,EACAC,EACAC,EACAC,GAMA,IAAIC,EAAW,CAMXC,kBAAmB,WACf,OAAOF,EAAKG,KAAK,CAAC,CACdC,WAAc,8CACdC,KAAQ,MACR,KAORC,GAAS,EAmCb,SAASC,IACLb,EAAE,kBAAkBc,GAAG,QAAS,SAASC,GACrC,IAAIC,EAAQC,KACZF,EAAMG,iBACN,IAAIC,EAAOnB,EAAEiB,MAAMG,KAAK,QAOxB,OANAhB,EAAUiB,OACN,6BAA+BF,EAAO,SACtCnB,EAAEiB,MAAMG,QACVE,KAAK,SAASC,EAAMC,IAnC9B,SAA2BC,EAASF,EAAMC,GACtC,IAAIL,EAAOnB,EAAEyB,GAASL,KAAK,QAE3BM,QAAQ,CAAC,6BAA+BP,GAAO,SAASQ,GACpD1B,EAAa2B,OAAO,CAChBC,MAAOC,EAAEC,KAAKC,WAAW,SAAWb,EAAM,6BAC1CA,KAAMlB,EAAagC,MAAMC,aAC1BlC,EAAE,YAAYsB,KAAK,SAASa,GAC3B/B,EAAUgC,oBAAoBD,EAAME,KAAMd,EAAMC,GAChDW,EAAMG,OACNH,EAAMI,kBAAkBT,EAAEC,KAAKC,WAAW,SAAU,8BACpDG,EAAMK,UAAU1B,GAAGZ,EAAYuC,KAAM,SAASC,GAE1CA,EAAExB,iBACFS,EAASgB,eAAe3C,EAAEyB,GAASL,OAAQe,KAI/CA,EAAMK,UAAU1B,GAAGZ,EAAY0C,OAAQ,WACnCT,EAAMU,gBAiBVC,CAAkB9B,EAAOO,EAAMC,KAChCuB,KAAK1C,EAAa2C,YACd,IAOf,SAASC,IACS,GAAVrC,IAGJZ,EAAE,wCAAwCkD,OAC1ClD,EAAE,wCAAwCsC,OAC1CnC,EAASgD,aAAa,4BAA6B,YAAa,EAAG,IAClE7B,KAAK,SAASC,EAAMC,GACjBpB,EAAUgC,oBAAoB,uCAAwCb,EAAMC,GAC5ExB,EAAE,wCAAwCkD,OAC1ClD,EAAE,wCAAwCsC,OAC1C1B,GAAS,IACVmC,KAAK1C,EAAa2C,YA0CzB,MAAO,CACHI,KAAM,SAASC,GACXxC,IArCR,SAAoBwC,GAGhBrD,EAAEqD,EAAO,gBAAgBvC,GAAG,QAAS,SAAS4B,GAC1CA,EAAExB,iBACFlB,EAAEiB,MAAMqC,IAAI,UAIhBtD,EAAEqD,EAAO,uBAAuBvC,GAAG,QAAS,WACxCP,EAASC,oBACRc,KAAK,SAASiC,GACPA,IACA3C,GAAS,EACTqC,OAGPF,KAAK1C,EAAa2C,aAqBnBQ,CAAWH,IAEfI,WAfJ,WACIzD,EAAE0D,UAAUC,MAAM,WACd3D,EAAE,iCAAiCc,GAAG,QAAS,WAC3CmC,MAEAjD,EAAE,iCAAiC4D,GAAG,YACtCX","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Main js for template importer\n *\n * @module     local/edwisersiteimporter\n * @package    local_edwisersiteimporter\n * @author     Yogesh Shirsath\n * @copyright  (c) 2020 WisdmLabs (https://wisdmlabs.com/) <support@wisdmlabs.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/fragment',\n    'core/templates',\n    'core/notification',\n    'core/ajax',\n    'core/modal_save_cancel'\n], function($,\n    ModalFactory,\n    ModalEvents,\n    Fragment,\n    Templates,\n    Notification,\n    Ajax\n) {\n\n    /**\n     * Promises declaration.\n     */\n    let PROMISES = {\n        /**\n         * Refresh templates list.\n         * @returns {Promise} Ajax promise\n         */\n        // eslint-disable-next-line camelcase\n        refresh_templates: function() {\n            return Ajax.call([{\n                'methodname': 'local_edwisersiteimporter_refresh_templates',\n                'args': {}\n            }])[0];\n        }\n    };\n\n    /**\n     * Check whether importer content is loaded.\n     */\n    let loaded = false;\n\n    /**\n     * Show template importer modal\n     * @param {DOM}    element Template element\n     * @param {string} html    HTML content\n     * @param {string} js      Javascript content\n     */\n    function showTemplateModal(element, html, js) {\n        var type = $(element).data('type');\n        // Invoke template importer\n        require(['local_edwisersiteimporter/' + type], function(template) {\n            ModalFactory.create({\n                title: M.util.get_string('import' + type, 'local_edwisersiteimporter'),\n                type: ModalFactory.types.SAVE_CANCEL\n            }, $('#create')).done(function(modal) {\n                Templates.replaceNodeContents(modal.body, html, js);\n                modal.show();\n                modal.setSaveButtonText(M.util.get_string('import', 'local_edwisersiteimporter'));\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    // Stop the default save button behaviour which is to close the modal.\n                    e.preventDefault();\n                    template.importTemplate($(element).data(), modal);\n                });\n\n                // Destroy modal when hidden.\n                modal.getRoot().on(ModalEvents.hidden, function() {\n                    modal.destroy();\n                });\n            });\n        });\n    }\n    /**\n     * Initialize template chooser\n     */\n    function initTemplateChooser() {\n        $('.view-template').on('click', function(event) {\n            var _this = this;\n            event.preventDefault();\n            var type = $(this).data('type');\n            Templates.render(\n                'local_edwisersiteimporter/' + type + '_modal',\n                $(this).data()\n            ).done(function(html, js) {\n                showTemplateModal(_this, html, js);\n            }).fail(Notification.exception);\n            return false;\n        });\n    }\n\n    /**\n     * Load view\n     */\n    function loadView() {\n        if (loaded == true) {\n            return;\n        }\n        $('#edwisersiteimporter .templates-list').hide();\n        $('#edwisersiteimporter .loader-wrapper').show();\n        Fragment.loadFragment('local_edwisersiteimporter', 'load_view', 1, {})\n        .done(function(html, js) {\n            Templates.replaceNodeContents('#edwisersiteimporter .templates-list', html, js);\n            $('#edwisersiteimporter .loader-wrapper').hide();\n            $('#edwisersiteimporter .templates-list').show();\n            loaded = true;\n        }).fail(Notification.exception);\n    }\n\n    /**\n     * Initialize events.\n     * @param {string} root Importer root element id\n     */\n    function initEvents(root) {\n\n        // Initialize tabs.\n        $(root + ' .nav-tabs a').on('click', function(e) {\n            e.preventDefault();\n            $(this).tab('show');\n        });\n\n        // Initialize refresh button.\n        $(root + ' #refresh-templates').on('click', function() {\n            PROMISES.refresh_templates()\n            .done(function(status) {\n                if (status) {\n                    loaded = false;\n                    loadView();\n                }\n            })\n            .fail(Notification.exception);\n        });\n\n    }\n\n    /**\n     * Initialize view loader.\n     */\n    function initLoader() {\n        $(document).ready(function() {\n            $('[href=\"#edwisersiteimporter\"]').on('click', function() {\n                loadView();\n            });\n            if ($('[href=\"#edwisersiteimporter\"]').is('.active')) {\n                loadView();\n            }\n        });\n    }\n    return {\n        init: function(root) {\n            initTemplateChooser();\n            initEvents(root);\n        },\n        initLoader: initLoader\n    };\n});\n"],"file":"main.min.js"}